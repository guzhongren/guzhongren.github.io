<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:follow="https://follow.is/ns" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><follow_challenge><feedId>74621993392456704</feedId><userId>74619979585483776</userId></follow_challenge><title>谷中仁的博客</title><link>https://guzhongren.github.io/</link><description>谷中仁的博客feedId:74621993392456704+userId:74619979585483776</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>guzhongren@live.cn (谷中仁)</managingEditor><webMaster>guzhongren@live.cn (谷中仁)</webMaster><copyright>Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 16 May 2025 10:15:31 +0800</lastBuildDate><atom:link href="https://guzhongren.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>主题文档 - mermaid Shortcode</title><link>https://guzhongren.github.io/2020/03/theme-documentation-mermaid-shortcode/</link><pubDate>Tue, 03 Mar 2020 15:29:59 +0800</pubDate><author>Dillon</author><guid>https://guzhongren.github.io/2020/03/theme-documentation-mermaid-shortcode/</guid><description><![CDATA[<a href="https://github.com/dillonzq/LoveIt/releases/tag/v0.2.11" rel="noopener noreffer" target="_blank"></a>
<p><code>mermaid</code> shortcode 使用 <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener noreffer ">Mermaid</a> 库提供绘制图表和流程图的功能.</p>
<p><a href="https://mermaidjs.github.io/" target="_blank" rel="noopener noreffer ">mermaid</a> 是一个可以帮助你在文章中绘制图表和流程图的库, 类似 Markdown 的语法.</p>
<p>只需将你的 mermaid 代码插入 <code>mermaid</code> shortcode 中即可.</p>
<h2 id="flowchart">流程图</h2>
<p>一个 <strong>流程图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">graph LR;
</span></span><span class="line"><span class="cl">    A[Hard edge] --&gt;|Link text| B(Round edge)
</span></span><span class="line"><span class="cl">    B --&gt; C{Decision}
</span></span><span class="line"><span class="cl">    C --&gt;|One| D[Result one]
</span></span><span class="line"><span class="cl">    C --&gt;|Two| E[Result two]
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-1"></div>
<h2 id="sequence-diagram">时序图</h2>
<p>一个 <strong>时序图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">sequenceDiagram
</span></span><span class="line"><span class="cl">    participant Alice
</span></span><span class="line"><span class="cl">    participant Bob
</span></span><span class="line"><span class="cl">    Alice-&gt;&gt;John: Hello John, how are you?
</span></span><span class="line"><span class="cl">    loop Healthcheck
</span></span><span class="line"><span class="cl">        John-&gt;John: Fight against hypochondria
</span></span><span class="line"><span class="cl">    end
</span></span><span class="line"><span class="cl">    Note right of John: Rational thoughts <span class="p">&lt;</span><span class="nt">br</span><span class="p">/&gt;</span>prevail...
</span></span><span class="line"><span class="cl">    John--&gt;Alice: Great!
</span></span><span class="line"><span class="cl">    John-&gt;Bob: How about you?
</span></span><span class="line"><span class="cl">    Bob--&gt;John: Jolly good!
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-2"></div>
<h2 id="gantt">甘特图</h2>
<p>一个 <strong>甘特图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">gantt
</span></span><span class="line"><span class="cl">dateFormat  YYYY-MM-DD
</span></span><span class="line"><span class="cl">title Adding GANTT diagram to mermaid
</span></span><span class="line"><span class="cl">excludes weekdays 2014-01-10
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">section A section
</span></span><span class="line"><span class="cl">Completed task            :done,    des1, 2014-01-06,2014-01-08
</span></span><span class="line"><span class="cl">Active task               :active,  des2, 2014-01-09, 3d
</span></span><span class="line"><span class="cl">Future task               :         des3, after des2, 5d
</span></span><span class="line"><span class="cl">Future task2              :         des4, after des3, 5d
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-3"></div>
<h2 id="class-diagram">类图</h2>
<p>一个 <strong>类图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">classDiagram
</span></span><span class="line"><span class="cl">    Animal <span class="err">&lt;</span>|-- Duck
</span></span><span class="line"><span class="cl">    Animal <span class="err">&lt;</span>|-- Fish
</span></span><span class="line"><span class="cl">    Animal <span class="err">&lt;</span>|-- Zebra
</span></span><span class="line"><span class="cl">    Animal : +int age
</span></span><span class="line"><span class="cl">    Animal : +String gender
</span></span><span class="line"><span class="cl">    Animal: +isMammal()
</span></span><span class="line"><span class="cl">    Animal: +mate()
</span></span><span class="line"><span class="cl">    class Duck{
</span></span><span class="line"><span class="cl">        +String beakColor
</span></span><span class="line"><span class="cl">        +swim()
</span></span><span class="line"><span class="cl">        +quack()
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    class Fish{
</span></span><span class="line"><span class="cl">        -int sizeInFeet
</span></span><span class="line"><span class="cl">        -canEat()
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    class Zebra{
</span></span><span class="line"><span class="cl">        +bool is_wild
</span></span><span class="line"><span class="cl">        +run()
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-4"></div>
<h2 id="state-diagram">状态图</h2>
<p>一个 <strong>状态图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">stateDiagram-v2
</span></span><span class="line"><span class="cl">    [*] --&gt; Still
</span></span><span class="line"><span class="cl">    Still --&gt; [*]
</span></span><span class="line"><span class="cl">    Still --&gt; Moving
</span></span><span class="line"><span class="cl">    Moving --&gt; Still
</span></span><span class="line"><span class="cl">    Moving --&gt; Crash
</span></span><span class="line"><span class="cl">    Crash --&gt; [*]
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-5"></div>
<h2 id="git-graph">Git 图</h2>
<p>一个 <strong>Git 图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">gitGraph
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    branch develop
</span></span><span class="line"><span class="cl">    checkout develop
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    checkout main
</span></span><span class="line"><span class="cl">    merge develop
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">    commit
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-6"></div>
<h2 id="entity-relationship-diagram">实体关系图</h2>
<p>一个 <strong>实体关系图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">erDiagram
</span></span><span class="line"><span class="cl">    CUSTOMER ||--o{ ORDER : places
</span></span><span class="line"><span class="cl">    ORDER ||--|{ LINE-ITEM : contains
</span></span><span class="line"><span class="cl">    CUSTOMER }|..|{ DELIVERY-ADDRESS : uses
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-7"></div>
<h2 id="user-journey">用户体验旅程图</h2>
<p>一个 <strong>用户体验旅程图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">journey
</span></span><span class="line"><span class="cl">    title My working day
</span></span><span class="line"><span class="cl">    section Go to work
</span></span><span class="line"><span class="cl">      Make tea: 5: Me
</span></span><span class="line"><span class="cl">      Go upstairs: 3: Me
</span></span><span class="line"><span class="cl">      Do work: 1: Me, Cat
</span></span><span class="line"><span class="cl">    section Go home
</span></span><span class="line"><span class="cl">      Go downstairs: 5: Me
</span></span><span class="line"><span class="cl">      Sit down: 5: Me
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-8"></div>
<h2 id="pie">饼图</h2>
<p>一个 <strong>饼图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">pie
</span></span><span class="line"><span class="cl">    &#34;Dogs&#34; : 386
</span></span><span class="line"><span class="cl">    &#34;Cats&#34; : 85
</span></span><span class="line"><span class="cl">    &#34;Rats&#34; : 15
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-9"></div>
<h2 id="requirement-diagram">依赖图</h2>
<p>一个 <strong>依赖图</strong> <code>mermaid</code> 示例:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-markdown">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-markdown" data-lang="markdown"><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="nt">mermaid</span> <span class="p">&gt;</span>}}
</span></span><span class="line"><span class="cl">requirementDiagram
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">requirement test_req {
</span></span><span class="line"><span class="cl">id: 1
</span></span><span class="line"><span class="cl">text: the test text.
</span></span><span class="line"><span class="cl">risk: high
</span></span><span class="line"><span class="cl">verifymethod: test
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">element test_entity {
</span></span><span class="line"><span class="cl">type: simulation
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">test_entity - satisfies -&gt; test_req
</span></span><span class="line"><span class="cl">{{<span class="p">&lt;</span> <span class="p">/</span><span class="nt">mermaid</span> <span class="p">&gt;</span>}}</span></span></code></pre></div></div>
<p>呈现的输出效果如下:</p>
<div class="mermaid" id="id-10"></div>]]></description></item><item><title>基于Strapi开发Headless CMS的基建入门</title><link>https://guzhongren.github.io/2025/05/%E5%9F%BA%E4%BA%8Estrapi%E5%BC%80%E5%8F%91headless-cms%E7%9A%84%E5%9F%BA%E5%BB%BA%E5%85%A5%E9%97%A8/</link><pubDate>Fri, 16 May 2025 10:15:31 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2025/05/%E5%9F%BA%E4%BA%8Estrapi%E5%BC%80%E5%8F%91headless-cms%E7%9A%84%E5%9F%BA%E5%BB%BA%E5%85%A5%E9%97%A8/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="简介">简介</h2>
<p>在现代电商和企业网站中，内容需要频繁变更。理想的系统应支持后台灵活编辑内容，前端自动渲染，无需频繁重构和部署。以电商为例，产品信息、价格、描述等常常调整，页面布局也需随时优化。对于缺乏开发经验的运营人员，易用的 CMS 能极大提升效率和响应速度。</p>
<h2 id="strapi简介">Strapi简介</h2>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Tips<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><a href="https://strapi.io/" target="_blank" rel="noopener noreffer ">Strapi</a> 是一个 API 级低代码内容管理系统（Headless CMS）。</div>
        </div>
    </div>
<p>Strapi 是开源、灵活的 Headless CMS，支持多数据库和多前端框架。它提供内容建模、权限管理、插件扩展等能力，适合各种规模项目。前后端分离架构让前端可用 React/Vue/Angular 等技术开发，后端通过 Strapi API 提供数据，提升开发效率、降低维护成本。</p>
<p>主要特性包括：</p>
<ul>
<li><strong>开源</strong>，可自由使用和定制</li>
<li><strong>灵活内容建模</strong>，支持多数据类型和关系</li>
<li><strong>自动生成 RESTful/GraphQL API</strong></li>
<li><strong>插件机制</strong>，可扩展功能和集成第三方服务</li>
<li><strong>多数据库支持</strong>（MongoDB、PostgreSQL、MySQL 等）</li>
<li><strong>权限管理</strong>，细粒度控制访问</li>
<li><strong>多语言内容管理</strong></li>
<li><strong>活跃社区与丰富文档</strong></li>
</ul>
<h2 id="主要流程">主要流程</h2>
<p></p>
<ol>
<li>设计内容模型（Content Types/Components）
<ul>
<li>使用内容类型构建器（Content-Type Builder）将页面的内容抽象出来，形成如 Design Token 级别的组件，和可复用的中度复杂的组件。</li>
</ul>
</li>
<li>创建网站结构及内容
<ul>
<li>构建网站结构，可通过组合之前创建的各种组件来形成结构。</li>
<li>创建网站的具体内容，如文章、产品、用户等，并使他们关联起来，比如博客需要有作者、分类、标签等。</li>
</ul>
</li>
<li>配置 API 权限与插件
<ul>
<li>配置 API 的权限，决定哪些用户可以访问、修改、删除内容，一般情况会将所有的内容以只读的方式暴露给前端。</li>
</ul>
</li>
<li>通过 API 管理和获取内容
<ul>
<li>前端通过 Strapi 提供的 RESTful， StrapiClient 或 GraphQL API 获取内容。</li>
</ul>
</li>
<li>前端动态渲染内容
<ul>
<li>前端根据内容类型和结构动态渲染页面。</li>
</ul>
</li>
</ol>
<h2 id="主要概念">主要概念</h2>
<h3 id="content-types-builder">Content Types Builder</h3>
<p>内容类型构建器是 Strapi 的核心，可视化创建和管理内容类型。支持灵活定义字段、数据类型、验证规则，便于内容建模和结构调整。</p>
<h3 id="components">Components</h3>
<p>组件实现内容结构复用。可将常用结构（如作者信息、SEO 配置等）封装为组件，在多个内容类型中引用，支持嵌套组合，提升建模灵活性。</p>
<h3 id="single-types">Single Types</h3>
<p>单一类型（Single Type）适合全站唯一内容，如“关于我们”、“站点设置”等。每种单一类型仅有一个条目，结构可自定义，便于集中管理全局内容。</p>
<h3 id="collections">Collections</h3>
<p>集合类型（Collection Type）用于管理多条同类内容，如文章、产品、用户等。每个集合类型可包含多个字段和组件，是内容批量管理和 API 构建的基础。</p>
<h3 id="dynamic-zones">Dynamic Zones</h3>
<p>动态区域（Dynamic Zone）允许在单字段中组合多种组件，实现内容结构高度自定义。适用于富文本、页面构建器等场景，支持多类型组件共存和嵌套。</p>
<h3 id="api">API</h3>
<p>Strapi 自动为每个内容类型生成 RESTful 或 GraphQL API，支持内容的增删改查，便于前后端分离和多端接入。</p>
<h3 id="plugins">Plugins</h3>
<p>插件用于扩展 Strapi 功能，如权限管理、内容版本控制、第三方集成等。官方和社区插件丰富，也支持自定义开发。</p>
<h2 id="进阶">进阶</h2>
<p>使用Strapi API 时有时需要对请求参数进行预处理，比如验证、转换等。可以通过中间件（Middleware）来实现。</p>
<h3 id="将请求参数置于-strapi-middlewarehttpsdocsstrapiiocmsbackend-customizationmiddlewares-中">将请求参数置于 <a href="https://docs.strapi.io/cms/backend-customization/middlewares" target="_blank" rel="noopener noreffer ">Strapi Middleware</a> 中</h3>
<p>如果要获取一个 Global Page的内容，普通情况下，我们会把查询参数放在URL 的query中，比如：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code>http://localhost:1337/api/global?populate[header][populate][0]=navItems&amp;populate[footer][populate][0]=socialLinks.Link</code></pre></div>
<p>通常情况呢，这个 url 的请求参数一般不会改变，每次都要返回Global Page 的所有内容，那么我们就可以把这个请求参数放在中间件中，避免每次都要在 URL 中传递。我们在请求时直接使用url <code>http://localhost:1337/api/global</code> 即可，而不用带query参数。
这样做的好处是：</p>
<ol>
<li>代码可读性更高</li>
<li>减少了 URL 的复杂度</li>
<li>方便后期维护和修改</li>
</ol>
<p>可通过中间件（Middleware）统一处理请求参数。基本步骤：</p>
<ol>
<li>可使用 <a href="https://docs.strapi.io/cms/cli#strapi-generate" target="_blank" rel="noopener noreffer ">strapi generate:middleware</a> 命令生成中间件
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">pnpm run strapi generate
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; my-strapi-project@0.1.0 strapi ~/01.Personal/tmp/my-strapi-project
</span></span><span class="line"><span class="cl">&gt; strapi <span class="s2">&#34;generate&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">? Strapi Generators middleware - Generate a middleware <span class="k">for</span> an API
</span></span><span class="line"><span class="cl">? Middleware name global-page-populate
</span></span><span class="line"><span class="cl">? Where <span class="k">do</span> you want to add this middleware? Add middleware to an existing API
</span></span><span class="line"><span class="cl">? Which API is this <span class="k">for</span>? global
</span></span><span class="line"><span class="cl">✔  ++ /api/global/middlewares/global-page-populate.ts</span></span></code></pre></div></div>
</li>
<li>定义中间件函数并处理 <code>ctx.query</code>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-ts">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"> <span class="kr">import</span> <span class="kr">type</span> <span class="p">{</span> <span class="nx">Core</span> <span class="p">}</span> <span class="kr">from</span> <span class="s1">&#39;@strapi/strapi&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> <span class="kr">const</span> <span class="nx">populate</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="nx">header</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nx">populate</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;navItems&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="p">},</span>
</span></span><span class="line"><span class="cl">   <span class="nx">banner</span>: <span class="kt">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nx">footer</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nx">populate</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;logo&#34;</span><span class="p">,</span> <span class="s2">&#34;navItems&#34;</span><span class="p">,</span> <span class="s2">&#34;socialLinks&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl"> <span class="p">}</span>
</span></span><span class="line"><span class="cl"> <span class="c1">// 获取 dynamic zone 的内容
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">// const populate = {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//   blocks: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//     on: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//       &#34;blocks.hero&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//         populate: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//           links: true,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//           image: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//             fields: [&#34;url&#34;, &#34;name&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//           }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//         },
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//       },
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//       &#34;blocks.heading-section&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//         populate: &#39;*&#39;,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//       }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//     }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//   }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">// }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"> <span class="kr">export</span> <span class="k">default</span> <span class="p">(</span><span class="nx">config</span><span class="p">,</span> <span class="p">{</span> <span class="nx">strapi</span> <span class="p">}</span><span class="o">:</span> <span class="p">{</span> <span class="nx">strapi</span>: <span class="kt">Core.Strapi</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="k">return</span> <span class="kr">async</span> <span class="p">(</span><span class="nx">ctx</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nx">ctx</span><span class="p">.</span><span class="nx">query</span><span class="p">.</span><span class="nx">populate</span> <span class="o">=</span> <span class="nx">populate</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">     <span class="nx">strapi</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">&#39;In global-page-populate middleware.&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">     <span class="k">await</span> <span class="nx">next</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">   <span class="p">};</span>
</span></span><span class="line"><span class="cl"> <span class="p">};</span></span></span></code></pre></div></div>
</li>
<li>在 <code>src/api/global/routes/global.ts</code> 注册中间件
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-ts">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl">  <span class="kr">import</span> <span class="p">{</span> <span class="nx">factories</span> <span class="p">}</span> <span class="kr">from</span> <span class="s1">&#39;@strapi/strapi&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">export</span> <span class="k">default</span> <span class="nx">factories</span><span class="p">.</span><span class="nx">createCoreRouter</span><span class="p">(</span><span class="s1">&#39;api::global.global&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">config</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">find</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">middlewares</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;api::global.global-page-populate&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span></span></span></code></pre></div></div>
</li>
<li>使用API 请求测试等工具测试
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">curl <span class="s1">&#39;http://localhost:1337/api/global&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 应该返回Global Page 的所有内容</span></span></span></code></pre></div></div>
</li>
</ol>
<h3 id="前端动态渲染-dynamic-zone-组件">前端动态渲染 Dynamic Zone 组件</h3>
<p>前端可根据后端返回的 Dynamic Zone 数据动态渲染组件，为代码如下：</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-tsx">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-tsx" data-lang="tsx"><span class="line"><span class="cl"><span class="p">...</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">componentMap</span>: <span class="kt">Record</span><span class="p">&lt;</span><span class="nt">ComponentType</span><span class="err">,</span> <span class="na">any</span><span class="p">&gt;</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.hero&#34;</span><span class="o">:</span> <span class="nx">Hero</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.heading-section&#34;</span><span class="o">:</span> <span class="nx">HeadingSection</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.card-grid&#34;</span><span class="o">:</span> <span class="nx">CardGrid</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.content-with-image&#34;</span><span class="o">:</span> <span class="nx">ContentWithImage</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.faqs&#34;</span><span class="o">:</span> <span class="nx">Faqs</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.person-card&#34;</span><span class="o">:</span> <span class="nx">PersonCard</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.markdown&#34;</span><span class="o">:</span> <span class="nx">Markdown</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.featured-articles&#34;</span><span class="o">:</span> <span class="nx">FeaturedArticles</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.newsletter&#34;</span><span class="o">:</span> <span class="nx">Newsletter</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">...</span>
</span></span><span class="line"><span class="cl"> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">blocksFromAPI</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">block</span>: <span class="kt">BlockData</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">Component</span> <span class="o">=</span> <span class="nx">componentMap</span><span class="p">[</span><span class="nx">block</span><span class="p">.</span><span class="nx">__component</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="nx">Component</span> <span class="o">?</span> <span class="p">&lt;</span><span class="nt">Component</span> <span class="na">data</span><span class="o">=</span><span class="p">{</span><span class="nx">block</span><span class="p">}</span> <span class="p">/&gt;</span> <span class="o">:</span> <span class="kc">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span></span></span></code></pre></div></div>
<h2 id="总结">总结</h2>
<p>Strapi 是一个强大的 Headless CMS，适合快速构建和管理内容驱动的应用。通过灵活的内容建模、API 生成和插件扩展，Strapi 能满足各种项目需求。本文介绍了 Strapi 的基本概念、主要流程和进阶用法，希望能帮助你快速上手。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
<li><a href="https://strapi.io/documentation/developer-docs/latest/getting-started/introduction.html" target="_blank" rel="noopener noreffer ">Strapi 官方文档</a></li>
<li><a href="https://docs.strapi.io/cms/api/rest/interactive-query-builder" target="_blank" rel="noopener noreffer ">Strapi interactive query builder</a></li>
<li><a href="https://docs.strapi.io/cms/backend-customization/middlewares" target="_blank" rel="noopener noreffer ">Strapi Middleware</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此<a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a>进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item><item><title>软件开发中的跨功能性需求（RFC）</title><link>https://guzhongren.github.io/2025/04/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E8%B7%A8%E5%8A%9F%E8%83%BD%E6%80%A7%E9%9C%80%E6%B1%82rfc/</link><pubDate>Mon, 28 Apr 2025 08:40:12 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2025/04/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E8%B7%A8%E5%8A%9F%E8%83%BD%E6%80%A7%E9%9C%80%E6%B1%82rfc/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="引言">引言</h2>
<p>作为程序员的你，正在开发一款基于全球地图的某资源分布网站，你的产品会被各个国家的人使用，而每个国家都有不同的法律法规和文化习惯。你需要考虑到这些因素，以确保你的产品在全球范围内都能正常使用。比如有争议的边界不能让用户看到对自己国家不利的标记，那么你需要怎么做呢？这时候，你就需要考虑跨功能性需求了。</p>
<h3 id="什么是跨功能性需求">什么是跨功能性需求</h3>
<p>跨功能性需求（Cross-Functional Requirements, CFRs）是指那些不直接与特定功能相关，但对整个系统的质量、性能和用户体验有重要影响的需求。例如，性能、安全性和可扩展性等。这些需求通常被称为“非功能性需求”，但它们对系统的成功至关重要。</p>
<h3 id="其在软件开发中的重要性">其在软件开发中的重要性</h3>
<p>跨功能性需求贯穿于软件开发的各个阶段，直接影响系统的稳定性、用户满意度和长期维护成本。例如，在一个实时通信应用中，低延迟（性能需求）和数据加密（安全性需求）是用户体验的核心。如果忽视这些需求，可能导致系统在高负载或恶意攻击下崩溃，甚至无法满足用户的基本期望。</p>
<h2 id="跨功能性需求详细讨论">跨功能性需求详细讨论</h2>
<table>
  <thead>
      <tr>
          <th>需求类别</th>
          <th>具体问题</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>可扩展性（Extensibility）</strong></td>
          <td>是否需要组件化？是否需要提供一个插件功能，由谁来实施？</td>
      </tr>
      <tr>
          <td><strong>可移植性（Portability）</strong></td>
          <td>是否有迁移到另一个数据库产品或操作系统的必要性？</td>
      </tr>
      <tr>
          <td><strong>可安装性和可部署性（Installability &amp; Deployment）</strong></td>
          <td>需要提供什么样的基础设施？需要什么样的安装便利性？是否支持持续交付？如何回滚或升级版本？</td>
      </tr>
      <tr>
          <td><strong>兼容性（Compatibility）</strong></td>
          <td>需要与哪些其他系统集成？需要遵循哪些行业标准？是否需要考虑现有数据格式？</td>
      </tr>
      <tr>
          <td><strong>可集成性和互操作性（Integratability &amp; Interoperability）</strong></td>
          <td>是否需要提供 API 或库供其他系统使用？版本管理和升级策略是什么？</td>
      </tr>
      <tr>
          <td><strong>可复用性（Leveragability &amp; Reuse）</strong></td>
          <td>是否能够复用企业现有组件/库，或者当前组件/库是否将被重用？</td>
      </tr>
      <tr>
          <td><strong>可伸缩性（Scalability）</strong></td>
          <td>如何根据不断变化的用户量来提高吞吐量？如何对此进行测试？</td>
      </tr>
      <tr>
          <td><strong>版本化和升级策略（Versioning and upgrades）</strong></td>
          <td>版本化策略是什么？如何跟踪内部/外部的版本？有没有向后兼容的限制？</td>
      </tr>
      <tr>
          <td><strong>可访问性（Accessibility）</strong></td>
          <td>是否支持有特殊需要的用户（如读屏）？</td>
      </tr>
      <tr>
          <td><strong>本地化和国际化（Localisation &amp; Internationalisation）</strong></td>
          <td>是否支持多语言？日期/时间/货币的转换和翻译？</td>
      </tr>
      <tr>
          <td><strong>可用性和用户体验（Usability and user experience）</strong></td>
          <td>用户体验对系统有多重要？是否有公司用户体验准则？是否支持多设备？</td>
      </tr>
      <tr>
          <td><strong>分布性（Distributability）</strong></td>
          <td>系统是否能在特定区域使用？是否支持离线运行？如何同步信息？</td>
      </tr>
      <tr>
          <td><strong>帮助与支持（Help &amp; Support）</strong></td>
          <td>是否需要用户文档、教程或支持团队？是否需要计划培训？</td>
      </tr>
      <tr>
          <td><strong>可配置性（Configurability）</strong></td>
          <td>用户或管理员是否可以配置功能？如何进行配置管理？</td>
      </tr>
      <tr>
          <td><strong>支持性（Supportability）</strong></td>
          <td>用户/操作支持的级别是什么？如何提供支持？</td>
      </tr>
      <tr>
          <td><strong>归档（Archiving）</strong></td>
          <td>归档什么信息？何时归档？如何归档？谁可以访问归档信息？</td>
      </tr>
      <tr>
          <td><strong>可用性（Availability）</strong></td>
          <td>是否有可用性目标？需要什么架构来满足这些要求？是否有高峰负载需求？</td>
      </tr>
      <tr>
          <td><strong>容量（Capacity）</strong></td>
          <td>是否有存储要求？高峰负载如何处理？系统需要处理的数据量和用户数量？</td>
      </tr>
      <tr>
          <td><strong>连续性（Continuity）</strong></td>
          <td>是否有灾难恢复计划？</td>
      </tr>
      <tr>
          <td><strong>数据完整性和一致性（Data Integrity and Consistency）</strong></td>
          <td>是否需要数据校验、日志追踪或数据恢复机制？</td>
      </tr>
      <tr>
          <td><strong>可维护性（Maintainability）</strong></td>
          <td>最大可容忍停机时间是什么？是否有停机通知要求？错误页面如何处理？</td>
      </tr>
      <tr>
          <td><strong>监控（Monitoring）</strong></td>
          <td>应该衡量哪些业务/技术指标？如何监测？需要哪些警报？</td>
      </tr>
      <tr>
          <td><strong>多环境支持（Multiple Environment Support）</strong></td>
          <td>需要多少环境？如何配置和管理这些环境？</td>
      </tr>
      <tr>
          <td><strong>性能（Performance）</strong></td>
          <td>吞吐量/响应时间要求是什么？是否需要性能测试？是否需要考虑异步场景？</td>
      </tr>
      <tr>
          <td><strong>弹性和容错性（Resilience &amp; Fault Tolerance）</strong></td>
          <td>如果外部依赖失效，系统如何降级？</td>
      </tr>
      <tr>
          <td><strong>可靠性（Reliability）</strong></td>
          <td>不可靠的成本是什么？需要多少成本来保证可靠？</td>
      </tr>
      <tr>
          <td><strong>可审计性（Auditability）</strong></td>
          <td>哪些操作需要被跟踪？是否有法律或监管要求？</td>
      </tr>
      <tr>
          <td><strong>认证（Authentication）</strong></td>
          <td>如何鉴别用户身份？是否遵循标准或使用现有认证系统？</td>
      </tr>
      <tr>
          <td><strong>授权（Authorisation）</strong></td>
          <td>哪些角色和权限是必要的？如何维护和应用权限？</td>
      </tr>
      <tr>
          <td><strong>法律合规性（Legal Compliance）</strong></td>
          <td>是否有数据/系统或软件交付过程的法律限制？</td>
      </tr>
      <tr>
          <td><strong>数据隐私（Data Privacy）</strong></td>
          <td>哪些数据需要加密？哪些数据对用户和操作人员可见/隐藏？如何处理脱敏？</td>
      </tr>
      <tr>
          <td><strong>安全性（Security）</strong></td>
          <td>是否需要安全审计或渗透测试？企业的安全准则是什么？是否有 SSL 或 VPN 要求？</td>
      </tr>
  </tbody>
</table>
<h2 id="跨功能性需求的挑战">跨功能性需求的挑战</h2>
<h3 id="难以量化和验证">难以量化和验证</h3>
<p>跨功能性需求的定义通常较为模糊。例如：</p>
<ul>
<li>性能需求可能以“系统应快速响应”描述，但“快速”缺乏具体标准。</li>
<li>安全性需求可能以“系统应安全”描述，但安全的程度难以量化。</li>
</ul>
<h4 id="解决方法">解决方法</h4>
<ul>
<li>使用具体的指标定义需求，例如“响应时间小于 200 毫秒”。</li>
<li>借助工具（如 JMeter）进行性能测试，或使用安全扫描工具（如 OWASP ZAP）验证安全性。</li>
</ul>
<h3 id="与功能性需求的冲突">与功能性需求的冲突</h3>
<p>跨功能性需求可能与功能性需求发生冲突。例如：</p>
<ul>
<li>为了提高性能，可能需要简化某些功能。</li>
<li>为了增强安全性，可能会增加用户操作的复杂性。</li>
</ul>
<h4 id="实例权衡性能与安全性">实例：权衡性能与安全性</h4>
<p>某在线支付系统在设计时，为了提高性能，采用了分布式架构；但为了保证安全性，又引入了多层加密和双因子认证。</p>
<h2 id="如何发现跨功能性需求">如何发现跨功能性需求</h2>
<p></p>
<p>跨功能需求影响着软件的整个生命周期，在项目交付过程中，可以根据软件产品的目标和特点，从以下几个视角来收集和确定跨功能需求：</p>
<ul>
<li><strong>研发团队视角</strong>，关注软件研发过程中的跨功能特性，包括软件架构设计相关的一些特性，如可扩展性、可移植性、可伸缩性、兼容性等。</li>
<li><strong>用户视角</strong>，关注软件使用过程中的跨功能特性，关注用户体验，如设备兼容性、可访问性、可配置性等。</li>
<li><strong>运维团队视角</strong>，关注软件维护过程中的跨功能特性，包括基础设施运营维护、数据维护、故障恢复相关的一些特性，如性能、可用性、容量、监控、熔断降级策略等。</li>
<li><strong>安全审计团队视角</strong>，关注软件全生命周期的安全相关的跨功能特性，大部分企业有专门的安全审计部门，会对软件产品的安全提出很多需求，如可审计性，法律合规性，数据隐私性。</li>
</ul>
<h2 id="解决方案与实践">解决方案与实践</h2>
<h3 id="需求优先级的设定">需求优先级的设定</h3>
<p>通过与利益相关者协商，明确跨功能性需求的优先级。例如：</p>
<ul>
<li>使用 MoSCoW 方法（Must, Should, Could, Won&rsquo;t）分类需求。</li>
<li>在项目初期定义关键性能指标（KPIs）和安全目标。</li>
</ul>
<h4 id="实例敏捷开发中的需求优先级">实例：敏捷开发中的需求优先级</h4>
<p>某团队在敏捷开发中，每个迭代周期都会评估跨功能性需求的优先级，并在冲刺计划中分配资源。</p>
<h3 id="跨团队协作的重要性">跨团队协作的重要性</h3>
<p>跨功能性需求通常涉及多个团队的协作。例如：</p>
<ul>
<li>开发团队需要与运维团队合作，确保系统的可扩展性。</li>
<li>安全团队需要与开发团队合作，进行代码审查和漏洞修复。</li>
</ul>
<h4 id="实例devsecops-实践">实例：DevSecOps 实践</h4>
<p>某企业通过 DevSecOps 实践，将安全性集成到开发和运维流程中，确保跨功能性需求在整个生命周期内得到满足。</p>
<h2 id="案例分析">案例分析</h2>
<h3 id="实际项目中的跨功能性需求处理">实际项目中的跨功能性需求处理</h3>
<p>在某大型电商平台的开发中，性能和安全性是两个关键的跨功能性需求。通过以下措施，成功满足了这些需求：</p>
<ol>
<li>
<p><strong>性能优化</strong>：</p>
<ul>
<li>使用 Redis 缓存机制减少数据库查询。</li>
<li>部署 Nginx 负载均衡器分发流量。</li>
</ul>
</li>
<li>
<p><strong>安全性增强</strong>：</p>
<ul>
<li>引入 Web 应用防火墙（WAF）防止常见攻击（如 SQL 注入）。</li>
<li>定期进行渗透测试，发现并修复漏洞。</li>
</ul>
</li>
</ol>
<blockquote>
<p>来源：<a href="https://redis.io/documentation" target="_blank" rel="noopener noreffer ">Redis 官方文档</a>
来源：<a href="https://nginx.org/en/docs/" target="_blank" rel="noopener noreffer ">Nginx 官方文档</a></p>
</blockquote>
<h3 id="性能">性能</h3>
<p>性能需求通常包括以下几个方面：</p>
<ol>
<li><strong>响应时间</strong>：用户操作后系统的响应速度。例如，搜索引擎的响应时间通常需要在几百毫秒内完成。</li>
<li><strong>吞吐量</strong>：系统在单位时间内能够处理的请求数量。例如，支付网关需要支持每秒数千笔交易。</li>
<li><strong>资源利用率</strong>：系统在运行时对 CPU、内存和网络等资源的使用效率。</li>
</ol>
<h4 id="实例高性能电商平台">实例：高性能电商平台</h4>
<p>某电商平台在促销活动期间，通过以下措施优化性能：</p>
<ul>
<li>使用 Redis 缓存热门商品数据，减少数据库查询压力。</li>
<li>部署 CDN（内容分发网络）加速静态资源加载。</li>
</ul>
<blockquote>
<p>来源：<a href="https://redis.io/documentation" target="_blank" rel="noopener noreffer ">Redis 官方文档</a></p>
</blockquote>
<h3 id="可扩展性">可扩展性</h3>
<p>可扩展性需求确保系统能够随着用户数量或数据量的增长而扩展。主要包括：</p>
<ol>
<li><strong>水平扩展</strong>：通过增加更多服务器来提升系统能力。</li>
<li><strong>垂直扩展</strong>：通过升级硬件资源（如 CPU 和内存）来提升性能。</li>
</ol>
<h4 id="实例分布式数据库">实例：分布式数据库</h4>
<p>某社交媒体平台采用分布式数据库（如 MongoDB）来存储用户数据，支持动态扩展以应对用户增长。</p>
<blockquote>
<p>来源：<a href="https://www.mongodb.com/docs/" target="_blank" rel="noopener noreffer ">MongoDB 官方文档</a></p>
</blockquote>
<h3 id="安全性">安全性</h3>
<p>安全性需求包括以下几个方面：</p>
<ol>
<li><strong>数据加密</strong>：保护敏感数据在传输和存储中的安全性。</li>
<li><strong>身份验证</strong>：确保只有授权用户能够访问系统。</li>
<li><strong>权限管理</strong>：限制用户对系统资源的访问范围。</li>
</ol>
<h4 id="实例oauth-20">实例：OAuth 2.0</h4>
<p>某金融应用通过 OAuth 2.0 实现第三方登录，同时保护用户的敏感信息。</p>
<blockquote>
<p>来源：<a href="https://oauth.net/2/" target="_blank" rel="noopener noreffer ">OAuth 2.0 规范</a></p>
</blockquote>
<h2 id="总结">总结</h2>
<p>回到开头的问题，如何处理全球地图资源分布网站的跨功能性需求？可以通过以下步骤：</p>
<ol>
<li><strong>需求收集</strong>：与各国法律法规专家沟通，了解不同国家的要求，比如使用不同国家官方支持的地图地址。</li>
<li><strong>需求优先级</strong>：使用 MoSCoW 方法确定哪些需求是必须的，哪些是可选的， 这里就是国界。</li>
<li><strong>跨团队协作</strong>：与开发、运维和安全团队密切合作，确保需求在设计和实现中得到满足, 最好实现配置即代码。</li>
<li><strong>测试与验证</strong>：在不同国家的环境中进行测试，确保系统符合各国的法律法规。</li>
</ol>
<p>当然还有一种最简单的方法，只提供卫星影像地图，不提供边界图层。</p>
<h3 id="关键点回顾与未来展望">关键点回顾与未来展望</h3>
<p>跨功能性需求是软件开发中不可忽视的一部分。通过合理的需求优先级设定和跨团队协作，可以有效应对这些挑战。未来，随着技术的进步，跨功能性需求的管理将更加智能化和自动化。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
<li><a href="https://redis.io/documentation" target="_blank" rel="noopener noreffer ">Redis 官方文档</a></li>
<li><a href="https://nginx.org/en/docs/" target="_blank" rel="noopener noreffer ">Nginx 官方文档</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此<a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a>进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item><item><title>基于AI大模型开发一个Slack Bot的总结</title><link>https://guzhongren.github.io/2025/03/%E5%9F%BA%E4%BA%8Eai%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAslack-bot%E7%9A%84%E6%80%BB%E7%BB%93/</link><pubDate>Fri, 28 Mar 2025 22:32:34 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2025/03/%E5%9F%BA%E4%BA%8Eai%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAslack-bot%E7%9A%84%E6%80%BB%E7%BB%93/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="起因">起因</h2>
<p>最近一个半月都在Beach，虽然离开了项目，但每天的生活比项目期间还要忙碌，同时也学到了很多新知识。</p>
<hr>
<p>在Beach期间，我参与了两个与AI相关的项目。虽然AI功能的开发占比不大，但通过代码学习了AI开发的相关模式，例如Google Cloud Platform、Terraform、Vertex AI、CrewAI以及Agent的编排。Agent编排在正式项目中尤为重要，因为AI无法一次性理解并完成复杂任务，需要将任务（Work）拆分为多个子任务（Task），通过编排的Agent组合完成。这种编排的控制逻辑和编码逻辑基本一致，主要包括顺序、循环和组合等基本形式。</p>
<hr>
<p>第一个项目是关于遗留系统维护质量评估的，涉及了许多新技术，例如 CrewAI、Vertex AI、Streamlit、Hugging Face 和 Agent 编排。在这个项目中，我首次使用 Python Flask 独立构建了一个后端服务，并结合 Streamlit 开发了服务端渲染的前端，为用户提供了优秀的交互体验。简单来说，这个功能类似于一个聊天记录的展示。</p>
<hr>
<p>第二个项目与SRE相关，目标是将可观测链路上的 Alert 转换为 Incident，并通过<code>ChatOps</code>形式处理这些 Incident。为此，我们需要一个集成AI功能的 Bot 来提升 Incident 处理效率。例如，当一个 Manager 加入 Incident Channel 时，需要一个简要的总结（当前 Incident 的情况总结）。这也是本文的来源。</p>
<h2 id="需求">需求</h2>
<p>在<code>ChatOps</code>中，当 Manager 加入 Incident 处理的聊天组时，需要及时获取当前 Incident 的处理情况，包括实时状态、关键行为以及可能的建议。</p>
<h2 id="基本流程">基本流程</h2>
<p>基于上述需求，我们需要为 Chat 设计一个 Bot。这个 Bot 在接收到简单指令后，可以生成当前 Incident 的关键数据报告，类似于 PIR（Post-Incident Report），但不需要那么详细。</p>
<div class="mermaid" id="id-1"></div><h2 id="开发流程">开发流程</h2>
<p>在开发过程中，我们需要完成以下任务：</p>
<ol>
<li>在 Slack 上创建一个 Bot，作为用户与 Slack 之间的沟通桥梁。</li>
<li>使用无服务器函数处理 Bot 发送的请求，获取 AI 所需数据，并将其传递给 AI 模型，最终将AI返回的内容发送回 Slack。</li>
</ol>
<h3 id="创建slack-bot">创建Slack Bot</h3>
<p>在<a href="https://api.slack.com/apps" target="_blank" rel="noopener noreffer ">Slack官网</a>上创建 Bot 有两种方式： 1, Manifest， 2，Scratch 方式</p>
<div class="mermaid" id="id-2"></div><div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw" aria-hidden="true"></i>提示<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">创建Slack Bot需要Slack Workspace的管理员权限。</div>
        </div>
    </div>
<h4 id="manifest方式">Manifest方式</h4>
<p>这种方式相对简单，支持 JSON 和 YAML 格式，所有配置都集中在 Manifest文件中。以下是一个 YAML 格式的示例：</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-yaml">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">display_information</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">XBot</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">features</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">bot_user</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">display_name</span><span class="p">:</span><span class="w"> </span><span class="l">XBot</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">always_online</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">slash_commands</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">/summary</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="l">&lt;ServerLess HTTPS URL&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">summary</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">usage_hint</span><span class="p">:</span><span class="w"> </span><span class="l">it</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">should_escape</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">oauth_config</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">scopes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">bot</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">app_mentions:read</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">channels:history</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">channels:join</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">channels:read</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">chat:write</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">chat:write.public</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">commands</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">incoming-webhook</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">groups:history</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">im:history</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">mpim:history</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">users:read</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">settings</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">event_subscriptions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">request_url</span><span class="p">:</span><span class="w"> </span><span class="l">&lt;ServerLess HTTPS URL&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">bot_events</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">app_mention</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">interactivity</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">is_enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">request_url</span><span class="p">:</span><span class="w"> </span><span class="l">&lt;ServerLess HTTPS URL&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">org_deploy_enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">socket_mode_enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">token_rotation_enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span></span></span></code></pre></div></div>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>示例<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">ServerLess HTTPS URL: <a href="https://serverless.functions.url/x-bot" target="_blank" rel="noopener noreffer ">https://serverless.functions.url/x-bot</a></div>
        </div>
    </div>
<p>这种方式适合已经创建过一个 Bot，需要重新创建的情况，例如测试完成后需要创建正式的 Bot。</p>
<h4 id="scratch方式">Scratch方式</h4>
<p>按照提示逐步完成配置，涉及多个模块，例如<code>Basic Information</code>、<code>Socket Mode</code>、<code>Incoming Webhooks</code>、<code>Slash Command</code>、<code>OAuth &amp; Permissions</code>和<code>Event Subscriptions</code>等。具体权限可参考 Manifest 的 YAML 配置。</p>
<p>通过上述两种方式之一创建Bot后，需要获取以下Token，这些Token将在无服务器函数中使用：</p>
<table>
  <thead>
      <tr>
          <th style="text-align: left">项目</th>
          <th style="text-align: left">位置</th>
          <th style="text-align: left">操作</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">SIGNING_SECRET</td>
          <td style="text-align: left"><code>Basic Information</code> -&gt; <code>Signing Secret</code></td>
          <td style="text-align: left">复制</td>
      </tr>
      <tr>
          <td style="text-align: left">SLACK_APP_TOKEN</td>
          <td style="text-align: left"><code>Basic Information</code> -&gt; <code>App-Level Tokens</code></td>
          <td style="text-align: left">点击<code>Generate Token and Scope</code>，命名并赋予<code>connections:write</code>权限</td>
      </tr>
      <tr>
          <td style="text-align: left">SLACK_BOT_TOKEN</td>
          <td style="text-align: left"><code>OAuth &amp; Permissions</code> -&gt; <code>OAuth Tokens</code></td>
          <td style="text-align: left">复制</td>
      </tr>
  </tbody>
</table>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>重要提示<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>在本地开发代码并与Slack测试时，启用<code>Socket Mode</code>可以避免每次都部署代码，从而节省时间和资源</li>
<li>启用<code>Socket Mode</code>时，如果多人开发同一个Bot，可能会收到彼此的请求返回结果。建议每人创建一个独立的Workspace以避免冲突</li>
<li>更改完配置之后，需要将 App 安装到你的 Workspace 中</li>
</ul>
</div>
        </div>
    </div>
<h3 id="创建无服务器函数处理用户请求">创建无服务器函数处理用户请求</h3>
<p>这里选择使用 Python 来作为 Serferless 处理工具，并将其部署在云服务器上，比如 AWS Lambda, Azure Function， 或者 Google Cloud Platform 的 Cloud Run Functions中，这里不讲工程构建之类的，直接给出部分参考代码。</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-python">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">slack_bolt</span> <span class="kn">import</span> <span class="n">App</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">slack_bolt.adapter.flask</span> <span class="n">imp</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">vertexai</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">vertexai.preview.generative_models</span> <span class="kn">import</span> <span class="n">GenerativeModel</span><span class="p">,</span> <span class="n">GenerationConfig</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="n">app</span> <span class="o">=</span> <span class="n">App</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">token</span><span class="o">=</span><span class="n">getenv</span><span class="p">(</span><span class="s2">&#34;SLACK_BOT_TOKEN&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">signing_secret</span><span class="o">=</span><span class="n">getenv</span><span class="p">(</span><span class="s2">&#34;SIGNING_SECRET&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">raise_error_for_unhandled_request</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="nd">@app.command</span><span class="p">(</span><span class="s2">&#34;/summary&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">handle_summary_command</span><span class="p">(</span><span class="n">ack</span><span class="p">,</span> <span class="n">body</span><span class="p">,</span> <span class="n">say</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">ack</span><span class="p">(</span><span class="s2">&#34;Thinking...&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">channel_id</span> <span class="o">=</span> <span class="n">body</span><span class="p">[</span><span class="s2">&#34;channel_id&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="n">check_channel_membership</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="n">channel_id</span><span class="p">,</span> <span class="n">say</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">slack_channel_histories</span> <span class="o">=</span> <span class="n">get_chat_history</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="n">channel_id</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">input</span> <span class="o">=</span> <span class="n">format_events</span><span class="p">(</span><span class="n">incident_id</span><span class="p">,</span> <span class="n">slack_channel_histories</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># Use AI to summarize</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">system_prompt</span> <span class="o">=</span> <span class="s1">&#39;&#39;&#39;</span><span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span><span class="s1">    You are an operations analysis expert. You .....
</span></span></span><span class="line"><span class="cl"><span class="s1">    ......
</span></span></span><span class="line"><span class="cl"><span class="s1">    Output format:
</span></span></span><span class="line"><span class="cl"><span class="s1">    ......
</span></span></span><span class="line"><span class="cl"><span class="s1">    &#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">vertexai</span><span class="o">.</span><span class="n">init</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">project</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s2">&#34;GCP_PROJECT&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="n">location</span><span class="o">=</span><span class="s2">&#34;us-central1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">model</span> <span class="o">=</span> <span class="n">GenerativeModel</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">model_name</span><span class="o">=</span><span class="s2">&#34;gemini-2.0-flash&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">system_instruction</span><span class="o">=</span><span class="p">[</span><span class="n">system_prompt</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">gen_config</span> <span class="o">=</span> <span class="n">GenerationConfig</span><span class="p">(</span><span class="n">temperature</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">response</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">generate_content</span><span class="p">([</span><span class="n">prompt</span><span class="p">],</span> <span class="n">generation_config</span><span class="o">=</span><span class="n">gen_config</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span>
</span></span><span class="line"><span class="cl">    <span class="n">say</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">blocks</span><span class="o">=</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;header&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;text&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;plain_text&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;text&#34;</span><span class="p">:</span> <span class="s2">&#34;Here is the summary of the incident:&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;section&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;text&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;mrkdwn&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;text&#34;</span><span class="p">:</span> <span class="n">summary</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">handler</span> <span class="o">=</span> <span class="n">SlackRequestHandler</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Main</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">slack_bot</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">handler</span><span class="o">.</span><span class="n">handle</span><span class="p">(</span><span class="n">request</span><span class="p">)</span></span></span></code></pre></div></div>
<p>比如使用如下命令将这个程序部署在 GCP 中：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">gcloud functions deploy x-bot <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --runtime python310 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --trigger-http <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --allow-unauthenticated <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --entry-point slack_bot <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --timeout<span class="o">=</span>120s <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --set-env-vars <span class="nv">GCP_PROJECT</span><span class="o">=</span><span class="s1">&#39;&#39;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --set-env-vars <span class="nv">SLACK_BOT_TOKEN</span><span class="o">=</span><span class="s1">&#39;&#39;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --set-env-vars <span class="nv">SIGNING_SECRET</span><span class="o">=</span><span class="s1">&#39;&#39;</span></span></span></code></pre></div></div>
<h2 id="注意事项">注意事项</h2>
<p>部署好 Serverless Function 之后，需要将Serverless Function 的访问的 URL 添加到 Slack App 的配置中；</p>
<ul>
<li>将 <code>Socket Mode</code> 关闭</li>
<li>将 URL 填到 <code>Event Subscriptions</code>, 需要通过其校验</li>
<li>将 URL 填到 <code>Slash Commands</code> 添加的那个Command（<code>/summary</code>） 中</li>
</ul>
<h2 id="总结">总结</h2>
<p>Slack bot 的开发相对简单，大部分内容是简单的配置；重要的是将获取到的数据以某种特定的 Prompt ，并将其传递给 AI model 获取到准确的结果。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
<li><a href="https://api.slack.com/apps" target="_blank" rel="noopener noreffer ">Slack 官网:https://api.slack.com/apps</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此<a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a>进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item><item><title>本地跑deepseek 7b模型</title><link>https://guzhongren.github.io/2025/02/%E6%9C%AC%E5%9C%B0%E8%B7%91deepseek-7b%E6%A8%A1%E5%9E%8B/</link><pubDate>Tue, 11 Feb 2025 22:31:58 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2025/02/%E6%9C%AC%E5%9C%B0%E8%B7%91deepseek-7b%E6%A8%A1%E5%9E%8B/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="背景">背景</h2>
<p>最近，Deepseek 因其卓越的性能和高效的推理速度在技术圈内引起了广泛关注。</p>
<p>Deepseek 采用了先进的算法(使用汇编和 CUDA 混编的方式调用 GPU)和训练方法(蒸馏)，不仅显著提升了推理速度，还降低了对硬件配置的要求，使其能够在更多设备上运行。</p>
<p>然而，使用在线 Deepseek 服务时，用户可能会遇到“服务器繁忙，请稍后再试”的问题。</p>
<p>作为程序员，我们自然不能忍受这种情况，因此本文将指导你如何在本地搭建 Deepseek 模型。</p>
<h2 id="搭建步骤">搭建步骤</h2>
<h3 id="所需软件及环境">所需软件及环境</h3>
<h4 id="环境">环境</h4>
<ul>
<li><strong>操作系统</strong>: MacOS M1 (Sequoia [Version 15.3])</li>
</ul>
<h4 id="软件">软件</h4>
<ul>
<li><strong><a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">Ollama</a></strong>: 用于管理和运行大模型。</li>
<li><strong><a href="https://chatboxai.app/" target="_blank" rel="noopener noreffer ">Chatbox AI</a></strong>: 提供与大模型交互的界面。</li>
</ul>
<h3 id="安装步骤">安装步骤</h3>
<h4 id="安装-ollama">安装 Ollama</h4>
<p>Ollama 可以通过命令行或手动下载安装包进行安装。手动安装后，系统会自动启动 Ollama 服务；而通过命令行安装后，则需要手动启动服务。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">brew install ollama
</span></span><span class="line"><span class="cl"><span class="c1"># 安装完成后，启动 Ollama 服务</span>
</span></span><span class="line"><span class="cl">ollama serve</span></span></code></pre></div></div>
<h4 id="运行-deepseek模型">运行 deepseek模型</h4>
<ol>
<li>访问 Ollama 模型库，搜索 deepseek。</li>
<li>选择 deepseek-r1 模型，并选择 7b 版本。</li>
<li>点击复制按钮，将命令行粘贴到终端中运行。Ollama 将自动拉取并启动该模型。</li>
</ol>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">ollama run deepseek-r1:7b</span></span></code></pre></div></div>
<h4 id="安装-chatbox">安装 Chatbox</h4>
<p>Chatbox 是与大模型进行交互的界面。你可以选择直接安装软件或通过 Docker 运行。推荐使用软件安装，以便快速启动和操作。</p>
<p>可安装软件或者通过docker 运行，推荐软件安装，可以快速启动软件来提速。</p>
<h4 id="配置">配置</h4>
<p>Chatbox 安装完成并且 deepseek 大模型运行起来后，在 Chatbox -&gt; Settings 中选择本地启动的模型即可。</p>
<h2 id="总结">总结</h2>
<p>随着人工智能技术的快速发展，社会分工可能会发生显著变化, 最明显的是人工智能会淘汰掉社会分工的中间层。</p>
<p>未来的趋势可能是：要么成为顶层的规则设计者，要么成为底层的实践者。通过本地搭建和运行 Deepseek 模型，我们不仅能够避免在线服务的限制，还能更深入地理解和掌握这一前沿技术。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
<li><a href="https://www.deepseek.com/" target="_blank" rel="noopener noreffer ">Deepseek:https://www.deepseek.com/</a></li>
<li><a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">Ollama:https://ollama.com/</a></li>
<li><a href="https://chatboxai.app/" target="_blank" rel="noopener noreffer ">Chatbox AI:https://chatboxai.app/</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此<a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a>进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item><item><title>Home Assistant搭建和配置并配置米家集成极简教程</title><link>https://guzhongren.github.io/2025/01/home-assistant%E6%90%AD%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE%E5%B9%B6%E9%85%8D%E7%BD%AE%E7%B1%B3%E5%AE%B6%E9%9B%86%E6%88%90%E6%9E%81%E7%AE%80%E6%95%99%E7%A8%8B/</link><pubDate>Sun, 05 Jan 2025 21:55:05 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2025/01/home-assistant%E6%90%AD%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE%E5%B9%B6%E9%85%8D%E7%BD%AE%E7%B1%B3%E5%AE%B6%E9%9B%86%E6%88%90%E6%9E%81%E7%AE%80%E6%95%99%E7%A8%8B/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="小米发布home-assistant-集成">小米发布Home Assistant 集成</h2>
<p>2024年底，小米突然在 GitHub 上开源了<a href="https://github.com/XiaoMi/ha_xiaomi_home" target="_blank" rel="noopener noreffer ">基于Home Assistant的米家集成</a>，顿时引起热议，正好我家里也是小米的设备，并且也是个Home Assistant 小白，所以正好可以探索一波。</p>
<p>因为网上有很多关于Home Assistant的说明及安装教程, 在这推荐<a href="https://sspai.com/post/95117" target="_blank" rel="noopener noreffer ">正是入坑好时节：在米家官方支持之际，再聊新人 Home Assistant 入门</a>，我就不赘述了。</p>
<h2 id="基于-docker-的home-assistant-安装并集成小米集成">基于 Docker 的Home Assistant 安装并集成小米集成</h2>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="c1"># 创建本地路径用于挂在其道 Docker container 中</span>
</span></span><span class="line"><span class="cl">mkdir -p home-assistant/custom_components/hacs
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 启动 Home assistant 最新的镜像</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 设置时区</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 配置目录映射</span>
</span></span><span class="line"><span class="cl">docker run -d <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --name homeassistant <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --privileged <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --restart<span class="o">=</span>unless-stopped <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="nv">TZ</span><span class="o">=</span>Asia/Shanghai <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -v ~/home-assistant:/config <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --network<span class="o">=</span>host <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>homeassistant/home-assistant
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 在容器中安装HACS</span>
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it homeassistant sh -c <span class="s2">&#34;mkdir -p /config/custom_components &amp;&amp; cd /config/custom_components &amp;&amp; wget -O - https://get.hacs.xyz | bash -&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">##===NOT IMPORTANT===</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Restart HA</span>
</span></span><span class="line"><span class="cl"><span class="c1"># `Add Intergration` to use HACS</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Authrizate HACS with GitHub</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Add `Custom repositories`</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Download</span>
</span></span><span class="line"><span class="cl"><span class="c1"># `Add Intergration` to use Xiaomi Home</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Auth via OAuth2 of xiaomi</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Chose phone or email</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Change url of `homeassistant.local` to localhost</span></span></span></code></pre></div></div>
<p>在正确操作如上步骤，重启Home Assistant 容器之后，访问 http://localhost:8123/ 就可以体验连接了自己家的小米账号的 Home Assistant 了。</p>
<h2 id="总结">总结</h2>
<p>小米发布的 Home Assistant集成确实很简单，实用, 就像大家说的，通过这次开源和发布，小米已经在家庭物联网这块占据了领导地位，为其后续各种设备集成，扩展奠定了坚实的基础。</p>
<p>如果小米后续推出其 NAS 集成，肯定又会收割一波 <code>流量</code>。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
<li><a href="https://sspai.com/post/95117" target="_blank" rel="noopener noreffer ">正是入坑好时节：在米家官方支持之际，再聊新人 Home Assistant 入门</a></li>
<li><a href="https://github.com/XiaoMi/ha_xiaomi_home" target="_blank" rel="noopener noreffer ">基于Home Assistant的米家集成</a></li>
<li><a href="https://github.com/hacs/get" target="_blank" rel="noopener noreffer ">HACS</a></li>
<li><a href="https://www.hacs.xyz/docs/use/configuration/options/#to-change-the-hacs-configuration-options" target="_blank" rel="noopener noreffer ">Configuration options</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此<a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a>进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item><item><title>Git多 user 管理</title><link>https://guzhongren.github.io/2024/08/git%E5%A4%9Auser%E7%AE%A1%E7%90%86/</link><pubDate>Sat, 17 Aug 2024 07:53:16 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2024/08/git%E5%A4%9Auser%E7%AE%A1%E7%90%86/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="痛点">痛点</h2>
<p>平时在一个电脑上会有不同的项目开发，尤其是个人项目和公司项目；</p>
<ul>
<li>通常，我们不希望工作在公司项目上的时候用自己个人的git 信息提交commit, 相反也是一样</li>
<li>在不同目录下，在命令行中切换git config 也是个重复劳动的工作，比较费精力</li>
</ul>
<h2 id="方案">方案</h2>
<h3 id="方案1不同的gitconfig配置">方案1：不同的gitconfig配置</h3>
<p>此方案的实现思路是，git 检测当前目录是否是已经配置的目录，如果是配置的目录，那么就加载对应的gitconfig</p>
<h4 id="步骤">步骤</h4>
<ul>
<li>更新<code>~/.gitconfig</code>, 按需追加并修复如下内容</li>
</ul>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-git">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code class="language-git" data-lang="git">[includeIf &#34;gitdir:~/01.Project/&#34;]
  path = ~/.gitconfigs/.gitconfig-personal

[includeIf &#34;gitdir:~/04.company/&#34;]
  path = ~/.gitconfigs/.gitconfig-company</code></pre></div>
<ul>
<li>建立相应的目录和文件，如~/.gitconfigs/.gitconfig-personal</li>
</ul>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">mkdir -p ~/.gitconfigs1 <span class="o">&amp;&amp;</span> touch ~/.gitconfigs1/.gitconfig-personal</span></span></code></pre></div></div>
<ul>
<li>配置个人信息</li>
</ul>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-git">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code class="language-git" data-lang="git">[user]
	email = personal@email.com
	name = personalName
	signingkey = signingkey
[commit]
	gpgsign = true
[init]
	defaultBranch = main
[tag]
	forceSignAnnotated = true
[pull]
	rebase = true
[gpg]
	program = gpg
[core]
	sshCommand = ssh -i ~/.ssh/id_github
	ignorecase = false</code></pre></div>
<p>如上内容根据自己的需求更改即可。</p>
<h3 id="方案2简化git-config-命令">方案2：简化git config 命令</h3>
<h4 id="思路">思路</h4>
<p>使用git alias 执行命令加载不同的配置</p>
<h4 id="步骤-1">步骤</h4>
<ul>
<li>在~/.gitconfig中追加如下配置，并按需更改即可</li>
</ul>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-git">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code class="language-git" data-lang="git">
[alias]
  personal = &#34;!f() { git config user.name &#39;personalUserName&#39; &amp;&amp; git config user.email &#39;personal@email.com&#39; &amp;&amp; git config --global user.signingkey KEY; }; f&#34;
  company = &#34;!f() { git config user.name &#39;company&#39; &amp;&amp; git config user.email &#39;company@email.com&#39; &amp;&amp; git config --global user.signingkey KEY; }; f&#34;</code></pre></div>
<ul>
<li>使用时只需要执行一个git alias命令，如下</li>
</ul>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">git company</span></span></code></pre></div></div>
<h2 id="总结">总结</h2>
<p>99%的事物皆可自动化！</p>
<p>第一种方案自动化程度更高，更可取。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此<a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a>进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item><item><title>MacOS 使用指纹解锁 Sudo 密码</title><link>https://guzhongren.github.io/2024/07/macos-%E4%BD%BF%E7%94%A8%E6%8C%87%E7%BA%B9%E8%A7%A3%E9%94%81-sudo-%E5%AF%86%E7%A0%81/</link><pubDate>Wed, 17 Jul 2024 13:01:36 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2024/07/macos-%E4%BD%BF%E7%94%A8%E6%8C%87%E7%BA%B9%E8%A7%A3%E9%94%81-sudo-%E5%AF%86%E7%A0%81/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="出发点">出发点</h2>
<p>我们平时用Mac电脑进行命令行操作的时候，可能需要使用<code>sudo</code> 进行操作，那么就得输入密码。但在Mac系统上，我们通常用指纹来作为密码管理器。</p>
<p>其实我们可以通过简单的配置就可以实现。</p>
<h2 id="解决步骤">解决步骤</h2>
<ul>
<li>编辑文件</li>
</ul>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sha">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code class="language-sha" data-lang="sha">sudo vim /etc/pam.d/sudo</code></pre></div>
<ul>
<li>在文件最前面加入如下代码</li>
</ul>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-text">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">auth       sufficient     pam_tid.so</span></span></code></pre></div></div>
<ul>
<li><code>wq!</code> 保存推出即可。</li>
</ul>
<h2 id="总结">总结</h2>
<p>配置即生产力。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此<a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a>进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item><item><title>研发效能之度量</title><link>https://guzhongren.github.io/2024/03/%E7%A0%94%E5%8F%91%E6%95%88%E8%83%BD%E4%B9%8B%E5%BA%A6%E9%87%8F/</link><pubDate>Sun, 31 Mar 2024 22:06:49 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2024/03/%E7%A0%94%E5%8F%91%E6%95%88%E8%83%BD%E4%B9%8B%E5%BA%A6%E9%87%8F/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><p>在当前复杂的商业环境下，企业普遍倡导内部降本增效。在这种背景下，研发活动也越来越倾向于数字化度量和呈现。通过研发效能度量，组织能够获取更准确、全面的研发数据，从而更好地制定优化研发的决策和计划。</p>
<p>利用研发效能度量数据，组织可以更合理地管理和分配研发资源，进而提高研发效率和品质。这种优化不仅为企业在激烈的市场竞争中脱颖而出提供了有力支持，还为其展现更强的核心竞争力创造了更有利的条件。</p>
<h2 id="研发效能的范围">研发效能的范围</h2>
<p>研发效能的范围涵盖了研发活动的各个方面，主要包括以下几个方面：</p>
<ul>
<li>
<p>效率：评估需求前置时间，流动时间，流动速率等。</p>
</li>
<li>
<p>成本效能：衡量完成项目所需的成本，包括人力资源、设备、材料等方面的费用。</p>
</li>
<li>
<p>质量效能：评估研发产品或服务的质量水平，包括产品的可靠性、性能、用户体验等方面。</p>
</li>
<li>
<p>技术能力：评估组件或产品的可复用能力，可配置能力和可扩展能力等。</p>
</li>
<li>
<p>工程能力：评估变更前置时间，部署频率和测试覆盖率等。</p>
</li>
<li>
<p>协作能力：评估团队工作的流动效率，流动负载和流动分布等。</p>
</li>
</ul>
<p>这些方面共同构成了研发效能的范围，通过对这些方面的度量和评估，可以全面了解研发活动的表现和效果，从而进行有效的管理和优化。</p>
<p>这么多的效能面，从产品研发迭代过程来看，我们可以直接量化的是效率，工程能力和协作能力。</p>
<h2 id="当前研发效能的问题">当前研发效能的问题</h2>
<p>人人都在说效能，可没有人拿出数据来展示自己的效能。</p>
<p>人人都在说效能，可没有人说，除了 DORA Metrics 可以衡量部署，恢复等工作效率之外，还有哪些指标可以衡量团队所有人的效能。</p>
<p>人人都在说提效，但没人能说清楚使用了某个方法论之后，到底提效了多少。</p>
<h2 id="研发效能的难点">研发效能的难点</h2>
<h3 id="工具不统一">工具不统一</h3>
<p>大多数组织都在使用不用的工具进行项目管理和产品构建部署等，并没有统一的套件来组织整个流程; 比如有的组织在用 Jira 管理需求，也有的组织在用 Trello, 也有开源组织在用 GitHub 的 Issues 或者 <a href="https://github.com/kubernetes/kubernetes/projects/10" target="_blank" rel="noopener noreffer ">Projects</a>; 在部署工具中，有的组织在用Jenkins, Buildkite，有的组织也在用 <a href="" rel="">GitHub Actions</a>,<a href="" rel=""> GitLab Suites</a>; 在源代码控制方面，各个组织也有不同的选择，比如GitHub, GitLab 等版本控制工具。</p>
<h3 id="数据关系复杂">数据关系复杂</h3>
<p>一个组织下肯定会有不同的项目组或者团队，每个团队在看板上对每一列的定义可能不尽相同，那么在计算效能的时候就需要定制化地去选择对应的数据。比如一个Account 大家都在用Jira, 每个团队有自己的定义过的看板，那么在最终统计看板效能的时候，大家的维度都不一样，可想而知，其最终的结果肯定也是不准确的。</p>
<h3 id="统计维度多样">统计维度多样</h3>
<p>对于管理者，不同的人需要看到不同的维度，这样的统计才有意义。比如：</p>
<ul>
<li>作为项目经理(Project Manager)，我想知道团队交付趋势(Momentum), 从而可以看出项目是否有风险</li>
<li>作为交付经理(Delivery Manager)，我想知道当前迭代团队的交付指标(Metrics)，从而知道团队交付速率，数据和质量等</li>
<li>作为技术领导(Tech Lead)，我想知道团队冲刺速度(Velocity)和周期时间(Cycle time)，从而分析出每个超出预定目标卡的原因并找到对应的提升办法，并在下个迭代改进</li>
<li>&hellip;&hellip;</li>
</ul>
<h3 id="指标收集粗略且范围单一">指标收集粗略且范围单一</h3>
<p>当然，市场上存在多种收集，统计工具，比如</p>
<ul>
<li><a href="https://web.techdash.thoughtworks.net/" target="_blank" rel="noopener noreffer ">Tech Dash</a> Thoughtworks 内部统计 DORA Metrics 的统计工具</li>
<li><a href="https://www.sleuth.io/" target="_blank" rel="noopener noreffer ">Sleuth</a> 统计 DORA Metrics 的工具</li>
<li><a href="https://polaris.thoughtworks.net/" target="_blank" rel="noopener noreffer ">polaris</a> Thoughtworks 内部统计 DORA Metrics 的统计工具</li>
<li><a href="https://github.com/thoughtworks/metrik" target="_blank" rel="noopener noreffer ">Metrik</a> Thoughtworks 开源的 DORA Metrics 统计工具</li>
<li><a href="https://devlake.apache.org/" target="_blank" rel="noopener noreffer ">DevLake</a>, 收集，分析和可视化 DevOps 工具的零散数据，以提取卓越工程的洞见。</li>
<li><a href="https://github.com/GoogleCloudPlatform/fourkeys" target="_blank" rel="noopener noreffer ">Four Keys</a>, measures the four key metrics.</li>
<li><a href="https://github.com/kuona/kuona-project" target="_blank" rel="noopener noreffer ">Kuona project for IT Analytics</a>, provides a dashboard on data from various sources.</li>
<li><a href="https://github.com/anandbagmar/tta" target="_blank" rel="noopener noreffer ">Test Trend Analyzer</a>, consumes test results for test trends.</li>
<li><a href="https://github.com/thetestpeople/trt" target="_blank" rel="noopener noreffer ">TRT</a>, consumes test results for test trends.</li>
<li><a href="https://extensions-docs.gocd.org/analytics/current/" target="_blank" rel="noopener noreffer ">GoCD&rsquo;s analytics extension</a>, collects and displays build metrics for GoCD.</li>
<li><a href="https://www.pulse.codacy.com" target="_blank" rel="noopener noreffer ">pulse</a>, support the continuous improvement of your engineering teams with data-driven insights.</li>
<li><a href="https://jellyfish.co" target="_blank" rel="noopener noreffer ">Jellyfish</a>, translate and maximize the business impact of engineering.</li>
<li><a href="https://github.com/marketplace/buildpulse" target="_blank" rel="noopener noreffer ">BuildPulse</a>, automatically detects flaky tests.</li>
</ul>
<p>在此，我们选择如下部分工具进行对比并说明。</p>
<h2 id="解决方案对比">解决方案对比</h2>
<table>
  <thead>
      <tr>
          <th style="text-align: left"></th>
          <th style="text-align: left">Heartbeat</th>
          <th style="text-align: left">Sleuth</th>
          <th style="text-align: left">Metrik</th>
          <th style="text-align: left">DevLake</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">开源</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">免费</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">自动统计</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">人工表单收集</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
      </tr>
      <tr>
          <td style="text-align: left">社区活跃程度</td>
          <td style="text-align: left">🔋</td>
          <td style="text-align: left">🪫</td>
          <td style="text-align: left">➖</td>
          <td style="text-align: left">🔋</td>
      </tr>
      <tr>
          <td style="text-align: left">支持 GitHub 作为版本控制工具</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持 GitLab 作为版本控制工具</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持 GitHub Actions 作为 Pipeline 工具</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持 BuildKite 作为 Pipeline 工具</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持 GitLab 套件作为 Pipeline 工具</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持 Jenkins 作为 Pipeline 工具</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持度量 PR/MR 的前置时间</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持度量基于版本控制工具的特定分支的 DORA Metrics</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持自定义仓库统计</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持 Jira 作为项目管理工具</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持度量迭代完成点数</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持度量迭代完成卡数</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">支持按人统计迭代卡的时间分配</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
      </tr>
      <tr>
          <td style="text-align: left">支持度量每张卡在每个状态中的时间消耗</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
      </tr>
      <tr>
          <td style="text-align: left">支持度量返工（Rework）</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
      </tr>
      <tr>
          <td style="text-align: left">导出 DORA Metrics 报告</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: left">导出迭代内项目管理工具每张卡的时间消耗报告</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">❌</td>
          <td style="text-align: left">✅</td>
      </tr>
      <tr>
          <td style="text-align: left">多个迭代的图表展示</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
          <td style="text-align: left">✅</td>
      </tr>
  </tbody>
</table>
<p>从组织精准度量研发效能角度看，Heartbeat 统计的数据来源更多，比如统计 DORA Metrics 的数据源 Pipeline(BuildKite), 项目管理工具(Jira) 和版本控制工具(GitHub)，并且各个部分的自定义能力较强, 更能体现出交付质量和价值。</p>
<h3 id="heartbeat-的解决方案">Heartbeat 的解决方案</h3>
<h4 id="heartbeat-是什么">Heartbeat 是什么</h4>
<table>
  <thead>
      <tr>
          <th style="text-align: left"></th>
          <th></th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">对于</br> 目标用户/客户</td>
          <td style="text-align: left">TL, BA, PM, PO</td>
      </tr>
      <tr>
          <td style="text-align: left">谁</br> 需求/机会</td>
          <td style="text-align: left">1. 更好的了解交付效能</br> 2. 提高团队生产力和效率</td>
      </tr>
      <tr>
          <td style="text-align: left">产品</td>
          <td style="text-align: left">Heartbeat</td>
      </tr>
      <tr>
          <td style="text-align: left">是一个</br></td>
          <td style="text-align: left">可视化项目交付效能的开源工具</td>
      </tr>
      <tr>
          <td style="text-align: left">它可以</br>关键好处，使用的竞争理由</td>
          <td style="text-align: left">1. 整合3个开发与进度管理产品</br> 2. 自动计算8个交付性能指标</br> 3. 可以导出相关数据报告</td>
      </tr>
      <tr>
          <td style="text-align: left">相比于</br>主要竞争替代方案</td>
          <td style="text-align: left">Sleuth, Metrics 和 DevLake</td>
      </tr>
      <tr>
          <td style="text-align: left">优势</br>差异点</td>
          <td style="text-align: left">1. 自动从第三方获取数据并计算交付效能指标</br> 2. 从数据源获取的最真实的交付效能指标，而不是通过手动收集所得</td>
      </tr>
  </tbody>
</table>
<h4 id="为什么会有-heartbeat">为什么会有 Heartbeat</h4>
<p>在 Thoughtworks， 我们有 SDP(Sensible Default Practice) 来指导日常的软件工程开发工作，通过遵循 SDP 的最佳实践，组织可以提高研发效能；反之，通过分析收集到的各个指标，作为 TL 等角色的人，可以分析出哪些行为是团队所需要提升的，从而针对性地在找到最佳实践，近而采取行动来促进研发效能。</p>
<p></p>
<h2 id="总结">总结</h2>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此<a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a>进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item><item><title>2023年终总结</title><link>https://guzhongren.github.io/2024/02/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</link><pubDate>Sat, 03 Feb 2024 22:45:07 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2024/02/2023%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="女儿">女儿</h2>
<p>新年开始，女儿就出生了，从刚开始的毫无力气到现在单手可以拿起手机，在家里随处乱跑，每一天都是新的一天。</p>
<p>娃很爱笑，从出生到现在感觉也就是屈指可数的哭过几次，要么是第一次打针疼了，要么是第一次从床上掉下来。</p>
<p>以前上班，我们跟她说再见，她几乎没有什么反应，但现在，每天早上我们快要出门的时候，就会缠着你让你抱抱，不抱的话还会哭。</p>
<p>从此，人的感情也越累越脆弱了。</p>
<h2 id="忙忙碌碌-却也碌碌无为">忙忙碌碌, 却也碌碌无为</h2>
<p>2023年，项目一塌糊涂。</p>
<h2 id="2024">2024</h2>
<p>&ldquo;家人最重要&rdquo; - 《燃爆点》， 正在看的一部电影。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此<a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a>进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item></channel></rss>