<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Automation - 标签 - 谷中仁的博客</title><link>https://guzhongren.github.io/tags/automation/</link><description>Automation - 标签 - 谷中仁的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>guzhongren@live.cn (谷中仁)</managingEditor><webMaster>guzhongren@live.cn (谷中仁)</webMaster><copyright>Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 13 Sep 2023 22:44:56 +0800</lastBuildDate><atom:link href="https://guzhongren.github.io/tags/automation/" rel="self" type="application/rss+xml"/><item><title>使用Google Sheet Apps Script提升工作效率</title><link>https://guzhongren.github.io/2023/09/%E4%BD%BF%E7%94%A8google-sheet-apps-script%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87/</link><pubDate>Wed, 13 Sep 2023 22:44:56 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2023/09/%E4%BD%BF%E7%94%A8google-sheet-apps-script%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><p>一切总是在往熵增大的方向发展。</p>
<h2 id="遇到的问题">遇到的问题</h2>
<p>团队周内每天需要都有个Code Diff 的会议来进行代码review, 但是不是每个人都有代码要被Review, 如果有个工具每天在Code Diff 前进行统计，大家有需要代码Review 的就在消息下面标记一下，或者回复一哈；如果大家有标记，那么再进行代码Review，是不是就可以省下一部分时间了？</p>
<p>团队内每周站会的主持人要轮流，要是大家轮流记，估计很快就乱了，如果有个工具，每周一早上在群里自动更新一哈是不是就更好了？对于Oncall 等活动也是一样，是不是就完美了？</p>
<p>这么多问题怎么解决呢？</p>
<p>肯定就是各种机器人啦。我们团队用的都是Google 的那套办公软件，而Google Sheet 是我们经常用来流程化记录内容的工具；同时Google Chat 是我们团队的沟通协作工具。</p>
<p>而Google 全家桶的好处就是其各个应用之间调用协作非常方便。那么我们就用Google Sheet 和Google Chat 来实现一个简单的机器人应用来干上面各种麻烦的事吧。</p>
<h2 id="google-chat-webhooks">Google Chat Webhooks</h2>
<p>Google Chat 的Webhooks 允许其他应用程序调用，并可以对消息进行<code>创建</code>、<code>读取</code> 、<code>更新</code> 和<code>删除</code>。如同对数据库的增删改差一般。</p>
<p><img src="https://developers.google.com/static/chat/images/arch-pat-notifier.svg" alt="Google Chat Webhooks" /></p>
<p>关于如何创建Google Chat webhooks 可以参考<a href="https://ploi.io/documentation/notifications/how-do-i-create-a-google-chat-webhook" target="_blank" rel="noopener noreffer ">这里</a>; 如果不想看这个链接，可以往下，在实践部分会有操作。</p>
<h2 id="google-sheet-apps-script">Google Sheet Apps Script</h2>
<p>Google Sheet 之于 Google Suite,就像 Excel 之于 Miscrosoft Office。Google Sheet 最强大的地方在于他支持自定义脚本，虽然其名为<code>Apps Script</code>, 文件格式为<code>.gs</code>， 但是其就是一些简单的<code>JavaScript</code> API, 其请求也是同步的API, 而且没有跨域问题，这就让其作为一个机器人有了初步条件。</p>
<p>当然 Google Sheet Apps Script 最基本的对 Sheet 的读写删都是非常容易的，但在这里需要明白其 API 结构。</p>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Tools/GoogleSheet/AppsScript.7401tjjcz9g0.webp" alt="Google Sheet API Structure" /></p>
<p>从上图中可以看到</p>
<table>
  <thead>
      <tr>
          <th style="text-align: left">序号</th>
          <th style="text-align: left">说明</th>
          <th style="text-align: left">Note</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">1</td>
          <td style="text-align: left">SpreadsheetApp</td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: left">2</td>
          <td style="text-align: left">ActiveSheet</td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: left">3</td>
          <td style="text-align: left">DataRange</td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: left">4</td>
          <td style="text-align: left">Value</td>
          <td></td>
      </tr>
  </tbody>
</table>
<h2 id="实践">实践</h2>
<p>如下，我们实现一个每周一提醒团队谁是本周的站会主持人的机器人。</p>
<h3 id="创建google-chat-webhooks">创建Google Chat Webhooks</h3>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Tools/GoogleSheet/chat-webhooks.1mqmo1im34g0.webp" alt="Google chat webhooks" /></p>
<p>点击创建好的Webhooks, 拷贝URL即可。</p>
<h3 id="创建google-sheet-轮转数据">创建Google Sheet 轮转数据</h3>
<p>新建Google Sheet，直接写入如下数据</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code>xiaoming1
xiaoming2
xiaoming3
xiaoming4
xiaoming5
xiaoming6	current
xiaoming7
xiaoming8
xiaoming9
xiaoming10</code></pre></div>
<h3 id="创建google-sheet-处理脚本">创建Google Sheet 处理脚本</h3>
<p>接下来在Google Sheet 中创建Apps Script; 位置：Menu-&gt;Extention-&gt; Apps Script;</p>
<p>在编辑器里可以编写处理Google Sheet 的代码，比如有个sheet.gs 里面处理Sheet 相关的操作，如下</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-js">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">CURRENT</span> <span class="o">=</span> <span class="s1">&#39;current&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">getTheNextStandupPerson</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">activeSheet</span> <span class="o">=</span> <span class="nx">SpreadsheetApp</span><span class="p">.</span><span class="nx">getActiveSheet</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">dataRange</span> <span class="o">=</span> <span class="nx">activeSheet</span><span class="p">.</span><span class="nx">getDataRange</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">standupList</span> <span class="o">=</span> <span class="nx">dataRange</span><span class="p">.</span><span class="nx">getValues</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">currentStandupPersonIndex</span> <span class="o">=</span> <span class="nx">standupList</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">(</span><span class="nx">person</span> <span class="p">=&gt;</span> <span class="nx">person</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">===</span> <span class="nx">CURRENT</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">tempStandupPersonIndex</span> <span class="o">=</span> <span class="nx">currentStandupPersonIndex</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">nextStandupPersonIndex</span> <span class="o">=</span>  <span class="nx">tempStandupPersonIndex</span> <span class="o">&gt;=</span> <span class="nx">standupList</span><span class="p">.</span><span class="nx">length</span> <span class="o">?</span> <span class="mi">0</span><span class="o">:</span> <span class="nx">tempStandupPersonIndex</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">nextStandupPerson</span> <span class="o">=</span> <span class="nx">standupList</span><span class="p">.</span><span class="nx">find</span><span class="p">((</span><span class="nx">_</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">index</span> <span class="o">===</span> <span class="nx">nextStandupPersonIndex</span> <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">currentStandupPersonIndex</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">nextStandupPersonIndex</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">nextStandupPerson</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">updateRecord</span><span class="p">(</span><span class="nx">currentStandupPersonIndex</span><span class="p">,</span> <span class="nx">nextStandupPersonIndex</span><span class="p">,</span> <span class="nx">nextperson</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`Start to update the latest standup person to </span><span class="si">${</span><span class="nx">nextperson</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">currentRow</span> <span class="o">=</span> <span class="nx">currentStandupPersonIndex</span> <span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">nextRow</span> <span class="o">=</span> <span class="nx">nextStandupPersonIndex</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">activeSheet</span> <span class="o">=</span> <span class="nx">SpreadsheetApp</span><span class="p">.</span><span class="nx">getActiveSheet</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nx">activeSheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">currentRow</span><span class="p">,</span> <span class="mi">2</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="nx">activeSheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">nextRow</span><span class="p">,</span> <span class="mi">2</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">CURRENT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`Successfully update the latest standup person to </span><span class="si">${</span><span class="nx">nextperson</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>
<p>main.gs 处理整个流程，并且在里面发送消息到刚才的Space中，</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-js">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">WEBHOOK_URL</span> <span class="o">=</span> <span class="s2">&#34;https://chat.googleapis.com/v1/spaces/AAAAPhOvPUg/messages?key=AIzaSxxxxxxxxxxxxxxxxxxxxxxxx&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// main function
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">sendMessageToChat</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isMonday</span><span class="p">())</span> <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="p">{</span><span class="nx">currentStandupPersonIndex</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">nextStandupPersonIndex</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">nextStandupPerson</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">getTheNextStandupPerson</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nx">updateRecord</span><span class="p">(</span><span class="nx">currentStandupPersonIndex</span><span class="p">,</span> <span class="nx">nextStandupPersonIndex</span><span class="p">,</span> <span class="nx">nextStandupPerson</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;method&#34;</span><span class="o">:</span> <span class="s2">&#34;post&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;headers&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;Content-Type&#34;</span><span class="o">:</span> <span class="s2">&#34;application/json; charset=UTF-8&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;payload&#34;</span><span class="o">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;text&#34;</span><span class="o">:</span> <span class="sb">`Hey &lt;users/all&gt;,This week&#39;s standup host is </span><span class="si">${</span><span class="nx">nextStandupPerson</span><span class="si">}</span><span class="sb"> </span><span class="si">${</span><span class="s1">&#39;\n&#39;</span><span class="p">.</span><span class="nx">repeat</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="si">}</span><span class="sb"> The sheet: https://docs.google.com/spreadsheets/d/123434234343/edit#gid=0`</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">};</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">response</span> <span class="o">=</span> <span class="nx">UrlFetchApp</span><span class="p">.</span><span class="nx">fetch</span><span class="p">(</span><span class="nx">WEBHOOK_URL</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">isMonday</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">date</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">day</span> <span class="o">=</span> <span class="nx">date</span><span class="p">.</span><span class="nx">getDay</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="o">!</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">].</span><span class="nx">includes</span><span class="p">(</span><span class="nx">day</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>
<h3 id="定时执行脚本处理">定时执行脚本处理</h3>
<p>有多种执行方式；</p>
<ol>
<li>直接在代码编辑器顶部运行main.gs 里的sendMessageToChat 方法即可。</li>
<li>定时运行,如下图, 以此，我们可以在特定的实践让其自动执行，实现自动化。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Tools/GoogleSheet/trigger-of-apps-script.5u953kav5cg0.webp" alt="Trigger of Apps Script" /></p>
<h3 id="效果">效果</h3>
<p>可以看到，之前的主持人是xiaoming6, 现在已经是xiaoming7了。
<img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Tools/GoogleSheet/chatbot-message.4w4b6vs80rk0.webp" alt="Chatbot message result" /></p>
<h2 id="总结">总结</h2>
<p>Google Sheet 毕竟是Google 出品，不管是UI 还是API 都很简洁，更是和其自家产品集成的非常紧密；我们在这里实现了Google Sheet 调用Google Chat 来定时给Google Chat 发送消息的功能。当然Google Sheet 还有很多非常优秀的功能，期待你的挖掘。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客:https://guzhongren.github.io/</a></li>
<li><a href="https://developers.google.com/chat/api/guides/message-formats/text" target="_blank" rel="noopener noreffer ">Google Chat Message Format: https://developers.google.com/chat/api/guides/message-formats/text</a></li>
<li><a href="https://developers.google.com/chat/how-tos/webhooks" target="_blank" rel="noopener noreffer ">Google Chat Webhooks: https://developers.google.com/chat/how-tos/webhooks</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
]]></description></item></channel></rss>