<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Kubernetes - 标签 - 谷中仁的博客</title><link>https://guzhongren.github.io/tags/kubernetes/</link><description>Kubernetes - 标签 - 谷中仁的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>guzhongren@live.cn (谷中仁)</managingEditor><webMaster>guzhongren@live.cn (谷中仁)</webMaster><copyright>Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 30 Jun 2019 19:46:11 +0800</lastBuildDate><atom:link href="https://guzhongren.github.io/tags/kubernetes/" rel="self" type="application/rss+xml"/><item><title>K8s 1.15.0 安装记录</title><link>https://guzhongren.github.io/2019/06/k8s-1.15.0-%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95.zh/</link><pubDate>Sun, 30 Jun 2019 19:46:11 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2019/06/k8s-1.15.0-%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95.zh/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.pexels.com/photos/3872067/pexels-photo-3872067.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=2&amp;h=750&amp;w=1260" referrerpolicy="no-referrer">
            </div><h2 id="环境">环境</h2>
<table>
  <thead>
      <tr>
          <th>hostname</th>
          <th style="text-align: left">ip</th>
          <th style="text-align: left">system</th>
          <th></th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>master</td>
          <td style="text-align: left">192.168.33.10</td>
          <td style="text-align: left">CentOS7</td>
          <td></td>
      </tr>
      <tr>
          <td>node1</td>
          <td style="text-align: left">192.168.33.11</td>
          <td style="text-align: left">CentOS7</td>
          <td></td>
      </tr>
      <tr>
          <td>node2</td>
          <td style="text-align: left">192.168.33.12</td>
          <td style="text-align: left">CentOS7</td>
          <td></td>
      </tr>
      <tr>
          <td>node3</td>
          <td style="text-align: left">192.168.33.13</td>
          <td style="text-align: left">CentOS7</td>
          <td></td>
      </tr>
      <tr>
          <td>node4</td>
          <td style="text-align: left">192.168.33.14</td>
          <td style="text-align: left">CentOS7</td>
          <td></td>
      </tr>
      <tr>
          <td>node5</td>
          <td style="text-align: left">192.168.33.15</td>
          <td style="text-align: left">CentOS7</td>
          <td></td>
      </tr>
  </tbody>
</table>
<h2 id="所有节点上操作">所有节点上操作</h2>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>root@master install<span class="o">]</span><span class="c1"># cat preENV.sh</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 关闭防火墙</span>
</span></span><span class="line"><span class="cl">systemctl stop firewalld <span class="o">&amp;&amp;</span> systemctl disable firewalld
</span></span><span class="line"><span class="cl"><span class="c1"># 关闭 SELINUX</span>
</span></span><span class="line"><span class="cl">setenforce <span class="m">0</span> <span class="o">&amp;&amp;</span> sed -i <span class="s2">&#34;s/SELINUX=enforcing/SELINUX=disabled/g&#34;</span> /etc/selinux/config
</span></span><span class="line"><span class="cl"><span class="c1"># 关闭 Swap</span>
</span></span><span class="line"><span class="cl">swapoff -a <span class="o">&amp;&amp;</span> sed -i <span class="s2">&#34;s/\/dev\/mapper\/centos-swap/\#\/dev\/mapper\/centos-swap/g&#34;</span> /etc/fstab
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># vim /etc/sysctl.d/k8s.conf</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># cat /etc/sysctl.d/k8s.conf</span>
</span></span><span class="line"><span class="cl">net.bridge.bridge-nf-call-ip6tables <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">net.bridge.bridge-nf-call-iptables <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">net.ipv4.ip_forward <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># modprobe br_netfilter &amp;&amp; sysctl -p /etc/sysctl.d/k8s.conf</span>
</span></span><span class="line"><span class="cl">net.bridge.bridge-nf-call-ip6tables <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">net.bridge.bridge-nf-call-iptables <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">net.ipv4.ip_forward <span class="o">=</span> <span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># wget -O /etc/yum.repos.d/CentOS7-Aliyun.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span>
</span></span><span class="line"><span class="cl">--2019-06-30 04:26:32--  http://mirrors.aliyun.com/repo/Centos-7.repo
</span></span><span class="line"><span class="cl">Resolving mirrors.aliyun.com <span class="o">(</span>mirrors.aliyun.com<span class="o">)</span>... 116.177.250.229, 116.177.250.233, 60.28.226.4, ...
</span></span><span class="line"><span class="cl">Connecting to mirrors.aliyun.com <span class="o">(</span>mirrors.aliyun.com<span class="o">)</span><span class="p">|</span>116.177.250.229<span class="p">|</span>:80... connected.
</span></span><span class="line"><span class="cl">HTTP request sent, awaiting response... <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Length: <span class="m">2523</span> <span class="o">(</span>2.5K<span class="o">)</span> <span class="o">[</span>application/octet-stream<span class="o">]</span>
</span></span><span class="line"><span class="cl">Saving to: ‘/etc/yum.repos.d/CentOS7-Aliyun.repo’
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">100%<span class="o">[============================================================================</span>&gt;<span class="o">]</span> 2,523       --.-K/s   in 0s
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2019-06-30 04:26:32 <span class="o">(</span><span class="m">296</span> MB/s<span class="o">)</span> - ‘/etc/yum.repos.d/CentOS7-Aliyun.repo’ saved <span class="o">[</span>2523/2523<span class="o">]</span>
</span></span><span class="line"><span class="cl">root@master ~<span class="o">]</span><span class="c1"># sudo yum install -y yum-utils \</span>
</span></span><span class="line"><span class="cl">  device-mapper-persistent-data <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  lvm2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># sudo yum-config-manager \</span>
</span></span><span class="line"><span class="cl">    --add-repo <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    https://download.docker.com/linux/centos/docker-ce.repo
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># yum install docker-ce -y</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># systemctl enable docker &amp;&amp; systemctl start docker</span>
</span></span><span class="line"><span class="cl">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># mkdir -p /etc/docker</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># sudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;registry-mirrors&#34;</span>: <span class="o">[</span><span class="s2">&#34;https://gmjjwogo.mirror.aliyuncs.com&#34;</span><span class="o">]</span>,
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;exec-opts&#34;</span>: <span class="o">[</span><span class="s2">&#34;native.cgroupdriver=systemd&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">EOF
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;registry-mirrors&#34;</span>: <span class="o">[</span><span class="s2">&#34;https://gmjjwogo.mirror.aliyuncs.com&#34;</span><span class="o">]</span>,
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;exec-opts&#34;</span>: <span class="o">[</span><span class="s2">&#34;native.cgroupdriver=systemd&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># docker info |grep Cgroup</span>
</span></span><span class="line"><span class="cl">Cgroup Driver: systemd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># # kube-proxy 开启 ipvs 的前置条件</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;EOF</span>
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl">modprobe -- ip_vs
</span></span><span class="line"><span class="cl">modprobe -- ip_vs_rr
</span></span><span class="line"><span class="cl">modprobe -- ip_vs_wrr
</span></span><span class="line"><span class="cl">modprobe -- ip_vs_sh
</span></span><span class="line"><span class="cl">modprobe -- nf_conntrack_ipv4
</span></span><span class="line"><span class="cl">EOF
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span>
</span></span><span class="line"><span class="cl">ip_vs_sh               <span class="m">12688</span>  <span class="m">0</span>
</span></span><span class="line"><span class="cl">ip_vs_wrr              <span class="m">12697</span>  <span class="m">0</span>
</span></span><span class="line"><span class="cl">ip_vs_rr               <span class="m">12600</span>  <span class="m">0</span>
</span></span><span class="line"><span class="cl">ip_vs                 <span class="m">145497</span>  <span class="m">6</span> ip_vs_rr,ip_vs_sh,ip_vs_wrr
</span></span><span class="line"><span class="cl">nf_conntrack_ipv4      <span class="m">15053</span>  <span class="m">2</span>
</span></span><span class="line"><span class="cl">nf_defrag_ipv4         <span class="m">12729</span>  <span class="m">1</span> nf_conntrack_ipv4
</span></span><span class="line"><span class="cl">nf_conntrack          <span class="m">133095</span>  <span class="m">7</span> ip_vs,nf_nat,nf_nat_ipv4,xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_netlink,nf_conntrack_ipv4
</span></span><span class="line"><span class="cl">libcrc32c              <span class="m">12644</span>  <span class="m">4</span> xfs,ip_vs,nf_nat,nf_conntrack
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># # 安装 kubernetes 初始化工具</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># # 使用阿里云的 kubernetes 源</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubernetes<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">name</span><span class="o">=</span>Kubernetes
</span></span><span class="line"><span class="cl"><span class="nv">baseurl</span><span class="o">=</span>https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
</span></span><span class="line"><span class="cl"><span class="nv">enabled</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="nv">gpgcheck</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="nv">repo_gpgcheck</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="nv">gpgkey</span><span class="o">=</span>https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
</span></span><span class="line"><span class="cl">EOF
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># # 安装 k8s 工具 1.15 版本</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># yum install -y kubelet kubeadm kubectl</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Installed:
</span></span><span class="line"><span class="cl">  kubeadm.x86_64 0:1.15.0-0              kubectl.x86_64 0:1.15.0-0              kubelet.x86_64 0:1.15.0-0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Dependency Installed:
</span></span><span class="line"><span class="cl">  conntrack-tools.x86_64 0:1.4.4-4.el7                       cri-tools.x86_64 0:1.12.0-0
</span></span><span class="line"><span class="cl">  kubernetes-cni.x86_64 0:0.7.5-0                            libnetfilter_cthelper.x86_64 0:1.0.0-9.el7
</span></span><span class="line"><span class="cl">  libnetfilter_cttimeout.x86_64 0:1.0.0-6.el7                libnetfilter_queue.x86_64 0:1.0.2-2.el7_2
</span></span><span class="line"><span class="cl">  socat.x86_64 0:1.7.3.2-2.el7
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Complete!
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># # 启动 kubelet</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># systemctl enable kubelet &amp;&amp; systemctl start kubelet</span>
</span></span><span class="line"><span class="cl">Created symlink from /etc/systemd/system/multi-user.target.wants/kubelet.service to /usr/lib/systemd/system/kubelet.service.
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1">#</span></span></span></code></pre></div></div>
<h2 id="主节点操作">主节点操作</h2>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>root@master install<span class="o">]</span><span class="c1"># vim installK8sMasterImage.sh</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master install<span class="o">]</span><span class="c1"># cat installK8sMasterImage.sh</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">set</span> -e
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">KUBE_VERSION</span><span class="o">=</span>v1.15.0
</span></span><span class="line"><span class="cl"><span class="nv">KUBE_PAUSE_VERSION</span><span class="o">=</span>3.1
</span></span><span class="line"><span class="cl"><span class="nv">ETCD_VERSION</span><span class="o">=</span>3.3.10
</span></span><span class="line"><span class="cl"><span class="nv">CORE_DNS_VERSION</span><span class="o">=</span>1.3.1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">GCR_URL</span><span class="o">=</span>k8s.gcr.io
</span></span><span class="line"><span class="cl"><span class="nv">ALIYUN_URL</span><span class="o">=</span>registry.cn-hangzhou.aliyuncs.com/google_containers
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">images</span><span class="o">=(</span>kube-proxy:<span class="si">${</span><span class="nv">KUBE_VERSION</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">kube-scheduler:<span class="si">${</span><span class="nv">KUBE_VERSION</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">kube-controller-manager:<span class="si">${</span><span class="nv">KUBE_VERSION</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">kube-apiserver:<span class="si">${</span><span class="nv">KUBE_VERSION</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">pause:<span class="si">${</span><span class="nv">KUBE_PAUSE_VERSION</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">etcd:<span class="si">${</span><span class="nv">ETCD_VERSION</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">coredns:<span class="si">${</span><span class="nv">CORE_DNS_VERSION</span><span class="si">}</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> imageName in <span class="si">${</span><span class="nv">images</span><span class="p">[@]</span><span class="si">}</span> <span class="p">;</span> <span class="k">do</span>
</span></span><span class="line"><span class="cl">  docker pull <span class="nv">$ALIYUN_URL</span>/<span class="nv">$imageName</span>
</span></span><span class="line"><span class="cl">  docker tag  <span class="nv">$ALIYUN_URL</span>/<span class="nv">$imageName</span> <span class="nv">$GCR_URL</span>/<span class="nv">$imageName</span>
</span></span><span class="line"><span class="cl">  docker rmi <span class="nv">$ALIYUN_URL</span>/<span class="nv">$imageName</span>
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master install<span class="o">]</span><span class="c1"># chmod +x installK8sMasterImage.sh &amp;&amp; ./installK8sMasterImage.sh</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">root@master install<span class="o">]</span><span class="c1"># kubeadm init --kubernetes-version=v1.15.0 --apiserver-advertise-address=192.168.33.10 --pod-network-cidr=10.244.0.0/16</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>init<span class="o">]</span> Using Kubernetes version: v1.15.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>preflight<span class="o">]</span> Running pre-flight checks
</span></span><span class="line"><span class="cl">	<span class="o">[</span>WARNING Hostname<span class="o">]</span>: hostname <span class="s2">&#34;master&#34;</span> could not be reached
</span></span><span class="line"><span class="cl">	<span class="o">[</span>WARNING Hostname<span class="o">]</span>: hostname <span class="s2">&#34;master&#34;</span>: lookup master on 10.0.2.3:53: no such host
</span></span><span class="line"><span class="cl"><span class="o">[</span>preflight<span class="o">]</span> Pulling images required <span class="k">for</span> setting up a Kubernetes cluster
</span></span><span class="line"><span class="cl"><span class="o">[</span>preflight<span class="o">]</span> This might take a minute or two, depending on the speed of your internet connection
</span></span><span class="line"><span class="cl"><span class="o">[</span>preflight<span class="o">]</span> You can also perform this action in beforehand using <span class="s1">&#39;kubeadm config images pull&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubelet-start<span class="o">]</span> Writing kubelet environment file with flags to file <span class="s2">&#34;/var/lib/kubelet/kubeadm-flags.env&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubelet-start<span class="o">]</span> Writing kubelet configuration to file <span class="s2">&#34;/var/lib/kubelet/config.yaml&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubelet-start<span class="o">]</span> Activating the kubelet service
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Using certificateDir folder <span class="s2">&#34;/etc/kubernetes/pki&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;front-proxy-ca&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;front-proxy-client&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;ca&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;apiserver&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> apiserver serving cert is signed <span class="k">for</span> DNS names <span class="o">[</span>master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local<span class="o">]</span> and IPs <span class="o">[</span>10.96.0.1 192.168.33.10<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;apiserver-kubelet-client&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;etcd/ca&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;etcd/server&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> etcd/server serving cert is signed <span class="k">for</span> DNS names <span class="o">[</span>master localhost<span class="o">]</span> and IPs <span class="o">[</span>192.168.33.10 127.0.0.1 ::1<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;etcd/healthcheck-client&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;apiserver-etcd-client&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;etcd/peer&#34;</span> certificate and key
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> etcd/peer serving cert is signed <span class="k">for</span> DNS names <span class="o">[</span>master localhost<span class="o">]</span> and IPs <span class="o">[</span>192.168.33.10 127.0.0.1 ::1<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>certs<span class="o">]</span> Generating <span class="s2">&#34;sa&#34;</span> key and public key
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubeconfig<span class="o">]</span> Using kubeconfig folder <span class="s2">&#34;/etc/kubernetes&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubeconfig<span class="o">]</span> Writing <span class="s2">&#34;admin.conf&#34;</span> kubeconfig file
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubeconfig<span class="o">]</span> Writing <span class="s2">&#34;kubelet.conf&#34;</span> kubeconfig file
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubeconfig<span class="o">]</span> Writing <span class="s2">&#34;controller-manager.conf&#34;</span> kubeconfig file
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubeconfig<span class="o">]</span> Writing <span class="s2">&#34;scheduler.conf&#34;</span> kubeconfig file
</span></span><span class="line"><span class="cl"><span class="o">[</span>control-plane<span class="o">]</span> Using manifest folder <span class="s2">&#34;/etc/kubernetes/manifests&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>control-plane<span class="o">]</span> Creating static Pod manifest <span class="k">for</span> <span class="s2">&#34;kube-apiserver&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>control-plane<span class="o">]</span> Creating static Pod manifest <span class="k">for</span> <span class="s2">&#34;kube-controller-manager&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>control-plane<span class="o">]</span> Creating static Pod manifest <span class="k">for</span> <span class="s2">&#34;kube-scheduler&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>etcd<span class="o">]</span> Creating static Pod manifest <span class="k">for</span> <span class="nb">local</span> etcd in <span class="s2">&#34;/etc/kubernetes/manifests&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>wait-control-plane<span class="o">]</span> Waiting <span class="k">for</span> the kubelet to boot up the control plane as static Pods from directory <span class="s2">&#34;/etc/kubernetes/manifests&#34;</span>. This can take up to 4m0s
</span></span><span class="line"><span class="cl"><span class="o">[</span>apiclient<span class="o">]</span> All control plane components are healthy after 26.502984 seconds
</span></span><span class="line"><span class="cl"><span class="o">[</span>upload-config<span class="o">]</span> Storing the configuration used in ConfigMap <span class="s2">&#34;kubeadm-config&#34;</span> in the <span class="s2">&#34;kube-system&#34;</span> Namespace
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubelet<span class="o">]</span> Creating a ConfigMap <span class="s2">&#34;kubelet-config-1.15&#34;</span> in namespace kube-system with the configuration <span class="k">for</span> the kubelets in the cluster
</span></span><span class="line"><span class="cl"><span class="o">[</span>upload-certs<span class="o">]</span> Skipping phase. Please see --upload-certs
</span></span><span class="line"><span class="cl"><span class="o">[</span>mark-control-plane<span class="o">]</span> Marking the node master as control-plane by adding the label <span class="s2">&#34;node-role.kubernetes.io/master=&#39;&#39;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>mark-control-plane<span class="o">]</span> Marking the node master as control-plane by adding the taints <span class="o">[</span>node-role.kubernetes.io/master:NoSchedule<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>bootstrap-token<span class="o">]</span> Using token: z1uxfl.z8l2uo9v8x3dtdcu
</span></span><span class="line"><span class="cl"><span class="o">[</span>bootstrap-token<span class="o">]</span> Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
</span></span><span class="line"><span class="cl"><span class="o">[</span>bootstrap-token<span class="o">]</span> configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order <span class="k">for</span> nodes to get long term certificate credentials
</span></span><span class="line"><span class="cl"><span class="o">[</span>bootstrap-token<span class="o">]</span> configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
</span></span><span class="line"><span class="cl"><span class="o">[</span>bootstrap-token<span class="o">]</span> configured RBAC rules to allow certificate rotation <span class="k">for</span> all node client certificates in the cluster
</span></span><span class="line"><span class="cl"><span class="o">[</span>bootstrap-token<span class="o">]</span> Creating the <span class="s2">&#34;cluster-info&#34;</span> ConfigMap in the <span class="s2">&#34;kube-public&#34;</span> namespace
</span></span><span class="line"><span class="cl"><span class="o">[</span>addons<span class="o">]</span> Applied essential addon: CoreDNS
</span></span><span class="line"><span class="cl"><span class="o">[</span>addons<span class="o">]</span> Applied essential addon: kube-proxy
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Your Kubernetes control-plane has initialized successfully!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">To start using your cluster, you need to run the following as a regular user:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  mkdir -p <span class="nv">$HOME</span>/.kube
</span></span><span class="line"><span class="cl">  sudo cp -i /etc/kubernetes/admin.conf <span class="nv">$HOME</span>/.kube/config
</span></span><span class="line"><span class="cl">  sudo chown <span class="k">$(</span>id -u<span class="k">)</span>:<span class="k">$(</span>id -g<span class="k">)</span> <span class="nv">$HOME</span>/.kube/config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">You should now deploy a pod network to the cluster.
</span></span><span class="line"><span class="cl">Run <span class="s2">&#34;kubectl apply -f [podnetwork].yaml&#34;</span> with one of the options listed at:
</span></span><span class="line"><span class="cl">  https://kubernetes.io/docs/concepts/cluster-administration/addons/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Then you can join any number of worker nodes by running the following on each as root:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubeadm join 192.168.33.10:6443 --token z1uxfl.z8l2uo9v8x3dtdcu <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --discovery-token-ca-cert-hash sha256:5c725b5b384221d25aed03a02a142fe2442d76f6362673b72f349abffb18b6f2
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># mkdir -p $HOME/.kube</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># sudo chown $(id -u):$(id -g) $HOME/.kube/config</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># kubectl get pod -n kube-system -owide</span>
</span></span><span class="line"><span class="cl">NAME                             READY   STATUS    RESTARTS   AGE   IP          NODE     NOMINATED NODE   READINESS GATES
</span></span><span class="line"><span class="cl">coredns-5c98db65d4-9g7dj         0/1     Pending   <span class="m">0</span>          39s   &lt;none&gt;      &lt;none&gt;   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">coredns-5c98db65d4-f6h7d         0/1     Pending   <span class="m">0</span>          39s   &lt;none&gt;      &lt;none&gt;   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">etcd-master                      1/1     Running   <span class="m">0</span>          57s   10.0.2.15   master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">kube-apiserver-master            1/1     Running   <span class="m">0</span>          57s   10.0.2.15   master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">kube-controller-manager-master   1/1     Running   <span class="m">0</span>          57s   10.0.2.15   master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">kube-proxy-n9tql                 1/1     Running   <span class="m">0</span>          39s   10.0.2.15   master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">kube-scheduler-master            1/1     Running   <span class="m">0</span>          57s   10.0.2.15   master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># wget https://raw.githubusercontent.com/coreos/flannel/62e44c867a2846fefb68bd5f178daf4da3095ccb/Documentation/kube-flannel.yml</span>
</span></span><span class="line"><span class="cl">--2019-06-30 06:47:53--  https://raw.githubusercontent.com/coreos/flannel/62e44c867a2846fefb68bd5f178daf4da3095ccb/Documentation/kube-flannel.yml
</span></span><span class="line"><span class="cl">Resolving raw.githubusercontent.com <span class="o">(</span>raw.githubusercontent.com<span class="o">)</span>... 151.101.228.133
</span></span><span class="line"><span class="cl">Connecting to raw.githubusercontent.com <span class="o">(</span>raw.githubusercontent.com<span class="o">)</span><span class="p">|</span>151.101.228.133<span class="p">|</span>:443... connected.
</span></span><span class="line"><span class="cl">HTTP request sent, awaiting response... <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Length: <span class="m">12306</span> <span class="o">(</span>12K<span class="o">)</span> <span class="o">[</span>text/plain<span class="o">]</span>
</span></span><span class="line"><span class="cl">Saving to: ‘kube-flannel.yml’
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">100%<span class="o">[==============================================================================================</span>&gt;<span class="o">]</span> 12,306      51.3KB/s   in 0.2s
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2019-06-30 06:47:57 <span class="o">(</span>51.3 KB/s<span class="o">)</span> - ‘kube-flannel.yml’ saved <span class="o">[</span>12306/12306<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master install<span class="o">]</span><span class="c1"># ll</span>
</span></span><span class="line"><span class="cl">total <span class="m">24</span>
</span></span><span class="line"><span class="cl">-rwxr-xr-x. <span class="m">1</span> root root   <span class="m">580</span> Jun <span class="m">30</span> 05:21 installK8sMasterImage.sh
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root <span class="m">12306</span> Jun <span class="m">30</span> 05:26 kube-flannel.yml
</span></span><span class="line"><span class="cl">-rwxr-xr-x. <span class="m">1</span> root root   <span class="m">294</span> Jun <span class="m">30</span> 04:20 preENV.sh
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master install<span class="o">]</span><span class="c1"># kubectl apply -f kube-flannel.yml</span>
</span></span><span class="line"><span class="cl">podsecuritypolicy.extensions/psp.flannel.unprivileged created
</span></span><span class="line"><span class="cl">clusterrole.rbac.authorization.k8s.io/flannel created
</span></span><span class="line"><span class="cl">clusterrolebinding.rbac.authorization.k8s.io/flannel created
</span></span><span class="line"><span class="cl">serviceaccount/flannel created
</span></span><span class="line"><span class="cl">configmap/kube-flannel-cfg created
</span></span><span class="line"><span class="cl">daemonset.extensions/kube-flannel-ds-amd64 created
</span></span><span class="line"><span class="cl">daemonset.extensions/kube-flannel-ds-arm64 created
</span></span><span class="line"><span class="cl">daemonset.extensions/kube-flannel-ds-arm created
</span></span><span class="line"><span class="cl">daemonset.extensions/kube-flannel-ds-ppc64le created
</span></span><span class="line"><span class="cl">daemonset.extensions/kube-fla<span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># kubectl get pod -n kube-system -owide</span>
</span></span><span class="line"><span class="cl">NAME                             READY   STATUS    RESTARTS   AGE     IP           NODE     NOMINATED NODE   READINESS GATES
</span></span><span class="line"><span class="cl">coredns-5c98db65d4-9g7dj         1/1     Running   <span class="m">0</span>          5m42s   10.244.0.3   master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">coredns-5c98db65d4-f6h7d         1/1     Running   <span class="m">0</span>          5m42s   10.244.0.2   master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">etcd-master                      1/1     Running   <span class="m">0</span>          6m      10.0.2.15    master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">kube-apiserver-master            1/1     Running   <span class="m">0</span>          6m      10.0.2.15    master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">kube-controller-manager-master   1/1     Running   <span class="m">0</span>          6m      10.0.2.15    master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">kube-flannel-ds-amd64-lbprc      1/1     Running   <span class="m">0</span>          84s     10.0.2.15    master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">kube-proxy-n9tql                 1/1     Running   <span class="m">0</span>          5m42s   10.0.2.15    master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl">kube-scheduler-master            1/1     Running   <span class="m">0</span>          6m      10.0.2.15    master   &lt;none&gt;           &lt;none&gt;
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master install<span class="o">]</span><span class="c1"># # 查看当前集群状态</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># kubectl get node -A</span>
</span></span><span class="line"><span class="cl">NAME     STATUS   ROLES    AGE     VERSION
</span></span><span class="line"><span class="cl">master   Ready    master   6m29s   v1.15.0
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1">#</span></span></span></code></pre></div></div>
<h2 id="各-node-节点上处理">各 Node 节点上处理</h2>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>root@node2 install<span class="o">]</span><span class="c1"># vim installK8sNodeImage.sh</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@node5 install<span class="o">]</span><span class="c1"># cat installK8sNodeImage.sh</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">set</span> -e
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">KUBE_VERSION</span><span class="o">=</span>v1.15.0
</span></span><span class="line"><span class="cl"><span class="nv">KUBE_PAUSE_VERSION</span><span class="o">=</span>3.1
</span></span><span class="line"><span class="cl"><span class="nv">CORE_DNS_VERSION</span><span class="o">=</span>1.3.1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">GCR_URL</span><span class="o">=</span>k8s.gcr.io
</span></span><span class="line"><span class="cl"><span class="nv">ALIYUN_URL</span><span class="o">=</span>registry.cn-hangzhou.aliyuncs.com/google_containers
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">images</span><span class="o">=(</span>kube-proxy:<span class="si">${</span><span class="nv">KUBE_VERSION</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">pause:<span class="si">${</span><span class="nv">KUBE_PAUSE_VERSION</span><span class="si">}</span>
</span></span><span class="line"><span class="cl">coredns:<span class="si">${</span><span class="nv">CORE_DNS_VERSION</span><span class="si">}</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> imageName in <span class="si">${</span><span class="nv">images</span><span class="p">[@]</span><span class="si">}</span> <span class="p">;</span> <span class="k">do</span>
</span></span><span class="line"><span class="cl">  docker pull <span class="nv">$ALIYUN_URL</span>/<span class="nv">$imageName</span>
</span></span><span class="line"><span class="cl">  docker tag  <span class="nv">$ALIYUN_URL</span>/<span class="nv">$imageName</span> <span class="nv">$GCR_URL</span>/<span class="nv">$imageName</span>
</span></span><span class="line"><span class="cl">  docker rmi <span class="nv">$ALIYUN_URL</span>/<span class="nv">$imageName</span>
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@node1 ~<span class="o">]</span><span class="c1"># chmod +x installK8sNodeImage.sh  &amp;&amp; ./installK8sNodeImage.sh</span>
</span></span><span class="line"><span class="cl">v1.15.0: Pulling from google_containers/kube-proxy
</span></span><span class="line"><span class="cl">39fafc05754f: Pull <span class="nb">complete</span>
</span></span><span class="line"><span class="cl">db3f71d0eb90: Pull <span class="nb">complete</span>
</span></span><span class="line"><span class="cl">b593bfa65f6f: Pull <span class="nb">complete</span>
</span></span><span class="line"><span class="cl">Digest: sha256:7b94921f1c64876d3663698ade724fce79b417b32f0e1053976ca68a18fc0cba
</span></span><span class="line"><span class="cl">Status: Downloaded newer image <span class="k">for</span> registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.15.0
</span></span><span class="line"><span class="cl">Untagged: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.15.0
</span></span><span class="line"><span class="cl">Untagged: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy@sha256:7b94921f1c64876d3663698ade724fce79b417b32f0e1053976ca68a18fc0cba
</span></span><span class="line"><span class="cl">3.1: Pulling from google_containers/pause
</span></span><span class="line"><span class="cl">cf9202429979: Pull <span class="nb">complete</span>
</span></span><span class="line"><span class="cl">Digest: sha256:759c3f0f6493093a9043cc813092290af69029699ade0e3dbe024e968fcb7cca
</span></span><span class="line"><span class="cl">Status: Downloaded newer image <span class="k">for</span> registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1
</span></span><span class="line"><span class="cl">Untagged: registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1
</span></span><span class="line"><span class="cl">Untagged: registry.cn-hangzhou.aliyuncs.com/google_containers/pause@sha256:759c3f0f6493093a9043cc813092290af69029699ade0e3dbe024e968fcb7cca
</span></span><span class="line"><span class="cl">1.3.1: Pulling from google_containers/coredns
</span></span><span class="line"><span class="cl">e0daa8927b68: Pull <span class="nb">complete</span>
</span></span><span class="line"><span class="cl">3928e47de029: Pull <span class="nb">complete</span>
</span></span><span class="line"><span class="cl">Digest: sha256:638adb0319813f2479ba3642bbe37136db8cf363b48fb3eb7dc8db634d8d5a5b
</span></span><span class="line"><span class="cl">Status: Downloaded newer image <span class="k">for</span> registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.3.1
</span></span><span class="line"><span class="cl">Untagged: registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.3.1
</span></span><span class="line"><span class="cl">Untagged: registry.cn-hangzhou.aliyuncs.com/google_containers/coredns@sha256:638adb0319813f2479ba3642bbe37136db8cf363b48fb3eb7dc8db634d8d5a5b
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@node1 ~<span class="o">]</span><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@node5 install<span class="o">]</span><span class="c1"># # Node 加入集群</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@node1 install<span class="o">]</span><span class="c1"># kubeadm join 192.168.33.10:6443 --token sofcoc.j1it9gvn4uxpduo5 \</span>
</span></span><span class="line"><span class="cl">&gt;     --discovery-token-ca-cert-hash sha256:3a9b79bd92f66a6284322ade27732932888c0f99884596d5f2c9a03d272e475b
</span></span><span class="line"><span class="cl"><span class="o">[</span>preflight<span class="o">]</span> Running pre-flight checks
</span></span><span class="line"><span class="cl"><span class="o">[</span>preflight<span class="o">]</span> Reading configuration from the cluster...
</span></span><span class="line"><span class="cl"><span class="o">[</span>preflight<span class="o">]</span> FYI: You can look at this config file with <span class="s1">&#39;kubectl -n kube-system get cm kubeadm-config -oyaml&#39;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubelet-start<span class="o">]</span> Downloading configuration <span class="k">for</span> the kubelet from the <span class="s2">&#34;kubelet-config-1.15&#34;</span> ConfigMap in the kube-system namespace
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubelet-start<span class="o">]</span> Writing kubelet configuration to file <span class="s2">&#34;/var/lib/kubelet/config.yaml&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubelet-start<span class="o">]</span> Writing kubelet environment file with flags to file <span class="s2">&#34;/var/lib/kubelet/kubeadm-flags.env&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubelet-start<span class="o">]</span> Activating the kubelet service
</span></span><span class="line"><span class="cl"><span class="o">[</span>kubelet-start<span class="o">]</span> Waiting <span class="k">for</span> the kubelet to perform the TLS Bootstrap...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">This node has joined the cluster:
</span></span><span class="line"><span class="cl">* Certificate signing request was sent to apiserver and a response was received.
</span></span><span class="line"><span class="cl">* The Kubelet was informed of the new secure connection details.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Run <span class="s1">&#39;kubectl get nodes&#39;</span> on the control-plane to see this node join the cluster.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@node1 install<span class="o">]</span><span class="c1">#</span></span></span></code></pre></div></div>
<h2 id="master-节点操作">master 节点操作</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># #将 master 节点也作为工作节点进行 pod 部署</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master ~<span class="o">]</span><span class="c1"># kubectl taint nodes master node-role.kubernetes.io/master-</span>
</span></span><span class="line"><span class="cl">node/master untainted</span></span></code></pre></div></div>
<h2 id="打-label">打 label</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl label node master nodename=master</span>
</span></span><span class="line"><span class="cl">node/master labeled
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl label node node1 nodename=node1</span>
</span></span><span class="line"><span class="cl">node/node1 labeled
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl label node node2 nodename=node2</span>
</span></span><span class="line"><span class="cl">node/node2 labeled
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl label node node3 nodename=node3</span>
</span></span><span class="line"><span class="cl">node/node3 labeled
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl label node node4 nodename=node4</span>
</span></span><span class="line"><span class="cl">node/node4 labeled
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl label node node5 nodename=node5</span>
</span></span><span class="line"><span class="cl">node/node5 labeled</span></span></code></pre></div></div>
<h2 id="测试">测试</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vim nginx-deployment.yaml</span></span></code></pre></div></div>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-yaml">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">apps/v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Deployment</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx-deployment</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">replicas</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">selector</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">matchLabels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">template</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">containers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx:1.7.9</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">imagePullPolicy</span><span class="p">:</span><span class="w"> </span><span class="l">IfNotPresent</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">containerPort</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">protocol</span><span class="p">:</span><span class="w"> </span><span class="l">TCP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">nodeSelector</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">nodename</span><span class="p">:</span><span class="w"> </span><span class="l">master</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx-service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">labels</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">targetPort</span><span class="p">:</span><span class="w"> </span><span class="m">8080</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">selector</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">app-name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">extensions/v1beta1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Ingress</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">namespace</span><span class="p">:</span><span class="w"> </span><span class="l">default</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">rules</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="l">c4.k8s.com</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">http</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">paths</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">backend</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">serviceName</span><span class="p">:</span><span class="w"> </span><span class="l">nginx-service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">servicePort</span><span class="p">:</span><span class="w"> </span><span class="m">8080</span></span></span></code></pre></div></div>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl apply -f nginx-deployment.yaml</span>
</span></span><span class="line"><span class="cl">deployment.apps/nginx-deployment created
</span></span><span class="line"><span class="cl">service/nginx-service created
</span></span><span class="line"><span class="cl">ingress.extensions/nginx created
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl get service/nginx-service</span>
</span></span><span class="line"><span class="cl">NAME            TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class="o">(</span>S<span class="o">)</span>   AGE
</span></span><span class="line"><span class="cl">nginx-service   ClusterIP   10.100.2.78   &lt;none&gt;        80/TCP    38s
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl get ing</span>
</span></span><span class="line"><span class="cl">NAME    HOSTS        ADDRESS   PORTS   AGE
</span></span><span class="line"><span class="cl">nginx   c4.k8s.com             <span class="m">80</span>      4m5s
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># wget c4.k8s.com</span>
</span></span><span class="line"><span class="cl">--2019-06-30 07:12:18--  http://c4.k8s.com/
</span></span><span class="line"><span class="cl">Resolving c4.k8s.com <span class="o">(</span>c4.k8s.com<span class="o">)</span>... 208.73.211.177, 208.73.210.202, 208.73.211.165, ...
</span></span><span class="line"><span class="cl">Connecting to c4.k8s.com <span class="o">(</span>c4.k8s.com<span class="o">)</span><span class="p">|</span>208.73.211.177<span class="p">|</span>:80... connected.
</span></span><span class="line"><span class="cl">HTTP request sent, awaiting response... <span class="m">302</span> Found : Moved Temporarily
</span></span><span class="line"><span class="cl">Location: http://1223.dragonparking.com/?site<span class="o">=</span>c4.k8s.com <span class="o">[</span>following<span class="o">]</span>
</span></span><span class="line"><span class="cl">--2019-06-30 07:12:19--  http://1223.dragonparking.com/?site<span class="o">=</span>c4.k8s.com
</span></span><span class="line"><span class="cl">Resolving 1223.dragonparking.com <span class="o">(</span>1223.dragonparking.com<span class="o">)</span>... 46.51.238.1
</span></span><span class="line"><span class="cl">Connecting to 1223.dragonparking.com <span class="o">(</span>1223.dragonparking.com<span class="o">)</span><span class="p">|</span>46.51.238.1<span class="p">|</span>:80... connected.
</span></span><span class="line"><span class="cl">HTTP request sent, awaiting response... <span class="m">302</span> Moved Temporarily
</span></span><span class="line"><span class="cl">Location: http://park.zunmi.cn/?acct<span class="o">=</span>1223<span class="p">&amp;</span><span class="nv">site</span><span class="o">=</span>c4.k8s.com <span class="o">[</span>following<span class="o">]</span>
</span></span><span class="line"><span class="cl">--2019-06-30 07:12:21--  http://park.zunmi.cn/?acct<span class="o">=</span>1223<span class="p">&amp;</span><span class="nv">site</span><span class="o">=</span>c4.k8s.com
</span></span><span class="line"><span class="cl">Resolving park.zunmi.cn <span class="o">(</span>park.zunmi.cn<span class="o">)</span>... 52.197.205.2
</span></span><span class="line"><span class="cl">Connecting to park.zunmi.cn <span class="o">(</span>park.zunmi.cn<span class="o">)</span><span class="p">|</span>52.197.205.2<span class="p">|</span>:80... connected.
</span></span><span class="line"><span class="cl">HTTP request sent, awaiting response... <span class="m">200</span> OK
</span></span><span class="line"><span class="cl">Length: <span class="m">1020</span> <span class="o">[</span>text/html<span class="o">]</span>
</span></span><span class="line"><span class="cl">Saving to: ‘index.html’
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">100%<span class="o">[======================================================================================================================================</span>&gt;<span class="o">]</span> 1,020       --.-K/s   in 0s
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2019-06-30 07:12:22 <span class="o">(</span>93.5 MB/s<span class="o">)</span> - ‘index.html’ saved <span class="o">[</span>1020/1020<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># ll</span>
</span></span><span class="line"><span class="cl">total <span class="m">8</span>
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root <span class="m">1020</span> May  <span class="m">6</span> 23:28 index.html
</span></span><span class="line"><span class="cl">-rw-r--r--. <span class="m">1</span> root root  <span class="m">908</span> Jun <span class="m">30</span> 07:07 nginx-deployment.yaml
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@master temp<span class="o">]</span><span class="c1"># kubectl delete -f nginx-deployment.yaml</span>
</span></span><span class="line"><span class="cl">deployment.apps <span class="s2">&#34;nginx-deployment&#34;</span> deleted
</span></span><span class="line"><span class="cl">service <span class="s2">&#34;nginx-service&#34;</span> deleted
</span></span><span class="line"><span class="cl">ingress.extensions <span class="s2">&#34;nginx&#34;</span> deleted</span></span></code></pre></div></div>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">1. 博客：https://guzhongren.github.io/</a></li>
<li><a href="https://sm.ms/" target="_blank" rel="noopener noreffer ">2. 图床：https://sm.ms/</a></li>
<li><a href="https://yq.aliyun.com/articles/706912?spm=a2c4e.11155435.0.0.59853312vRSRSj" target="_blank" rel="noopener noreffer ">3. 原文：https://yq.aliyun.com/articles/706912?spm=a2c4e.11155435.0.0.59853312vRSRSj</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
]]></description></item></channel></rss>