<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Docker - 标签 - 谷中仁的博客</title><link>https://guzhongren.github.io/tags/docker/</link><description>Docker - 标签 - 谷中仁的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>guzhongren@live.cn (谷中仁)</managingEditor><webMaster>guzhongren@live.cn (谷中仁)</webMaster><copyright>Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 14 Jan 2022 19:03:28 +0800</lastBuildDate><atom:link href="https://guzhongren.github.io/tags/docker/" rel="self" type="application/rss+xml"/><item><title>依旧免费使用 Docker Desktop 的方案</title><link>https://guzhongren.github.io/2022/01/%E4%BE%9D%E6%97%A7%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8docker-desktop%E7%9A%84%E6%96%B9%E6%A1%88/</link><pubDate>Fri, 14 Jan 2022 19:03:28 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2022/01/%E4%BE%9D%E6%97%A7%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8docker-desktop%E7%9A%84%E6%96%B9%E6%A1%88/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.jsdelivr.net/gh/guzhongren/data-hosting@main/DevOps/docker.desktop.3.5.3.66501.4nfe3o7foow0.webp" referrerpolicy="no-referrer">
            </div><h2 id="缘由">缘由</h2>
<p><a href="https://www.docker.com/" target="_blank" rel="noopener noreffer ">Docker</a> 公司在 2021 年 8 月更新了 Docker Desktop 的 <a href="https://docs.docker.com/subscription/#docker-desktop-license-agreement" target="_blank" rel="noopener noreffer ">使用条款</a>，决定对大企业（员工超过 250 人或者年收入超过 1 千万美元）用户（包含员工的个人性质使用）开始执行收费订阅的策略，于 2021 年 8 月 31 日生效，同时，给了使用者一个缓冲时间，延续到 2022 年 1 月 31 日，在此之前可以继续免费使用。</p>
<p>很明显，开源公司在这个伸手的年代活不下去了，还有最近比较火的 <a href="https://github.com/Marak/Faker.js" target="_blank" rel="noopener noreffer ">Facker.js</a> 删库事件。对删库这事多说几句，因为自家火灾，作者房子被烧了，然后他想让使用自己辛辛苦苦免费维护的 Facker.js 的这些商业公司来为自己捐款改善自己的生活环境，并继续维护 Facker.js, 但很多公司不鸟他，他只能删库来抱怨。要说呀，用这些库的人的人都是开发者，安装完你开发的库，然后就开开心心的写代码去了，除非不会用的库，不然没人去看你的 README 的。更何况你仓库边上的捐款信息。</p>
<h2 id="问题">问题</h2>
<p>如果你现在下载最新的或者旧版的 Docker 安装包，安装包的使用条款都已经被悄悄的动了手脚，里面的 Liscense 的条款已经有了上面说的内容了。所以说你还是会被要求收费的。除非你在一个小公司，人数和收入不在条款之内，那你就开心的用吧。</p>
<p>但是还有一部分人就在这个条款的要求范围之内了。</p>
<blockquote>
<p>安全无小事。</p>
</blockquote>
<blockquote>
<p>雪崩的时候，没有一片雪花是无辜的。</p>
</blockquote>
<p>市面上还是有不少 Docker 的替代方案，比如 <a href="https://github.com/containers/podman" target="_blank" rel="noopener noreffer ">podman</a>, <a href="https://github.com/lima-vm/lima" target="_blank" rel="noopener noreffer ">lima</a> 和 <a href="https://github.com/abiosoft/colima" target="_blank" rel="noopener noreffer ">colima</a>, 但用起来却没有 Docker 这么流畅，舒服。</p>
<h2 id="解决方案">解决方案</h2>
<p>使用 2021 年 8 月 30 日之前的任何版本都是可以的，所以下载之前的旧版并且不升级就可以了。</p>
<h3 id="安装旧版-docker-desktop">安装旧版 Docker Desktop</h3>
<p>我在百度网盘有备份 Mac 版 3.5.2 版本的 Docker Desktop 副本，可以下载安装。</p>
<blockquote>
<p>链接：https://pan.baidu.com/s/1nmJezbYx8BmexK6eVXihtg 提取码：gedn</p>
</blockquote>
<p>如果觉得慢，恰好我也有空，我可以将我本地的副本直接隔空给你。</p>
<h3 id="验证安装的-docker-副本的修改时间">验证安装的 Docker 副本的修改时间</h3>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">    ~/Downloads                                                                               19:54:48 
</span></span><span class="line"><span class="cl">❯ ls -al /Applications/Docker.app/Contents/Resources/LICENSE.rtf /Applications/Docker.app/Contents/MacOS/Docker
</span></span><span class="line"><span class="cl">.rwxr-xr-x zhongren.gu admin <span class="m">16</span> MB Thu Jul  <span class="m">8</span> 01:58:59 <span class="m">2021</span>  /Applications/Docker.app/Contents/MacOS/Docker
</span></span><span class="line"><span class="cl">.rw-r--r-- zhongren.gu admin <span class="m">19</span> KB Thu Jul  <span class="m">8</span> 01:59:00 <span class="m">2021</span>  /Applications/Docker.app/Contents/Resources/LICENSE.rtf</span></span></code></pre></div></div>
<p>可以看到，两个文件最后的修改时间是 2021 年 6 月 8 日，在 2021 年 8 月 30 日之前，所以是符合我们的要求的。</p>
<h3 id="禁止-docker-升级">禁止 Docker 升级</h3>
<p>安装完旧版的 Docker 之后，要禁止 Docker 升级，这样，Docker 的使用条款就永远是旧的，Docker 的律师也拿你没办法喽。</p>
<p>在这通过命令行修改 host 文件，使 <code>desktop.docker.com</code> 指向 <code>127.0.0.1</code>, 不然 Docker 升级服务访问真正的 Docker 服务器。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s1">&#39;127.0.0.1 desktop.docker.com&#39;</span> <span class="p">|</span> sudo tee -a /etc/hosts</span></span></code></pre></div></div>
<h3 id="验证未升级">验证未升级</h3>
<p></p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客：https://guzhongren.github.io/</a></li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此 <a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a> 进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item><item><title>Harbor 安装小记</title><link>https://guzhongren.github.io/2019/06/harbor-%E5%AE%89%E8%A3%85%E5%B0%8F%E8%AE%B0.zh/</link><pubDate>Sun, 09 Jun 2019 14:32:13 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2019/06/harbor-%E5%AE%89%E8%A3%85%E5%B0%8F%E8%AE%B0.zh/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://i.loli.net/2020/03/29/moaTGH6EWiqyhRt.png" referrerpolicy="no-referrer">
            </div><h2 id="场景">场景</h2>
<p>在搭建私有云环境时，我们需要将我们打包的镜像存储在局域网内，而不是把镜像推送到 hub.docker.com；一方面是因为安全问题，另一方面在局域网内存储，网速炒鸡快。当然对于私有云搭建，在本地搭建镜像仓库那是必须的。接下来，对我安装 Harbor 做一个记录。</p>
<h2 id="分析">分析</h2>
<p>因为 Harbor 是用 docker 跑起来的，所以我们的机器上必须有 docker 环境，还有比较中要的一点，Harbor 需要使用 docker-compose, 所以需要 docker-compose。</p>
<h2 id="安装">安装</h2>
<h3 id="docker-安装">docker 安装</h3>
<p>略。..（相信你肯定不会怪我）</p>
<h3 id="docker-compose-安装">docker-compose 安装</h3>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ sudo curl -L <span class="s2">&#34;https://github.com/docker/compose/releases/download/1.24.0/docker-compose-</span><span class="k">$(</span>uname -s<span class="k">)</span><span class="s2">-</span><span class="k">$(</span>uname -m<span class="k">)</span><span class="s2">&#34;</span> -o /usr/local/bin/docker-compose
</span></span><span class="line"><span class="cl">$ sudo chmod +x /usr/local/bin/docker-compose
</span></span><span class="line"><span class="cl">$ docker-compose --version
</span></span><span class="line"><span class="cl">docker-compose version 1.24.0, build 1110ad01</span></span></code></pre></div></div>
<h3 id="安装-harbor">安装 Harbor</h3>
<blockquote>
<p>离线安装版</p>
</blockquote>
<h4 id="获取并解压">获取并解压</h4>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ wget https://storage.googleapis.com/harbor-releases/release-1.8.0/harbor-offline-installer-v1.8.0.tgz
</span></span><span class="line"><span class="cl">$ tar xvf harbor-offline-installer-v1.8.0.tgz</span></span></code></pre></div></div>
<p>解压会生成 Harbor 文件夹</p>
<h4 id="修改配置文件">修改配置文件</h4>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ <span class="nb">cd</span> Harbor
</span></span><span class="line"><span class="cl">$ vim /Harbor.yaml</span></span></code></pre></div></div>
<p>需要配置的地方有几处，但最重要的是 hostname, hostname 必须指定为域名，不能使 localhost,127.0.0.1 这样的地址，别的密码、端口可可定义。如下是我的配置</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-yaml">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># Configuration file of Harbor</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># The IP address or hostname to access admin UI and registry service.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="l">hub.k8s.com</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># http related config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">http</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># port for http, default is 80. If https enabled, this port will redirect to https port</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># https related config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># https:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   # https port for harbor, default is 443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   port: 443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   # The path of cert and key files for nginx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   certificate: /your/certificate/path</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   private_key: /your/private/key/path</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Uncomment external_url if you want to enable external proxy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># And when it enabled the hostname will no longer used</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># external_url: https://reg.mydomain.com:8433</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># The initial password of Harbor admin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># It only works in first time to install harbor</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Remember Change the admin password from UI after launching Harbor.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">harbor_admin_password</span><span class="p">:</span><span class="w"> </span><span class="l">Harbor12345</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Harbor DB configuration</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">database</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The password for the root user of Harbor DB. Change this before any production use.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">root123</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># The default data volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">data_volume</span><span class="p">:</span><span class="w"> </span><span class="l">/data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Harbor Storage settings by default is using /data dir on local filesystem</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Uncomment storage_service setting If you want to using external storage</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># storage_service:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   # of registry&#39;s and chart repository&#39;s containers.  This is usually needed when the user hosts a internal storage with self signed certificate.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   ca_bundle:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   filesystem:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     maxthreads: 100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   # set disable to true when you want to disable registry redirect</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   redirect:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     disabled: false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Clair configuration</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">clair</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">updaters_interval</span><span class="p">:</span><span class="w"> </span><span class="m">12</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Config http proxy for Clair, e.g. http://my.proxy.com:3128</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Clair doesn&#39;t need to connect to harbor internal components via http proxy.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">http_proxy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">https_proxy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">no_proxy</span><span class="p">:</span><span class="w"> </span><span class="m">127.0.0.1</span><span class="p">,</span><span class="l">localhost,core,registry</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobservice</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Maximum number of job workers in job service</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">max_job_workers</span><span class="p">:</span><span class="w"> </span><span class="m">10</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">chart</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Change the value of absolute_url to enabled can enable absolute url in chart</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">absolute_url</span><span class="p">:</span><span class="w"> </span><span class="l">disabled</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Log configurations</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">log</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># options are debug, info, warning, error, fatal</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">level</span><span class="p">:</span><span class="w"> </span><span class="l">info</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">rotate_count</span><span class="p">:</span><span class="w"> </span><span class="m">50</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># are all valid.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">rotate_size</span><span class="p">:</span><span class="w"> </span><span class="l">200M</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The directory on your host that store log</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">location</span><span class="p">:</span><span class="w"> </span><span class="l">/var/log/harbor</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">_version</span><span class="p">:</span><span class="w"> </span><span class="m">1.8.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Uncomment external_database if using external database. Currently only support POSTGRES.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Four databases are needed to be create first by users for Harbor core, Clair, Notary server</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># and Notary signer. And the tables will be generated automatically when Harbor starting up.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># NOTE: external_database is unable to custom attributes individually, you must do them in block.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># external_database:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   harbor:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     host: harbor_db_host</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     port: harbor_db_port</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     db_name: harbor_db_name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     username: harbor_db_username</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     password: harbor_db_password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     ssl_mode: disable</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   clair:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     host: clair_db_host</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     port: clair_db_port</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     db_name: clair_db_name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     username: clair_db_username</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     password: clair_db_password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     ssl_mode: disable</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   notary_signer:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     host: notary_signer_db_host</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     port: notary_signer_db_port</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     db_name: notary_signer_db_name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     username: notary_signer_db_username</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     password: notary_signer_db_password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     ssl_mode: disable</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   notary_server:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     host: notary_server_db_host</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     port: notary_server_db_port</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     db_name: notary_server_db_name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     username: notary_server_db_username</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     password: notary_server_db_password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     ssl_mode: disable</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Uncomment external_redis if using external Redis server</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># external_redis:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   host: redis</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   port: 6379</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   password:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   # db_index 0 is for core, it&#39;s unchangeable</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   registry_db_index: 1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   jobservice_db_index: 2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   chartmuseum_db_index: 3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># uaa:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   ca_file: /path/to/ca</span></span></span></code></pre></div></div>
<h4 id="执行安装">执行安装</h4>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ./install.sh
</span></span><span class="line"><span class="cl">......
</span></span><span class="line"><span class="cl">Creating harbor-portal     ... <span class="k">done</span>
</span></span><span class="line"><span class="cl">Creating nginx             ... <span class="k">done</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> ----Harbor has been installed and started successfully.----
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Now you should be able to visit the admin portal at http://hub.k8s.com.
</span></span><span class="line"><span class="cl">For more details, please visit https://github.com/goharbor/harbor .</span></span></code></pre></div></div>
<p>最后出现如上提示就安装成功了。将 hub.k8s.com 解析到本地即可访问。</p>
<p></p>
<h3 id="配置etcdockerdaemonjson">配置/etc/docker/daemon.json</h3>
<blockquote>
<p>配置此项的目的是让 docker push 可以将镜像推送到私有仓库中</p>
</blockquote>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ vim /etc/docker/daemon.json
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;registry-mirrors&#34;</span>: <span class="o">[</span><span class="s2">&#34;https://gmjjwogo.mirror.aliyuncs.com&#34;</span><span class="o">]</span>,
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;insecure-registries&#34;</span>: <span class="o">[</span><span class="s2">&#34;hub.k8s.com&#34;</span><span class="o">]</span> <span class="c1"># 追加内容，必须符合 json 规范</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></div></div>
<h4 id="重启-docker">重启 docker</h4>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ systemctl restart docker</span></span></code></pre></div></div>
<h4 id="将本地-golang-镜像推送到私有仓库">将本地 golang 镜像推送到私有仓库</h4>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ docker login hub.k8s.com
</span></span><span class="line"><span class="cl">Username: admin
</span></span><span class="line"><span class="cl">Password:
</span></span><span class="line"><span class="cl">WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
</span></span><span class="line"><span class="cl">Configure a credential helper to remove this warning. See
</span></span><span class="line"><span class="cl">https://docs.docker.com/engine/reference/commandline/login/#credentials-store
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Login Succeeded</span></span></code></pre></div></div>
<h4 id="为-golang-打标签并推送镜像">为 golang 打标签并推送镜像</h4>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ docker tag golang:alpine hub.k8s.com/cms/golang:alpine
</span></span><span class="line"><span class="cl">$  docker push hub.k8s.com/cms/golang:alpine
</span></span><span class="line"><span class="cl">The push refers to repository <span class="o">[</span>hub.k8s.com/cms/golang<span class="o">]</span>
</span></span><span class="line"><span class="cl">23419e186866: Pushed
</span></span><span class="line"><span class="cl">1f6ba46a9c52: Pushed
</span></span><span class="line"><span class="cl">968d46c1d20e: Pushed
</span></span><span class="line"><span class="cl">b87598efb2f0: Pushed
</span></span><span class="line"><span class="cl">f1b5933fe4b5: Pushed
</span></span><span class="line"><span class="cl">alpine: digest: sha256:5ec3232b32e6876c0941d66d8392f667c77ca1ef14cafb85991deea4339b92da size: <span class="m">1365</span></span></span></code></pre></div></div>
<h2 id="小结">小结</h2>
<p>Harbor 是一个 docker 镜像私有仓库的解决方案，是基于 docker-compose 运行起来的，使用相对简单。</p>
<h2 id="引用">引用</h2>
<ul>
<li><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">1. 博客：https://guzhongren.github.io/</a>*</li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p></p>
]]></description></item></channel></rss>