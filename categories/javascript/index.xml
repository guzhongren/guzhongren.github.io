<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>JavaScript - 分类 - 谷中仁的博客</title><link>https://guzhongren.github.io/categories/javascript/</link><description>JavaScript - 分类 - 谷中仁的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>guzhongren@live.cn (谷中仁)</managingEditor><webMaster>guzhongren@live.cn (谷中仁)</webMaster><copyright>Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 06 Jun 2021 14:00:12 +0800</lastBuildDate><atom:link href="https://guzhongren.github.io/categories/javascript/" rel="self" type="application/rss+xml"/><item><title>对 forEach 和 for 两种循环类型中执行异步函数的复盘</title><link>https://guzhongren.github.io/2021/06/%E5%AF%B9foreach%E5%92%8Cfor%E4%B8%A4%E7%A7%8D%E5%BE%AA%E7%8E%AF%E7%B1%BB%E5%9E%8B%E4%B8%AD%E6%89%A7%E8%A1%8C%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0%E7%9A%84%E5%A4%8D%E7%9B%98/</link><pubDate>Sun, 06 Jun 2021 14:00:12 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2021/06/%E5%AF%B9foreach%E5%92%8Cfor%E4%B8%A4%E7%A7%8D%E5%BE%AA%E7%8E%AF%E7%B1%BB%E5%9E%8B%E4%B8%AD%E6%89%A7%E8%A1%8C%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0%E7%9A%84%E5%A4%8D%E7%9B%98/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="问题">问题</h2>
<p>有这么一个需求，有一个合法的数组，需要每隔 3 秒执行一个异步函数，直到最后得到所有异步函数执行结果。</p>
<h2 id="伪解决方案">伪解决方案</h2>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-js">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// testForEach.js
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">sleep</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">resolve</span><span class="p">,</span> <span class="mi">3000</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">getDifferent</span> <span class="o">=</span> <span class="p">(</span><span class="nx">startDate</span><span class="p">,</span> <span class="nx">endDate</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">endDate</span> <span class="o">-</span> <span class="nx">startDate</span><span class="p">)</span> <span class="o">/</span> <span class="mi">1000</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">startDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">566</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">78</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">89</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">async</span> <span class="kd">function</span> <span class="nx">testForEach</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">promiseList</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">  <span class="nx">list</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kr">async</span> <span class="nx">item</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;================1forEach================&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="kr">await</span> <span class="nx">sleep</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">      <span class="nx">promiseList</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kr">await</span> <span class="nx">item</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;================2forEach================&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="kr">await</span> <span class="nb">Promise</span><span class="p">.</span><span class="nx">all</span><span class="p">([...</span><span class="nx">promiseList</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">endDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">getDifferent</span><span class="p">(</span><span class="nx">startDate</span><span class="p">,</span> <span class="nx">endDate</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">result</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">testForEach</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="nx">result</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span></span></span></code></pre></div></div>
<h3 id="解释就是">解释就是</h3>
<p><code>sleep</code> 函数用来等待函数执行；</p>
<p><code>getDifferent</code> 函数用来计算函数开始执行到结束的时间差；</p>
<p><code>testForEach</code> 中用  Array 的 <code>forEach</code>实现循环，并在其中使用休眠 3 秒的逻辑，且通过对原有数组进行异步计算（item * 2）, 然后返回 <code>await Promise.all</code>的结果。</p>
<p>最后一行，执行 Promise 函数，得到 Promise.all 的返回结果，打印，验证。</p>
<p>这一切是不是没有问题？ 最简单的验证办法就是在浏览器控制台运行一下； 这是我的运行结果</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-js">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="mi">12</span><span class="o">================</span><span class="mi">1</span><span class="nx">forEach</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="nb">Promise</span> <span class="p">{</span><span class="o">&lt;</span><span class="nx">fulfilled</span><span class="o">&gt;:</span> <span class="kc">undefined</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">12</span><span class="o">================</span><span class="mi">2</span><span class="nx">forEach</span><span class="o">================</span></span></span></code></pre></div></div>
<p>前面的 12 代表 这行在最近被重复输出了 12 次，而且看下面，promise 的结果也还没得到，然后程序在输出 2 forEach 的时候停顿了 3 秒；总之，我们没有达到效果。 为什么呢？</p>
<h2 id="掩饰">掩饰</h2>
<p>查看 MDN 官网中关于 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" target="_blank" rel="noopener noreffer ">Array.prototype.forEach()</a> 的解释，可以看到有一行说明</p>
<blockquote>
<p>Note: There is no way to stop or break a forEach() loop other than by throwing an exception. If you need such behavior, the forEach() method is the wrong tool.</p>
</blockquote>
<blockquote>
<p>Early termination may be accomplished with:</p>
</blockquote>
<blockquote>
<p>A simple for loop
A for&hellip;of / for&hellip;in loops
Array.prototype.every()
Array.prototype.some()
Array.prototype.find()
Array.prototype.findIndex()
Array methods: every(), some(), find(), and findIndex() test the array elements with a predicate returning a truthy value &gt;  to determine if further iteration is required.</p>
</blockquote>
<p>简单翻译一下，如果要让 forEach 停下，那么只有抛异常这一种方案；但是如果你想在循环中退出那么就需要考虑其他方案了。</p>
<p>但是在我们的案例中，我们需要让循环中的所有结果都正常运行，所以，我们得使用官方建议的方案。【试了一下， every 也是一样的效果，难道是我对文档理解有误？】</p>
<h2 id="新方案">新方案</h2>
<p>当遇到问题时，往往用原始的方法就可以解决问题。so 使用最原始的 for 循环来解决问题。</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-js">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// testFor.js
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">sleep</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">resolve</span><span class="p">,</span> <span class="mi">3000</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">getDifferent</span> <span class="o">=</span> <span class="p">(</span><span class="nx">startDate</span><span class="p">,</span> <span class="nx">endDate</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">endDate</span> <span class="o">-</span> <span class="nx">startDate</span><span class="p">)</span> <span class="o">/</span> <span class="mi">1000</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">startDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="kd">let</span> <span class="nx">list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">566</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">78</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">89</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">async</span> <span class="kd">function</span> <span class="nx">testFor</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">promiseList</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">list</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;================1for length================&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kr">await</span> <span class="nx">sleep</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="nx">promiseList</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kr">await</span> <span class="nx">list</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;================2for length================&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="kr">await</span> <span class="nb">Promise</span><span class="p">.</span><span class="nx">all</span><span class="p">([...</span><span class="nx">promiseList</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">endDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">getDifferent</span><span class="p">(</span><span class="nx">startDate</span><span class="p">,</span> <span class="nx">endDate</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">result</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">testFor</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="nx">value</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span></span></span></code></pre></div></div>
<p>代码很简单，没有什么可以解释的。在你的浏览器控制台中运行应该可以得到如下结果，在控制台输出的时候是每隔 3 秒输出 2for length 和 1for length 的，直到最后循环完成输出结果。</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-js">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="nb">Promise</span> <span class="p">{</span><span class="o">&lt;</span><span class="nx">pending</span><span class="o">&gt;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">1</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="o">================</span><span class="mi">2</span><span class="k">for</span> <span class="nx">length</span><span class="o">================</span>
</span></span><span class="line"><span class="cl"><span class="mi">36</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="mi">12</span><span class="p">)</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">1132</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">156</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">178</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span></span></span></code></pre></div></div>
<h2 id="总结">总结</h2>
<ul>
<li><strong>如果遇到问题用新特性解决不了，就需要考虑使用最原始的方法了</strong></li>
<li><strong>零信任</strong> 要有质疑精神，只要不是自己写的，就有可能有 bug， 不然那么多漏洞是怎么发现的</li>
<li>Keep simple, Keep run</li>
</ul>
<h2 id="引用">引用</h2>
<ul>
<li>
<p><a href="https://guzhongren.github.io/" target="_blank" rel="noopener noreffer ">博客：https://guzhongren.github.io/</a></p>
</li>
<li>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" target="_blank" rel="noopener noreffer ">Array.prototype.forEach()</a></p>
</li>
</ul>
<h2 id="免责声明">免责声明</h2>
<p>本文仅代表个人观点，与本人所供职的公司无任何关系。</p>
<hr>
<p><img
        class="lazyload"
        src="/svg/loading.min.svg"
        data-src="https://cdn.jsdelivr.net/gh/guzhongren/data-hosting@master/20210819/wechat.ae9zxgscqcg.png"
        data-srcset="https://cdn.jsdelivr.net/gh/guzhongren/data-hosting@master/20210819/wechat.ae9zxgscqcg.png, https://cdn.jsdelivr.net/gh/guzhongren/data-hosting@master/20210819/wechat.ae9zxgscqcg.png 1.5x, https://cdn.jsdelivr.net/gh/guzhongren/data-hosting@master/20210819/wechat.ae9zxgscqcg.png 2x"
        data-sizes="auto"
        alt="https://cdn.jsdelivr.net/gh/guzhongren/data-hosting@master/20210819/wechat.ae9zxgscqcg.png"
        title="谷哥说-微信公众号" /></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: f2fe1394e4ab9297ed69ff73ac32e9ac1375f01c2102183b509bf9379a5995d6</p>
</blockquote>
<h2 id="赞助">赞助</h2>
<p><img
        class="lazyload"
        src="/svg/loading.min.svg"
        data-src="/images/pay/PayForGuzhongren.svg"
        data-srcset="/images/pay/PayForGuzhongren.svg, /images/pay/PayForGuzhongren.svg 1.5x, /images/pay/PayForGuzhongren.svg 2x"
        data-sizes="auto"
        alt="/images/pay/PayForGuzhongren.svg"
        title="PayForGuzhongren" /></p>
<blockquote>
<p><a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank" rel="noopener noreffer ">SHA256</a> checksum: 964978ecd2059064abe542e51dc02e204d3ee2e6c320ca68e2b1399ce0c6953c</p>
</blockquote>
<blockquote>
<p>使用此 <a href="https://guzhongren.github.io/images/pay/payforguzhongren.svg.sig" target="_blank" rel="noopener noreffer ">文件</a> 进行校验： <code>gpg --verify PayForGuzhongren.svg.sig</code></p>
</blockquote>
]]></description></item></channel></rss>