<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Summary - 分类 - 谷中仁的博客</title><link>https://guzhongren.github.io/categories/summary/</link><description>Summary - 分类 - 谷中仁的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>guzhongren@live.cn (谷中仁)</managingEditor><webMaster>guzhongren@live.cn (谷中仁)</webMaster><copyright>Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 23 Oct 2025 21:25:48 +0800</lastBuildDate><atom:link href="https://guzhongren.github.io/categories/summary/" rel="self" type="application/rss+xml"/><item><title>架构图中的东西南北流量</title><link>https://guzhongren.github.io/2025/10/%E6%9E%B6%E6%9E%84%E5%9B%BE%E4%B8%AD%E7%9A%84%E4%B8%9C%E8%A5%BF%E5%8D%97%E5%8C%97%E6%B5%81%E9%87%8F/</link><pubDate>Thu, 23 Oct 2025 21:25:48 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2025/10/%E6%9E%B6%E6%9E%84%E5%9B%BE%E4%B8%AD%E7%9A%84%E4%B8%9C%E8%A5%BF%E5%8D%97%E5%8C%97%E6%B5%81%E9%87%8F/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Arch/system-design/system-design-master-template.3ns0ueadqk.webp" referrerpolicy="no-referrer">
            </div><h2 id="可视化与标准化的重要性">可视化与标准化的重要性</h2>
<blockquote>
<p>从前车马邮件都慢，爱情像慢电影，而现在信息传播和协作节奏已大不相同——同样的，制图工具的变化也改变了我们展示系统的方式。</p></blockquote>
<p>过去教科书和工程图多为严格规范的手工绘制，风格统一、标注清晰。如今我们有了 Miro、Figma、Mural，以及开源的 Excalidraw、Tldraw，和国内的 ProcessOn 之类的在线画布工具（链接见上文）。这些工具降低了协作门槛，但“工具易得、图能否被人读懂”仍取决于制图者是否遵循标准与约定。</p>
<p>非标准化的架构图会带来沟通成本和风险：误用图标、调用关系画错、层次不清、责任边界模糊，都会导致实现偏差，严重时甚至造成生产事故。因此在画架构图时，明确参与者（谁发起、谁被调用、哪些是第三方）、数据和控制流向、以及图示约定，比花哨的样式更重要。</p>
<h2 id="东西流量eastwest与南北流量northsouth">东西流量（East–West）与南北流量（North–South）</h2>
<p>这两个术语源自网络/系统架构图的约定：图的顶部（North）通常表示外部世界或客户端，底部（South）通常表示核心或后端基础设施。垂直方向上的流动（外部⇄内部）称为“南北流量”；而同一层级、横向相邻服务之间的流量称为“东西流量”。</p>
<p>要点总结：</p>
<ul>
<li>东西流量：服务间的内部通信，关心的是低延迟、低抖动、稳定的内部带宽、服务发现与治理等；在高性能计算、分布式训练和数据库同步场景中尤其敏感。</li>
<li>南北流量：外部客户端与服务端之间的交互，侧重带宽、边界安全（防火墙、WAF）、鉴权、限流/熔断与可用性保障。</li>
</ul>
<h3 id="对比精简">对比（精简）</h3>
<table>
  <thead>
      <tr>
          <th style="text-align: right">特征</th>
          <th style="text-align: left">东西流量 (East–West)</th>
          <th style="text-align: left">南北流量 (North–South)</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: right">流向角色</td>
          <td style="text-align: left">服务 ↔ 服务（Server–Server）</td>
          <td style="text-align: left">客户端 ↔ 服务（Client–Server）</td>
      </tr>
      <tr>
          <td style="text-align: right">覆盖范围</td>
          <td style="text-align: left">数据中心 / 系统内部</td>
          <td style="text-align: left">外部与内部之间的进出边界</td>
      </tr>
      <tr>
          <td style="text-align: right">典型示例</td>
          <td style="text-align: left">微服务之间的 RPC/HTTP 调用、应用读写数据库、集群内同步</td>
          <td style="text-align: left">浏览器或 App 访问 API、外部用户下载/上传、CDN 边缘请求</td>
      </tr>
      <tr>
          <td style="text-align: right">关注点</td>
          <td style="text-align: left">延迟、抖动、内部带宽、服务治理</td>
          <td style="text-align: left">带宽、鉴权/安全、限流、对外 QoS</td>
      </tr>
      <tr>
          <td style="text-align: right">直观比喻</td>
          <td style="text-align: left">办公楼内的走廊与通道（内部协作）</td>
          <td style="text-align: left">办公楼的大门和主干道（对外出入口）</td>
      </tr>
  </tbody>
</table>
<p>把东西流量想成系统的“血液循环”，把南北流量想成系统的“呼吸/进出门”有助于把握两者在设计与运维上的侧重点。</p>
<h2 id="在架构图中如何使用这些概念">在架构图中如何使用这些概念</h2>
<ul>
<li>在画图时用一致的方向与层次来区分“边界”（north/south）和“内部”（east/west）。</li>
<li>对于高频、低延迟的东西流量，标注路径的延迟要求、带宽或协议（例如 gRPC、RDMA、内部消息队列）。</li>
<li>对于南北流量，强调边界安全、鉴权方式、流量入口（API 网关、负载均衡器、CDN）以及限流策略。</li>
<li>在图例（legend）里列出常用图标与约定，团队内建立制图规范并在 PR/评审时检查。</li>
</ul>
<h2 id="架构图示例说明">架构图示例（说明）</h2>
<h3 id="system-design-master-template">System Design Master template</h3>
<p><img src="https://github.com/guzhongren/picx-images-hosting/raw/master/Arch/system-design/system-design-master-template.3ns0ueadqk.webp" alt="System Design Master template" /></p>
<p>上图（System Design Master template）展示了典型的分层视图：顶部为客户端/外部接入，中间为应用与服务层，底部为数据与第三方系统。沿垂直方向我们能看到南北流量的入口与出口；在服务层内部，不同组件之间的交互即东西流量。</p>
<h3 id="techtribesjs">techtribes.js</h3>
<p><img src="https://github.com/guzhongren/picx-images-hosting/raw/master/Arch/system-design/system-design.7snm6i7jt9.svg" alt="techtribes.js" /></p>
<p>另一个示例（Techtribes.js 的容器级架构图）则强调容器/服务之间的依赖关系——这些更多属于东西流量范畴，而外部服务（如第三方 API）则属于南北方向的交互。</p>
<h2 id="小结">小结</h2>
<p>理解并在架构图中明确区分东西流量与南北流量，有助于：</p>
<ol>
<li>更清晰地表达责任边界与调用链路；</li>
<li>针对不同流量类型采取恰当的优化和保障措施（例如延迟优化 vs 安全/带宽防护）；</li>
<li>在团队内形成统一的制图规范，减少沟通误解。</li>
</ol>
<p>在下次绘制架构图时，把“流量方向”当成一条显性的维度：它会让设计更明晰，讨论更高效。</p>
]]></description></item><item><title>基于Strapi开发Headless CMS的基建入门</title><link>https://guzhongren.github.io/2025/05/%E5%9F%BA%E4%BA%8Estrapi%E5%BC%80%E5%8F%91headless-cms%E7%9A%84%E5%9F%BA%E5%BB%BA%E5%85%A5%E9%97%A8/</link><pubDate>Fri, 16 May 2025 10:15:31 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2025/05/%E5%9F%BA%E4%BA%8Estrapi%E5%BC%80%E5%8F%91headless-cms%E7%9A%84%E5%9F%BA%E5%BB%BA%E5%85%A5%E9%97%A8/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="简介">简介</h2>
<p>在现代电商和企业网站中，内容需要频繁变更。理想的系统应支持后台灵活编辑内容，前端自动渲染，无需频繁重构和部署。以电商为例，产品信息、价格、描述等常常调整，页面布局也需随时优化。对于缺乏开发经验的运营人员，易用的 CMS 能极大提升效率和响应速度。</p>
<h2 id="strapi简介">Strapi简介</h2>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Tips<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><a href="https://strapi.io/">Strapi</a><sup>[3]</sup>
 是一个 API 级低代码内容管理系统（Headless CMS）。</div>
        </div>
    </div>
<p>Strapi 是开源、灵活的 Headless CMS，支持多数据库和多前端框架。它提供内容建模、权限管理、插件扩展等能力，适合各种规模项目。前后端分离架构让前端可用 React/Vue/Angular 等技术开发，后端通过 Strapi API 提供数据，提升开发效率、降低维护成本。</p>
<p>主要特性包括：</p>
<ul>
<li><strong>开源</strong>，可自由使用和定制</li>
<li><strong>灵活内容建模</strong>，支持多数据类型和关系</li>
<li><strong>自动生成 RESTful/GraphQL API</strong></li>
<li><strong>插件机制</strong>，可扩展功能和集成第三方服务</li>
<li><strong>多数据库支持</strong>（MongoDB、PostgreSQL、MySQL 等）</li>
<li><strong>权限管理</strong>，细粒度控制访问</li>
<li><strong>多语言内容管理</strong></li>
<li><strong>活跃社区与丰富文档</strong></li>
</ul>
<h2 id="主要流程">主要流程</h2>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/How-to/Strapi/dev-with-strapi.2ks52vmd6j.webp" alt="dev-with-strapi" /></p>
<ol>
<li>设计内容模型（Content Types/Components）
<ul>
<li>使用内容类型构建器（Content-Type Builder）将页面的内容抽象出来，形成如 Design Token 级别的组件，和可复用的中度复杂的组件。</li>
</ul>
</li>
<li>创建网站结构及内容
<ul>
<li>构建网站结构，可通过组合之前创建的各种组件来形成结构。</li>
<li>创建网站的具体内容，如文章、产品、用户等，并使他们关联起来，比如博客需要有作者、分类、标签等。</li>
</ul>
</li>
<li>配置 API 权限与插件
<ul>
<li>配置 API 的权限，决定哪些用户可以访问、修改、删除内容，一般情况会将所有的内容以只读的方式暴露给前端。</li>
</ul>
</li>
<li>通过 API 管理和获取内容
<ul>
<li>前端通过 Strapi 提供的 RESTful， StrapiClient 或 GraphQL API 获取内容。</li>
</ul>
</li>
<li>前端动态渲染内容
<ul>
<li>前端根据内容类型和结构动态渲染页面。</li>
</ul>
</li>
</ol>
<h2 id="主要概念">主要概念</h2>
<h3 id="content-types-builder">Content Types Builder</h3>
<p>内容类型构建器是 Strapi 的核心，可视化创建和管理内容类型。支持灵活定义字段、数据类型、验证规则，便于内容建模和结构调整。</p>
<h3 id="components">Components</h3>
<p>组件实现内容结构复用。可将常用结构（如作者信息、SEO 配置等）封装为组件，在多个内容类型中引用，支持嵌套组合，提升建模灵活性。</p>
<h3 id="single-types">Single Types</h3>
<p>单一类型（Single Type）适合全站唯一内容，如“关于我们”、“站点设置”等。每种单一类型仅有一个条目，结构可自定义，便于集中管理全局内容。</p>
<h3 id="collections">Collections</h3>
<p>集合类型（Collection Type）用于管理多条同类内容，如文章、产品、用户等。每个集合类型可包含多个字段和组件，是内容批量管理和 API 构建的基础。</p>
<h3 id="dynamic-zones">Dynamic Zones</h3>
<p>动态区域（Dynamic Zone）允许在单字段中组合多种组件，实现内容结构高度自定义。适用于富文本、页面构建器等场景，支持多类型组件共存和嵌套。</p>
<h3 id="api">API</h3>
<p>Strapi 自动为每个内容类型生成 RESTful 或 GraphQL API，支持内容的增删改查，便于前后端分离和多端接入。</p>
<h3 id="plugins">Plugins</h3>
<p>插件用于扩展 Strapi 功能，如权限管理、内容版本控制、第三方集成等。官方和社区插件丰富，也支持自定义开发。</p>
<h2 id="进阶">进阶</h2>
<p>使用Strapi API 时有时需要对请求参数进行预处理，比如验证、转换等。可以通过中间件（Middleware）来实现。</p>
<h3 id="将请求参数置于-strapi-middleware-中">将请求参数置于 <a href="https://docs.strapi.io/cms/backend-customization/middlewares">Strapi Middleware</a><sup>[1]</sup>
 中</h3>
<p>如果要获取一个 Global Page的内容，普通情况下，我们会把查询参数放在URL 的query中，比如：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code>http://localhost:1337/api/global?populate[header][populate][0]=navItems&amp;populate[footer][populate][0]=socialLinks.Link</code></pre></div>
<p>通常情况呢，这个 url 的请求参数一般不会改变，每次都要返回Global Page 的所有内容，那么我们就可以把这个请求参数放在中间件中，避免每次都要在 URL 中传递。我们在请求时直接使用url <code>http://localhost:1337/api/global</code> 即可，而不用带query参数。
这样做的好处是：</p>
<ol>
<li>代码可读性更高</li>
<li>减少了 URL 的复杂度</li>
<li>方便后期维护和修改</li>
</ol>
<p>可通过中间件（Middleware）统一处理请求参数。基本步骤：</p>
<ol>
<li>可使用 <a href="https://docs.strapi.io/cms/cli#strapi-generate">strapi generate:middleware</a><sup>[2]</sup>
 命令生成中间件
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">pnpm run strapi generate
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; my-strapi-project@0.1.0 strapi ~/01.Personal/tmp/my-strapi-project
</span></span><span class="line"><span class="cl">&gt; strapi <span class="s2">&#34;generate&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">? Strapi Generators middleware - Generate a middleware <span class="k">for</span> an API
</span></span><span class="line"><span class="cl">? Middleware name global-page-populate
</span></span><span class="line"><span class="cl">? Where <span class="k">do</span> you want to add this middleware? Add middleware to an existing API
</span></span><span class="line"><span class="cl">? Which API is this <span class="k">for</span>? global
</span></span><span class="line"><span class="cl">✔  ++ /api/global/middlewares/global-page-populate.ts</span></span></code></pre></div></div>
</li>
<li>定义中间件函数并处理 <code>ctx.query</code>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-ts">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"> <span class="kr">import</span> <span class="kr">type</span> <span class="p">{</span> <span class="nx">Core</span> <span class="p">}</span> <span class="kr">from</span> <span class="s1">&#39;@strapi/strapi&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> <span class="kr">const</span> <span class="nx">populate</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="nx">header</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nx">populate</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;navItems&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="p">},</span>
</span></span><span class="line"><span class="cl">   <span class="nx">banner</span>: <span class="kt">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nx">footer</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nx">populate</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;logo&#34;</span><span class="p">,</span> <span class="s2">&#34;navItems&#34;</span><span class="p">,</span> <span class="s2">&#34;socialLinks&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl"> <span class="p">}</span>
</span></span><span class="line"><span class="cl"> <span class="c1">// 获取 dynamic zone 的内容
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">// const populate = {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//   blocks: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//     on: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//       &#34;blocks.hero&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//         populate: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//           links: true,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//           image: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//             fields: [&#34;url&#34;, &#34;name&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//           }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//         },
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//       },
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//       &#34;blocks.heading-section&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//         populate: &#39;*&#39;,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//       }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//     }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">//   }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">// }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"> <span class="kr">export</span> <span class="k">default</span> <span class="p">(</span><span class="nx">config</span><span class="p">,</span> <span class="p">{</span> <span class="nx">strapi</span> <span class="p">}</span><span class="o">:</span> <span class="p">{</span> <span class="nx">strapi</span>: <span class="kt">Core.Strapi</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="k">return</span> <span class="kr">async</span> <span class="p">(</span><span class="nx">ctx</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nx">ctx</span><span class="p">.</span><span class="nx">query</span><span class="p">.</span><span class="nx">populate</span> <span class="o">=</span> <span class="nx">populate</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">     <span class="nx">strapi</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">&#39;In global-page-populate middleware.&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">     <span class="k">await</span> <span class="nx">next</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">   <span class="p">};</span>
</span></span><span class="line"><span class="cl"> <span class="p">};</span></span></span></code></pre></div></div>
</li>
<li>在 <code>src/api/global/routes/global.ts</code> 注册中间件
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-ts">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl">  <span class="kr">import</span> <span class="p">{</span> <span class="nx">factories</span> <span class="p">}</span> <span class="kr">from</span> <span class="s1">&#39;@strapi/strapi&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">export</span> <span class="k">default</span> <span class="nx">factories</span><span class="p">.</span><span class="nx">createCoreRouter</span><span class="p">(</span><span class="s1">&#39;api::global.global&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">config</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">find</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">middlewares</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;api::global.global-page-populate&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span></span></span></code></pre></div></div>
</li>
<li>使用API 请求测试等工具测试
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sh">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">curl <span class="s1">&#39;http://localhost:1337/api/global&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 应该返回Global Page 的所有内容</span></span></span></code></pre></div></div>
</li>
</ol>
<h3 id="前端动态渲染-dynamic-zone-组件">前端动态渲染 Dynamic Zone 组件</h3>
<p>前端可根据后端返回的 Dynamic Zone 数据动态渲染组件，为代码如下：</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-tsx">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-tsx" data-lang="tsx"><span class="line"><span class="cl"><span class="p">...</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">componentMap</span>: <span class="kt">Record</span><span class="p">&lt;</span><span class="nt">ComponentType</span><span class="p">,</span> <span class="na">any</span><span class="p">&gt;</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.hero&#34;</span><span class="o">:</span> <span class="nx">Hero</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.heading-section&#34;</span><span class="o">:</span> <span class="nx">HeadingSection</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.card-grid&#34;</span><span class="o">:</span> <span class="nx">CardGrid</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.content-with-image&#34;</span><span class="o">:</span> <span class="nx">ContentWithImage</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.faqs&#34;</span><span class="o">:</span> <span class="nx">Faqs</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.person-card&#34;</span><span class="o">:</span> <span class="nx">PersonCard</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.markdown&#34;</span><span class="o">:</span> <span class="nx">Markdown</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.featured-articles&#34;</span><span class="o">:</span> <span class="nx">FeaturedArticles</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;blocks.newsletter&#34;</span><span class="o">:</span> <span class="nx">Newsletter</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="p">...</span>
</span></span><span class="line"><span class="cl"> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">blocksFromAPI</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">block</span>: <span class="kt">BlockData</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">Component</span> <span class="o">=</span> <span class="nx">componentMap</span><span class="p">[</span><span class="nx">block</span><span class="p">.</span><span class="nx">__component</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="nx">Component</span> <span class="o">?</span> <span class="p">&lt;</span><span class="nt">Component</span> <span class="na">data</span><span class="o">=</span><span class="p">{</span><span class="nx">block</span><span class="p">}</span> <span class="p">/&gt;</span> <span class="o">:</span> <span class="kc">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span></span></span></code></pre></div></div>
<h2 id="总结">总结</h2>
<p>Strapi 是一个强大的 Headless CMS，适合快速构建和管理内容驱动的应用。通过灵活的内容建模、API 生成和插件扩展，Strapi 能满足各种项目需求。本文介绍了 Strapi 的基本概念、主要流程和进阶用法，希望能帮助你快速上手。</p>
<div class="references">
                <h2>参考</h2>
                <ol><li>Strapi Middleware: <a href="https://docs.strapi.io/cms/backend-customization/middlewares" rel="noopener noreferrer">https://docs.strapi.io/cms/backend-customization/middlewares</a></li><li>strapi generate:middleware: <a href="https://docs.strapi.io/cms/cli#strapi-generate" rel="noopener noreferrer">https://docs.strapi.io/cms/cli#strapi-generate</a></li><li>Strapi: <a href="https://strapi.io/" rel="noopener noreferrer">https://strapi.io/</a></li></ol>
            </div>]]></description></item><item><title>软件开发中的跨功能性需求（RFC）</title><link>https://guzhongren.github.io/2025/04/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E8%B7%A8%E5%8A%9F%E8%83%BD%E6%80%A7%E9%9C%80%E6%B1%82rfc/</link><pubDate>Mon, 28 Apr 2025 08:40:12 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2025/04/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E8%B7%A8%E5%8A%9F%E8%83%BD%E6%80%A7%E9%9C%80%E6%B1%82rfc/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="引言">引言</h2>
<p>作为程序员的你，正在开发一款基于全球地图的某资源分布网站，你的产品会被各个国家的人使用，而每个国家都有不同的法律法规和文化习惯。你需要考虑到这些因素，以确保你的产品在全球范围内都能正常使用。比如有争议的边界不能让用户看到对自己国家不利的标记，那么你需要怎么做呢？这时候，你就需要考虑跨功能性需求了。</p>
<h3 id="什么是跨功能性需求">什么是跨功能性需求</h3>
<p>跨功能性需求（Cross-Functional Requirements, CFRs）是指那些不直接与特定功能相关，但对整个系统的质量、性能和用户体验有重要影响的需求。例如，性能、安全性和可扩展性等。这些需求通常被称为“非功能性需求”，但它们对系统的成功至关重要。</p>
<h3 id="其在软件开发中的重要性">其在软件开发中的重要性</h3>
<p>跨功能性需求贯穿于软件开发的各个阶段，直接影响系统的稳定性、用户满意度和长期维护成本。例如，在一个实时通信应用中，低延迟（性能需求）和数据加密（安全性需求）是用户体验的核心。如果忽视这些需求，可能导致系统在高负载或恶意攻击下崩溃，甚至无法满足用户的基本期望。</p>
<h2 id="跨功能性需求详细讨论">跨功能性需求详细讨论</h2>
<table>
  <thead>
      <tr>
          <th>需求类别</th>
          <th>具体问题</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>可扩展性（Extensibility）</strong></td>
          <td>是否需要组件化？是否需要提供一个插件功能，由谁来实施？</td>
      </tr>
      <tr>
          <td><strong>可移植性（Portability）</strong></td>
          <td>是否有迁移到另一个数据库产品或操作系统的必要性？</td>
      </tr>
      <tr>
          <td><strong>可安装性和可部署性（Installability &amp; Deployment）</strong></td>
          <td>需要提供什么样的基础设施？需要什么样的安装便利性？是否支持持续交付？如何回滚或升级版本？</td>
      </tr>
      <tr>
          <td><strong>兼容性（Compatibility）</strong></td>
          <td>需要与哪些其他系统集成？需要遵循哪些行业标准？是否需要考虑现有数据格式？</td>
      </tr>
      <tr>
          <td><strong>可集成性和互操作性（Integratability &amp; Interoperability）</strong></td>
          <td>是否需要提供 API 或库供其他系统使用？版本管理和升级策略是什么？</td>
      </tr>
      <tr>
          <td><strong>可复用性（Leveragability &amp; Reuse）</strong></td>
          <td>是否能够复用企业现有组件/库，或者当前组件/库是否将被重用？</td>
      </tr>
      <tr>
          <td><strong>可伸缩性（Scalability）</strong></td>
          <td>如何根据不断变化的用户量来提高吞吐量？如何对此进行测试？</td>
      </tr>
      <tr>
          <td><strong>版本化和升级策略（Versioning and upgrades）</strong></td>
          <td>版本化策略是什么？如何跟踪内部/外部的版本？有没有向后兼容的限制？</td>
      </tr>
      <tr>
          <td><strong>可访问性（Accessibility）</strong></td>
          <td>是否支持有特殊需要的用户（如读屏）？</td>
      </tr>
      <tr>
          <td><strong>本地化和国际化（Localisation &amp; Internationalisation）</strong></td>
          <td>是否支持多语言？日期/时间/货币的转换和翻译？</td>
      </tr>
      <tr>
          <td><strong>可用性和用户体验（Usability and user experience）</strong></td>
          <td>用户体验对系统有多重要？是否有公司用户体验准则？是否支持多设备？</td>
      </tr>
      <tr>
          <td><strong>分布性（Distributability）</strong></td>
          <td>系统是否能在特定区域使用？是否支持离线运行？如何同步信息？</td>
      </tr>
      <tr>
          <td><strong>帮助与支持（Help &amp; Support）</strong></td>
          <td>是否需要用户文档、教程或支持团队？是否需要计划培训？</td>
      </tr>
      <tr>
          <td><strong>可配置性（Configurability）</strong></td>
          <td>用户或管理员是否可以配置功能？如何进行配置管理？</td>
      </tr>
      <tr>
          <td><strong>支持性（Supportability）</strong></td>
          <td>用户/操作支持的级别是什么？如何提供支持？</td>
      </tr>
      <tr>
          <td><strong>归档（Archiving）</strong></td>
          <td>归档什么信息？何时归档？如何归档？谁可以访问归档信息？</td>
      </tr>
      <tr>
          <td><strong>可用性（Availability）</strong></td>
          <td>是否有可用性目标？需要什么架构来满足这些要求？是否有高峰负载需求？</td>
      </tr>
      <tr>
          <td><strong>容量（Capacity）</strong></td>
          <td>是否有存储要求？高峰负载如何处理？系统需要处理的数据量和用户数量？</td>
      </tr>
      <tr>
          <td><strong>连续性（Continuity）</strong></td>
          <td>是否有灾难恢复计划？</td>
      </tr>
      <tr>
          <td><strong>数据完整性和一致性（Data Integrity and Consistency）</strong></td>
          <td>是否需要数据校验、日志追踪或数据恢复机制？</td>
      </tr>
      <tr>
          <td><strong>可维护性（Maintainability）</strong></td>
          <td>最大可容忍停机时间是什么？是否有停机通知要求？错误页面如何处理？</td>
      </tr>
      <tr>
          <td><strong>监控（Monitoring）</strong></td>
          <td>应该衡量哪些业务/技术指标？如何监测？需要哪些警报？</td>
      </tr>
      <tr>
          <td><strong>多环境支持（Multiple Environment Support）</strong></td>
          <td>需要多少环境？如何配置和管理这些环境？</td>
      </tr>
      <tr>
          <td><strong>性能（Performance）</strong></td>
          <td>吞吐量/响应时间要求是什么？是否需要性能测试？是否需要考虑异步场景？</td>
      </tr>
      <tr>
          <td><strong>弹性和容错性（Resilience &amp; Fault Tolerance）</strong></td>
          <td>如果外部依赖失效，系统如何降级？</td>
      </tr>
      <tr>
          <td><strong>可靠性（Reliability）</strong></td>
          <td>不可靠的成本是什么？需要多少成本来保证可靠？</td>
      </tr>
      <tr>
          <td><strong>可审计性（Auditability）</strong></td>
          <td>哪些操作需要被跟踪？是否有法律或监管要求？</td>
      </tr>
      <tr>
          <td><strong>认证（Authentication）</strong></td>
          <td>如何鉴别用户身份？是否遵循标准或使用现有认证系统？</td>
      </tr>
      <tr>
          <td><strong>授权（Authorisation）</strong></td>
          <td>哪些角色和权限是必要的？如何维护和应用权限？</td>
      </tr>
      <tr>
          <td><strong>法律合规性（Legal Compliance）</strong></td>
          <td>是否有数据/系统或软件交付过程的法律限制？</td>
      </tr>
      <tr>
          <td><strong>数据隐私（Data Privacy）</strong></td>
          <td>哪些数据需要加密？哪些数据对用户和操作人员可见/隐藏？如何处理脱敏？</td>
      </tr>
      <tr>
          <td><strong>安全性（Security）</strong></td>
          <td>是否需要安全审计或渗透测试？企业的安全准则是什么？是否有 SSL 或 VPN 要求？</td>
      </tr>
  </tbody>
</table>
<h2 id="跨功能性需求的挑战">跨功能性需求的挑战</h2>
<h3 id="难以量化和验证">难以量化和验证</h3>
<p>跨功能性需求的定义通常较为模糊。例如：</p>
<ul>
<li>性能需求可能以“系统应快速响应”描述，但“快速”缺乏具体标准。</li>
<li>安全性需求可能以“系统应安全”描述，但安全的程度难以量化。</li>
</ul>
<h4 id="解决方法">解决方法</h4>
<ul>
<li>使用具体的指标定义需求，例如“响应时间小于 200 毫秒”。</li>
<li>借助工具（如 JMeter）进行性能测试，或使用安全扫描工具（如 OWASP ZAP）验证安全性。</li>
</ul>
<h3 id="与功能性需求的冲突">与功能性需求的冲突</h3>
<p>跨功能性需求可能与功能性需求发生冲突。例如：</p>
<ul>
<li>为了提高性能，可能需要简化某些功能。</li>
<li>为了增强安全性，可能会增加用户操作的复杂性。</li>
</ul>
<h4 id="实例权衡性能与安全性">实例：权衡性能与安全性</h4>
<p>某在线支付系统在设计时，为了提高性能，采用了分布式架构；但为了保证安全性，又引入了多层加密和双因子认证。</p>
<h2 id="如何发现跨功能性需求">如何发现跨功能性需求</h2>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Software-Engineering/CFR/crf.1e8tg7u4l3.webp" alt="CFR" /></p>
<p>跨功能需求影响着软件的整个生命周期，在项目交付过程中，可以根据软件产品的目标和特点，从以下几个视角来收集和确定跨功能需求：</p>
<ul>
<li><strong>研发团队视角</strong>，关注软件研发过程中的跨功能特性，包括软件架构设计相关的一些特性，如可扩展性、可移植性、可伸缩性、兼容性等。</li>
<li><strong>用户视角</strong>，关注软件使用过程中的跨功能特性，关注用户体验，如设备兼容性、可访问性、可配置性等。</li>
<li><strong>运维团队视角</strong>，关注软件维护过程中的跨功能特性，包括基础设施运营维护、数据维护、故障恢复相关的一些特性，如性能、可用性、容量、监控、熔断降级策略等。</li>
<li><strong>安全审计团队视角</strong>，关注软件全生命周期的安全相关的跨功能特性，大部分企业有专门的安全审计部门，会对软件产品的安全提出很多需求，如可审计性，法律合规性，数据隐私性。</li>
</ul>
<h2 id="解决方案与实践">解决方案与实践</h2>
<h3 id="需求优先级的设定">需求优先级的设定</h3>
<p>通过与利益相关者协商，明确跨功能性需求的优先级。例如：</p>
<ul>
<li>使用 MoSCoW 方法（Must, Should, Could, Won&rsquo;t）分类需求。</li>
<li>在项目初期定义关键性能指标（KPIs）和安全目标。</li>
</ul>
<h4 id="实例敏捷开发中的需求优先级">实例：敏捷开发中的需求优先级</h4>
<p>某团队在敏捷开发中，每个迭代周期都会评估跨功能性需求的优先级，并在冲刺计划中分配资源。</p>
<h3 id="跨团队协作的重要性">跨团队协作的重要性</h3>
<p>跨功能性需求通常涉及多个团队的协作。例如：</p>
<ul>
<li>开发团队需要与运维团队合作，确保系统的可扩展性。</li>
<li>安全团队需要与开发团队合作，进行代码审查和漏洞修复。</li>
</ul>
<h4 id="实例devsecops-实践">实例：DevSecOps 实践</h4>
<p>某企业通过 DevSecOps 实践，将安全性集成到开发和运维流程中，确保跨功能性需求在整个生命周期内得到满足。</p>
<h2 id="案例分析">案例分析</h2>
<h3 id="实际项目中的跨功能性需求处理">实际项目中的跨功能性需求处理</h3>
<p>在某大型电商平台的开发中，性能和安全性是两个关键的跨功能性需求。通过以下措施，成功满足了这些需求：</p>
<ol>
<li>
<p><strong>性能优化</strong>：</p>
<ul>
<li>使用 Redis 缓存机制减少数据库查询。</li>
<li>部署 Nginx 负载均衡器分发流量。</li>
</ul>
</li>
<li>
<p><strong>安全性增强</strong>：</p>
<ul>
<li>引入 Web 应用防火墙（WAF）防止常见攻击（如 SQL 注入）。</li>
<li>定期进行渗透测试，发现并修复漏洞。</li>
</ul>
</li>
</ol>
<blockquote>
<p>来源：<a href="https://redis.io/documentation">Redis 官方文档</a><sup>[1]</sup>

来源：<a href="https://nginx.org/en/docs/">Nginx 官方文档</a><sup>[2]</sup>
</p></blockquote>
<h3 id="性能">性能</h3>
<p>性能需求通常包括以下几个方面：</p>
<ol>
<li><strong>响应时间</strong>：用户操作后系统的响应速度。例如，搜索引擎的响应时间通常需要在几百毫秒内完成。</li>
<li><strong>吞吐量</strong>：系统在单位时间内能够处理的请求数量。例如，支付网关需要支持每秒数千笔交易。</li>
<li><strong>资源利用率</strong>：系统在运行时对 CPU、内存和网络等资源的使用效率。</li>
</ol>
<h4 id="实例高性能电商平台">实例：高性能电商平台</h4>
<p>某电商平台在促销活动期间，通过以下措施优化性能：</p>
<ul>
<li>使用 Redis 缓存热门商品数据，减少数据库查询压力。</li>
<li>部署 CDN（内容分发网络）加速静态资源加载。</li>
</ul>
<blockquote>
<p>来源：<a href="https://redis.io/documentation">Redis 官方文档</a><sup>[1]</sup>
</p></blockquote>
<h3 id="可扩展性">可扩展性</h3>
<p>可扩展性需求确保系统能够随着用户数量或数据量的增长而扩展。主要包括：</p>
<ol>
<li><strong>水平扩展</strong>：通过增加更多服务器来提升系统能力。</li>
<li><strong>垂直扩展</strong>：通过升级硬件资源（如 CPU 和内存）来提升性能。</li>
</ol>
<h4 id="实例分布式数据库">实例：分布式数据库</h4>
<p>某社交媒体平台采用分布式数据库（如 MongoDB）来存储用户数据，支持动态扩展以应对用户增长。</p>
<blockquote>
<p>来源：<a href="https://www.mongodb.com/docs/">MongoDB 官方文档</a><sup>[3]</sup>
</p></blockquote>
<h3 id="安全性">安全性</h3>
<p>安全性需求包括以下几个方面：</p>
<ol>
<li><strong>数据加密</strong>：保护敏感数据在传输和存储中的安全性。</li>
<li><strong>身份验证</strong>：确保只有授权用户能够访问系统。</li>
<li><strong>权限管理</strong>：限制用户对系统资源的访问范围。</li>
</ol>
<h4 id="实例oauth-20">实例：OAuth 2.0</h4>
<p>某金融应用通过 OAuth 2.0 实现第三方登录，同时保护用户的敏感信息。</p>
<blockquote>
<p>来源：<a href="https://oauth.net/2/">OAuth 2.0 规范</a><sup>[4]</sup>
</p></blockquote>
<h2 id="总结">总结</h2>
<p>回到开头的问题，如何处理全球地图资源分布网站的跨功能性需求？可以通过以下步骤：</p>
<ol>
<li><strong>需求收集</strong>：与各国法律法规专家沟通，了解不同国家的要求，比如使用不同国家官方支持的地图地址。</li>
<li><strong>需求优先级</strong>：使用 MoSCoW 方法确定哪些需求是必须的，哪些是可选的， 这里就是国界。</li>
<li><strong>跨团队协作</strong>：与开发、运维和安全团队密切合作，确保需求在设计和实现中得到满足, 最好实现配置即代码。</li>
<li><strong>测试与验证</strong>：在不同国家的环境中进行测试，确保系统符合各国的法律法规。</li>
</ol>
<p>当然还有一种最简单的方法，只提供卫星影像地图，不提供边界图层。</p>
<h3 id="关键点回顾与未来展望">关键点回顾与未来展望</h3>
<p>跨功能性需求是软件开发中不可忽视的一部分。通过合理的需求优先级设定和跨团队协作，可以有效应对这些挑战。未来，随着技术的进步，跨功能性需求的管理将更加智能化和自动化。</p>
<div class="references">
                <h2>参考</h2>
                <ol><li>Redis 官方文档: <a href="https://redis.io/documentation" rel="noopener noreferrer">https://redis.io/documentation</a></li><li>Nginx 官方文档: <a href="https://nginx.org/en/docs/" rel="noopener noreferrer">https://nginx.org/en/docs/</a></li><li>MongoDB 官方文档: <a href="https://www.mongodb.com/docs/" rel="noopener noreferrer">https://www.mongodb.com/docs/</a></li><li>OAuth 2.0 规范: <a href="https://oauth.net/2/" rel="noopener noreferrer">https://oauth.net/2/</a></li></ol>
            </div>]]></description></item><item><title>使用Google Sheet Apps Script提升工作效率</title><link>https://guzhongren.github.io/2023/09/%E4%BD%BF%E7%94%A8google-sheet-apps-script%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87/</link><pubDate>Wed, 13 Sep 2023 22:44:56 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2023/09/%E4%BD%BF%E7%94%A8google-sheet-apps-script%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><p>一切总是在往熵增大的方向发展。</p>
<h2 id="遇到的问题">遇到的问题</h2>
<p>团队周内每天需要都有个Code Diff 的会议来进行代码review, 但是不是每个人都有代码要被Review, 如果有个工具每天在Code Diff 前进行统计，大家有需要代码Review 的就在消息下面标记一下，或者回复一哈；如果大家有标记，那么再进行代码Review，是不是就可以省下一部分时间了？</p>
<p>团队内每周站会的主持人要轮流，要是大家轮流记，估计很快就乱了，如果有个工具，每周一早上在群里自动更新一哈是不是就更好了？对于Oncall 等活动也是一样，是不是就完美了？</p>
<p>这么多问题怎么解决呢？</p>
<p>肯定就是各种机器人啦。我们团队用的都是Google 的那套办公软件，而Google Sheet 是我们经常用来流程化记录内容的工具；同时Google Chat 是我们团队的沟通协作工具。</p>
<p>而Google 全家桶的好处就是其各个应用之间调用协作非常方便。那么我们就用Google Sheet 和Google Chat 来实现一个简单的机器人应用来干上面各种麻烦的事吧。</p>
<h2 id="google-chat-webhooks">Google Chat Webhooks</h2>
<p>Google Chat 的Webhooks 允许其他应用程序调用，并可以对消息进行<code>创建</code>、<code>读取</code> 、<code>更新</code> 和<code>删除</code>。如同对数据库的增删改差一般。</p>
<p><img src="https://developers.google.com/static/chat/images/arch-pat-notifier.svg" alt="Google Chat Webhooks" /></p>
<p>关于如何创建Google Chat webhooks 可以参考<a href="https://ploi.io/documentation/notifications/how-do-i-create-a-google-chat-webhook">这里</a><sup>[1]</sup>
; 如果不想看这个链接，可以往下，在实践部分会有操作。</p>
<h2 id="google-sheet-apps-script">Google Sheet Apps Script</h2>
<p>Google Sheet 之于 Google Suite,就像 Excel 之于 Miscrosoft Office。Google Sheet 最强大的地方在于他支持自定义脚本，虽然其名为<code>Apps Script</code>, 文件格式为<code>.gs</code>， 但是其就是一些简单的<code>JavaScript</code> API, 其请求也是同步的API, 而且没有跨域问题，这就让其作为一个机器人有了初步条件。</p>
<p>当然 Google Sheet Apps Script 最基本的对 Sheet 的读写删都是非常容易的，但在这里需要明白其 API 结构。</p>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Tools/GoogleSheet/AppsScript.7401tjjcz9g0.webp" alt="Google Sheet API Structure" /></p>
<p>从上图中可以看到</p>
<table>
  <thead>
      <tr>
          <th style="text-align: left">序号</th>
          <th style="text-align: left">说明</th>
          <th style="text-align: left">Note</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">1</td>
          <td style="text-align: left">SpreadsheetApp</td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: left">2</td>
          <td style="text-align: left">ActiveSheet</td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: left">3</td>
          <td style="text-align: left">DataRange</td>
          <td></td>
      </tr>
      <tr>
          <td style="text-align: left">4</td>
          <td style="text-align: left">Value</td>
          <td></td>
      </tr>
  </tbody>
</table>
<h2 id="实践">实践</h2>
<p>如下，我们实现一个每周一提醒团队谁是本周的站会主持人的机器人。</p>
<h3 id="创建google-chat-webhooks">创建Google Chat Webhooks</h3>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Tools/GoogleSheet/chat-webhooks.1mqmo1im34g0.webp" alt="Google chat webhooks" /></p>
<p>点击创建好的Webhooks, 拷贝URL即可。</p>
<h3 id="创建google-sheet-轮转数据">创建Google Sheet 轮转数据</h3>
<p>新建Google Sheet，直接写入如下数据</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><pre tabindex="0"><code>xiaoming1
xiaoming2
xiaoming3
xiaoming4
xiaoming5
xiaoming6	current
xiaoming7
xiaoming8
xiaoming9
xiaoming10</code></pre></div>
<h3 id="创建google-sheet-处理脚本">创建Google Sheet 处理脚本</h3>
<p>接下来在Google Sheet 中创建Apps Script; 位置：Menu-&gt;Extention-&gt; Apps Script;</p>
<p>在编辑器里可以编写处理Google Sheet 的代码，比如有个sheet.gs 里面处理Sheet 相关的操作，如下</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-js">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">CURRENT</span> <span class="o">=</span> <span class="s1">&#39;current&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">getTheNextStandupPerson</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">activeSheet</span> <span class="o">=</span> <span class="nx">SpreadsheetApp</span><span class="p">.</span><span class="nx">getActiveSheet</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">dataRange</span> <span class="o">=</span> <span class="nx">activeSheet</span><span class="p">.</span><span class="nx">getDataRange</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">standupList</span> <span class="o">=</span> <span class="nx">dataRange</span><span class="p">.</span><span class="nx">getValues</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">currentStandupPersonIndex</span> <span class="o">=</span> <span class="nx">standupList</span><span class="p">.</span><span class="nx">findIndex</span><span class="p">(</span><span class="nx">person</span> <span class="p">=&gt;</span> <span class="nx">person</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">===</span> <span class="nx">CURRENT</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">tempStandupPersonIndex</span> <span class="o">=</span> <span class="nx">currentStandupPersonIndex</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">nextStandupPersonIndex</span> <span class="o">=</span>  <span class="nx">tempStandupPersonIndex</span> <span class="o">&gt;=</span> <span class="nx">standupList</span><span class="p">.</span><span class="nx">length</span> <span class="o">?</span> <span class="mi">0</span><span class="o">:</span> <span class="nx">tempStandupPersonIndex</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">nextStandupPerson</span> <span class="o">=</span> <span class="nx">standupList</span><span class="p">.</span><span class="nx">find</span><span class="p">((</span><span class="nx">_</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="nx">index</span> <span class="o">===</span> <span class="nx">nextStandupPersonIndex</span> <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">currentStandupPersonIndex</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">nextStandupPersonIndex</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">nextStandupPerson</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">updateRecord</span><span class="p">(</span><span class="nx">currentStandupPersonIndex</span><span class="p">,</span> <span class="nx">nextStandupPersonIndex</span><span class="p">,</span> <span class="nx">nextperson</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`Start to update the latest standup person to </span><span class="si">${</span><span class="nx">nextperson</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">currentRow</span> <span class="o">=</span> <span class="nx">currentStandupPersonIndex</span> <span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">  <span class="kd">let</span> <span class="nx">nextRow</span> <span class="o">=</span> <span class="nx">nextStandupPersonIndex</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">activeSheet</span> <span class="o">=</span> <span class="nx">SpreadsheetApp</span><span class="p">.</span><span class="nx">getActiveSheet</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nx">activeSheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">currentRow</span><span class="p">,</span> <span class="mi">2</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="nx">activeSheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">nextRow</span><span class="p">,</span> <span class="mi">2</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">CURRENT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`Successfully update the latest standup person to </span><span class="si">${</span><span class="nx">nextperson</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>
<p>main.gs 处理整个流程，并且在里面发送消息到刚才的Space中，</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-js">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">WEBHOOK_URL</span> <span class="o">=</span> <span class="s2">&#34;https://chat.googleapis.com/v1/spaces/AAAAPhOvPUg/messages?key=AIzaSxxxxxxxxxxxxxxxxxxxxxxxx&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// main function
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">sendMessageToChat</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isMonday</span><span class="p">())</span> <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="p">{</span><span class="nx">currentStandupPersonIndex</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">nextStandupPersonIndex</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">nextStandupPerson</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">getTheNextStandupPerson</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nx">updateRecord</span><span class="p">(</span><span class="nx">currentStandupPersonIndex</span><span class="p">,</span> <span class="nx">nextStandupPersonIndex</span><span class="p">,</span> <span class="nx">nextStandupPerson</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;method&#34;</span><span class="o">:</span> <span class="s2">&#34;post&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;headers&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;Content-Type&#34;</span><span class="o">:</span> <span class="s2">&#34;application/json; charset=UTF-8&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;payload&#34;</span><span class="o">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;text&#34;</span><span class="o">:</span> <span class="sb">`Hey &lt;users/all&gt;,This week&#39;s standup host is </span><span class="si">${</span><span class="nx">nextStandupPerson</span><span class="si">}</span><span class="sb"> </span><span class="si">${</span><span class="s1">&#39;\n&#39;</span><span class="p">.</span><span class="nx">repeat</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="si">}</span><span class="sb"> The sheet: https://docs.google.com/spreadsheets/d/123434234343/edit#gid=0`</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">};</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">response</span> <span class="o">=</span> <span class="nx">UrlFetchApp</span><span class="p">.</span><span class="nx">fetch</span><span class="p">(</span><span class="nx">WEBHOOK_URL</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">isMonday</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">date</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">day</span> <span class="o">=</span> <span class="nx">date</span><span class="p">.</span><span class="nx">getDay</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="o">!</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">].</span><span class="nx">includes</span><span class="p">(</span><span class="nx">day</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>
<h3 id="定时执行脚本处理">定时执行脚本处理</h3>
<p>有多种执行方式；</p>
<ol>
<li>直接在代码编辑器顶部运行main.gs 里的sendMessageToChat 方法即可。</li>
<li>定时运行,如下图, 以此，我们可以在特定的实践让其自动执行，实现自动化。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Tools/GoogleSheet/trigger-of-apps-script.5u953kav5cg0.webp" alt="Trigger of Apps Script" /></p>
<h3 id="效果">效果</h3>
<p>可以看到，之前的主持人是xiaoming6, 现在已经是xiaoming7了。
<img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Tools/GoogleSheet/chatbot-message.4w4b6vs80rk0.webp" alt="Chatbot message result" /></p>
<h2 id="总结">总结</h2>
<p>Google Sheet 毕竟是Google 出品，不管是UI 还是API 都很简洁，更是和其自家产品集成的非常紧密；我们在这里实现了Google Sheet 调用Google Chat 来定时给Google Chat 发送消息的功能。当然Google Sheet 还有很多非常优秀的功能，期待你的挖掘。</p>
<div class="references">
                <h2>参考</h2>
                <ol><li>这里: <a href="https://ploi.io/documentation/notifications/how-do-i-create-a-google-chat-webhook" rel="noopener noreferrer">https://ploi.io/documentation/notifications/how-do-i-create-a-google-chat-webhook</a></li></ol>
            </div>]]></description></item><item><title>端午Incident了</title><link>https://guzhongren.github.io/2023/06/%E7%AB%AF%E5%8D%88incident%E4%BA%86/</link><pubDate>Fri, 30 Jun 2023 23:23:05 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2023/06/%E7%AB%AF%E5%8D%88incident%E4%BA%86/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="前言">前言</h2>
<p>现在，我们作为Ops 维护这一个新加坡的项目，项目还是比较复杂的。端午前一天00：00 上线了很多hotfix, 而这里面就隐藏了2个bug。</p>
<h2 id="回顾">回顾</h2>
<p>技术层面，有两个bug，一个Job运行时，数据库CPU 拉满，一个少了Redis 初始化，导致从Event Hub 发送过来的数据无法处理。</p>
<p>业务层面, 数据库CPU 拉满，导致业务数据无法处理；另一个Redis 初始化失败，影响到所有用户数据同步及奖励转换的问题。</p>
<h3 id="数据库cpu-拉满">数据库CPU 拉满</h3>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">select</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="s2">&#34;table&#34;</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">columnName</span><span class="o">=</span><span class="s1">&#39;value&#39;</span></span></span></code></pre></div></div>
<p>新的代码修改是根据数据库某一列去查找对应的数据，然而Dev 对于这一列并没有添加索引，导致在Job 运行，Job 运行时间过长，通过数据库指标的dashboard 查看，数据库CPU 爆满,进而对该Job 的代码重新review， 发现时数据库查询没有加索引的问题。</p>
<p>发现有问题后，我们开始分析是否可以回滚该服务；但是发现该服务还涉及到其他hotfix, 如果这个service rollback，那么还有其他2个service 也需要回滚，影响面比较大。最终，我们的解决方案是，hotfix 依旧上线，但是涉及的Daily Job 从任务中删除，通知客户该incident 的影响面，并且在第二天晚上定时任务执行的时候再次确认是否又执行了; 对于在新的fix 上线之前的报告，我们使用手动生成的方式,以使业务持续。</p>
<p>是不是感觉不应该出现这样的问题？</p>
<p>是的, 但为什么还是出现了这样的事故呢？个人认为原因很简单:</p>
<ul>
<li>在low env 没有足够的数据对新的代码更改做充分的压力测试，只是完成的对应的功能</li>
<li>Review 时没有发现该问题，不可否认，这完全是Reveiwer 的经验问题</li>
</ul>
<h3 id="redis-没有初始化">Redis 没有初始化</h3>
<p>关于这个问题，我们的应用程序在代码层面有两方面的设计，1，启动server, 向外部提供RESTful 服务；2，启动Agendash, 运行一些业务方面的定时任务。</p>
<p>而我们的更新就是去优化这个服务，在应用层面分为2个服务，并且保持运行Agendash 的pod 数量与Event Hub partition 的数量一致，以解决一个消息被重复消费的问题（虽然很tricky）。</p>
<p>团队使用的方式是，参考之前某一个服务的拆分策略，业务代码，Ops 部署代码都进行双份设计，在启动服务时，启动不同的脚本即可。方式很简单，只是<code>抄代码，抄逻辑</code>。</p>
<p>然而，团队在做code fix 时，没有将代码<code>抄</code>全，导致少了 <code>initRedis()</code> 这样的代码；又因为团队对对应的业务了解的不多，没有进行充分的上线前的测试，只是凭<code>Senior dev</code> 的感觉就上线了。</p>
<p>为什么呢？</p>
<ul>
<li>Dev 对<code>抄</code>过来的代码在思想上很有信心，但是没有经过验证</li>
<li>没有在本地测试</li>
<li>没有充分的业务测试，甚至没有测试</li>
<li>Senior dev 可能粗心没发现</li>
</ul>
<p>这个过程中，因为负责这个code fix 的是个Junior Dev, 而在那段时间，我们有新的Senior Dev 要上项目，所以两人Pair 一起修bug。</p>
<h2 id="standby">Standby</h2>
<p>为什么需要Standby 呢？</p>
<h3 id="增强信心">增强信心</h3>
<p>如果你是第一次遇到Incident，是不是会害怕?</p>
<ul>
<li>这个问题到底是怎么发生的？</li>
<li>这么多人问我这么多问题，我忙不过来，会不会被客户投诉？</li>
<li>标准的处理流程是什么？</li>
<li>这个业务我不了解，我该不该叫其他小伙伴一起看？</li>
<li>出了线上事故了，项目组或者公司会不会处理我？</li>
<li>&hellip;&hellip;</li>
</ul>
<p>想到这些，你是不是已经很恐慌了？相反，如果有人和你一起追踪这个问题，你又是什么样的心态呢？</p>
<h3 id="及时响应">及时响应</h3>
<p>正如上面所说，在出现Incident 的时候会有很多事要做，比如查询根因、处理各种leader 发过来的问题，是不是感觉一个人根本忙不过来？</p>
<p>所以，如果有其他小伙伴和你一起standby, 那么是不是可以将工作分配一下，对客户、leader 的问题及时做出响应；起码给别人你很<code>靠谱</code>的印象, 提升自己、团队甚至公司在这方面的声誉。</p>
<h2 id="收获">收获</h2>
<h3 id="在数据库中查询基本都需要考虑加索引">在数据库中查询，基本都需要考虑加索引</h3>
<p>凡事查询，在没有加索引，且数据量上去之后，查询一定会变慢，这种情况下需要根据biz/tech 的策略加索引。</p>
<h3 id="在出现incident-时全员应该随时支持所谓standby">在出现Incident 时，全员应该随时支持，所谓Standby</h3>
<p>在这次的Incident中，团队并没有及时的Standby，需要提升这方面的实践和认知。所以后续需要在团队内进行Incident 培训，让大家知道如何处理Incident。同时Standby 是一种负责人的态度。</p>
<h3 id="没有所谓的简单的工作">没有所谓的简单的工作</h3>
<p>不要在不了解事情的情况下，随便说&quot;这不是很简单么&quot;这样的话；说的越轻松，打脸往往来的越快。</p>
<h3 id="不要责备">不要责备</h3>
<p>就像Thoughtworks 所倡导的，出了问题, 不要针对个人，不要问&quot;9：00～10：00, 你在干嘛&quot; 这样&quot;地震级&quot;的问题；而应该去分析为什么会出现这个Incident, 以后怎么避免。</p>
<h2 id="总结">总结</h2>
<p>在Ops 项目中遇到Incident 应该是在平常不过的了，那么处理Incident 的过程中，流程和人才是最重要的。将流程标准化（SOP）,鼓励团队积极响应，认真分析，产出修复方案，做好事后事故报告(Incident Report)这些才是最重要的。</p>
]]></description></item><item><title>OAuth2.0和OIDC流程梳理</title><link>https://guzhongren.github.io/2023/06/oauth2.0%E5%92%8Coidc%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86/</link><pubDate>Sat, 03 Jun 2023 10:31:28 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2023/06/oauth2.0%E5%92%8Coidc%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="场景">场景</h2>
<p>在日常生活中，有许多使用OAuth 2.0或OIDC的案例。例如，小明使用团建费用在京东商城购买了许多零食，他希望使用第三方软件开发票来报销这部分费用。以下是小明、小票软件和京东商家开放平台之间的对话流程：</p>
<p>小明：“你好，小票软件。我在Google浏览器上需要访问你来处理我在京东商城店铺的订单信息，以生成发票。”</p>
<p>小票软件：“好的，小明，我需要你授权。现在我将引导你前往京东商家开放平台，在那里你可以给我授权。”</p>
<p>京东商家开放平台：“你好，小明。我收到了小票软件的跳转请求，已准备好一个授权页面。请登录并确认后，点击授权按钮即可。”</p>
<p>小明：“好的，京东商家开放平台。我已看到授权页面，并点击了授权按钮。”</p>
<p>京东商家开放平台：“你好，小票软件。我已收到小明的授权请求，现在将为你生成授权码（code）。我会通过浏览器重定向到你的回调URL地址。”</p>
<p>小票软件：“好的，京东商家开放平台。我已从浏览器中获取到授权码，现在将使用该授权码向你请求访问令牌（access_token）。请提供访问令牌给我。”</p>
<p>京东商家开放平台：“好的，小票软件，访问令牌已发送给你。”</p>
<p>小票软件：“太好了，现在我可以使用访问令牌来获取小明店铺的订单信息，并生成发票。”</p>
<p>小明：“我已能够看到我的订单，现在可以开始打印发票了。</p>
<p>在以下的流程中，大家可以使用如<strong>极客时间</strong>使用<strong>微信</strong>登录的流程，或者某业务系统使用<strong>Keycloak</strong>登录的方式来理解整个技术流转过程。</p>
<h2 id="oauth20">OAuth2.0</h2>
<h3 id="4-种授权许可类型">4 种授权许可类型</h3>
<p>OAuth2.0 有4种授权许可类型，分别是<strong>授权码许可(Authorization Code)</strong>， <strong>资源拥有者凭据许可(Resource Owner Password Credential)</strong>, <strong>客户端凭据许可(Client Credential)<strong>和</strong>隐式许可（Implicit）</strong>。</p>
<p>以下是一些进行对应类型的发送请求的伪代码</p>
<h4 id="授权码许可authorization-code">授权码许可(Authorization Code)</h4>
<p>授权码许可是OAuth 2.0中最常用的许可类型。它的流程如下：</p>
<p>小票软件将用户重定向到京东商家开放平台的授权页面。
用户在授权页面登录并点击授权按钮。
京东商家开放平台生成一个授权码，并通过重定向将用户带回小票软件指定的回调URL。
小票软件从回调URL中获取授权码。
小票软件使用授权码向京东商家开放平台请求访问令牌。
京东商家开放平台验证授权码并颁发访问令牌给小票软件。
小票软件使用访问令牌来获取小明店铺的订单信息，并生成发票。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">String</span><span class="w"> </span><span class="n">grantType</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">request</span><span class="p">.</span><span class="na">getParameter</span><span class="p">(</span><span class="s">&#34;grant_type&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">if</span><span class="p">(</span><span class="s">&#34;authorization_code&#34;</span><span class="p">.</span><span class="na">equals</span><span class="p">(</span><span class="n">grantType</span><span class="p">)){</span><span class="w">  </span><span class="p">}</span></span></span></code></pre></div></div>
<h4 id="资源拥有者凭据许可resource-owner-password-credential">资源拥有者凭据许可(Resource Owner Password Credential)</h4>
<p>资源拥有者凭据许可是一种直接使用用户名和密码进行认证的许可类型。该许可类型要求客户端直接获取用户的凭据，并使用这些凭据向授权服务器进行身份验证。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="o">&gt;</span><span class="w"> </span><span class="n">params</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="o">&gt;</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">params</span><span class="p">.</span><span class="na">put</span><span class="p">(</span><span class="s">&#34;grant_type&#34;</span><span class="p">,</span><span class="s">&#34;password&#34;</span><span class="p">);</span></span></span></code></pre></div></div>
<h4 id="客户端凭据许可client-credential">客户端凭据许可(Client Credential)</h4>
<p>客户端凭据许可适用于没有资源拥有者参与的情况下，客户端直接与授权服务器进行身份验证并获取访问令牌。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="o">&gt;</span><span class="w"> </span><span class="n">params</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="o">&gt;</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">params</span><span class="p">.</span><span class="na">put</span><span class="p">(</span><span class="s">&#34;grant_type&#34;</span><span class="p">,</span><span class="s">&#34;client_credentials&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">params</span><span class="p">.</span><span class="na">put</span><span class="p">(</span><span class="s">&#34;app_id&#34;</span><span class="p">,</span><span class="s">&#34;APPIDTEST&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">params</span><span class="p">.</span><span class="na">put</span><span class="p">(</span><span class="s">&#34;app_secret&#34;</span><span class="p">,</span><span class="s">&#34;APPSECRETTEST&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">String</span><span class="w"> </span><span class="n">accessToken</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">HttpURLClient</span><span class="p">.</span><span class="na">doPost</span><span class="p">(</span><span class="n">oauthURl</span><span class="p">,</span><span class="n">HttpURLClient</span><span class="p">.</span><span class="na">mapToStr</span><span class="p">(</span><span class="n">params</span><span class="p">));</span><span class="err">”</span></span></span></code></pre></div></div>
<h4 id="隐式许可implicit">隐式许可（Implicit)</h4>
<p>隐式许可是一种在浏览器中直接向授权服务器请求访问令牌的许可类型。这种许可类型通常用于单页应用程序或移动应用程序，因为它们无法安全地保持客户端凭据。</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="o">&gt;</span><span class="w"> </span><span class="n">params</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="o">&gt;</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">params</span><span class="p">.</span><span class="na">put</span><span class="p">(</span><span class="s">&#34;response_type&#34;</span><span class="p">,</span><span class="s">&#34;token&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">params</span><span class="p">.</span><span class="na">put</span><span class="p">(</span><span class="s">&#34;app_id&#34;</span><span class="p">,</span><span class="s">&#34;APPIDTEST&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">String</span><span class="w"> </span><span class="n">toOauthUrl</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">URLParamsUtil</span><span class="p">.</span><span class="na">appendParams</span><span class="p">(</span><span class="n">oauthUrl</span><span class="p">,</span><span class="n">params</span><span class="p">);</span></span></span></code></pre></div></div>
<h3 id="authorization-code-的实现分类">Authorization Code 的实现分类</h3>
<p>Authorization Code的实现主要分为两类：无服务器实现（使用PKCE）和有服务器实现。</p>
<p>无服务器实现使用PKCE（Proof Key for Code Exchange by OAuth Public Clients）来增加安全性，但应用较少。</p>
<p>有服务器实现广泛使用且更安全。</p>
<h3 id="authorization-code-实现的流程图">Authorization Code 实现的流程图</h3>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Security/OAuth/OAuth2.0-Flow.67h7qmku8ak0.svg" alt="OAuth 2.0 Flow" /></p>
<h2 id="oidc">OIDC</h2>
<p>OAuth2.0 是一种授权协议，而不是身份认证协议。OIDC 才是身份认证协议，而且是基于 OAuth 2.0 来执行用户身份认证的互通协议。更概括地说，OIDC 就是直接基于 OAuth 2.0 构建的身份认证框架协议。</p>
<h3 id="其3个角色与oauth20的4个角色的对应关系">其3个角色与OAuth2.0的4个角色的对应关系</h3>
<p>以下是OIDC 种的三个角色：</p>
<ul>
<li>EU（End User），代表最终用户</li>
<li>RP（Relying Party），代表认证服务的依赖方，就是上面我提到的第三方软件</li>
<li>OP（OpenID Provider），代表提供身份认证服务方</li>
</ul>
<p>OAuth 2.0 的 4 个角色和 OIDC 的 3 个角色之间的对应关系</p>
<ul>
<li>资源拥有者 -&gt; EU</li>
<li>第三方软件-&gt; RP</li>
<li>授权服务 + 受保护资源-&gt; OP</li>
</ul>
<h3 id="oidc-种的id_token">OIDC 种的ID_TOKEN</h3>
<p>OIDC 种有一个非常重要，从认证服务器下发的一个字段，就是OIDC, 其存储了一些非常有用的信息</p>
<ul>
<li>iss，令牌的颁发者，其值就是身份认证服务（OP）的 URL</li>
<li>sub，令牌的主题，其值是一个能够代表最终用户（EU）的全局唯一标识符</li>
<li>aud，令牌的目标受众，其值是三方软件（RP）的 app_id</li>
<li>exp，令牌的到期时间戳，所有的 ID 令牌都会有一个过期时间</li>
<li>iat，颁发令牌的时间戳</li>
</ul>
<h3 id="oidc-的流程图">OIDC 的流程图</h3>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Security/OAuth/OIDC-flow.6le76zwbokc0.svg" alt="OIDC Flow" /></p>
]]></description></item><item><title>成为一个职业的职业人</title><link>https://guzhongren.github.io/2023/04/%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E8%81%8C%E4%B8%9A%E7%9A%84%E8%81%8C%E4%B8%9A%E4%BA%BA/</link><pubDate>Thu, 20 Apr 2023 22:21:35 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2023/04/%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E8%81%8C%E4%B8%9A%E7%9A%84%E8%81%8C%E4%B8%9A%E4%BA%BA/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><p>工作多年后，慢慢的人就成熟了，做事慢慢也有了章法，有了自己的方法论；对团队的理解也更深刻了。</p>
<p>近几年随着疫情，大家默默形成了远程办公的习惯，而很多人还是没有从思想上形成远程办公的习惯。</p>
<p>以下是最近工作的一些总结和想法。</p>
<h2 id="事事有响应">事事有响应</h2>
<p>TL 说&quot;@All, 客服团队有人已经按照我们的模板开始提issue了，大家以后收到Ticket第一时间去检查Ticket 的内容是不是符合我们的模板。&quot;</p>
<p>1分钟过去了。</p>
<p>5 分钟过去了。</p>
<p>10 分钟过去了。</p>
<p>&hellip;&hellip;</p>
<p>一天过去了&hellip;&hellip;</p>
<p>就这样，没有人对你的消息做任何回应，即使是消息下面的表情信息也没有任何更新。那么，这是一次无效的沟通。而作为团队的成员，我们应该及时的给予&quot;任何事物&quot;反馈，形成有效沟通。另一方面，我们需要换位思考，为什么有人会在大群里说话，肯定是有重要的事情通知，而对方希望得到对应的响应，无论响应是正向的还是负面的。</p>
<h2 id="事事有始有终">事事有始有终</h2>
<p>现在在公司打两份工，一份是正经的工作，一份是一个公司内部的开源项目，都是作为TL，带领着若干个毕业生，而且一般都是所谓的&quot;非计&quot;，在我司也被称之为&quot;SuperX&quot;。</p>
<p>和我刚开始工作一样，大家都是对一件事不是那么上心，或者是不知道怎么才能把一件事做的漂漂亮亮，导致在后面追问的时候，大家都很茫然。在这里很重要的一点就是，做事要有始有终，以终为始。</p>
<h2 id="全局视角让你更游刃有余">全局视角，让你更游刃有余</h2>
<p>工作的价值就是不要浪费时间且持续输出有价值的内容。比如做一个功能卡，要完成前端的一个展示组件，但是在这个组件背后有个隐形知识，就是需要设计一个全局的存储，将用户选择的内容存储下来，方便后面将其下载为配置文件。</p>
<p>这样的隐形知识只有有全局的功能视角或者路线图的认知下才能想到。如果你有了这样的全局视角，你就会设计更合理的架构，编写更合理的数据结构，从而提升系统的可扩展，易维护的能力。</p>
<p>为了有这样的能力，推荐学习项目在业务方面的&quot;用户旅程&quot;，技术方面的<a href="https://guzhongren.github.io/slides/talks/01.C4-Model">C4 Modeling</a><sup>[1]</sup>
, <a href="https://plantuml.com/sequence-diagram">数据流图</a><sup>[2]</sup>
等等的。使用这些技术，将会加速你对项目的认知，做出更合理业务/架构决策。</p>
<h2 id="挖掘工作背后的真正目的从而向上管理">挖掘工作背后的真正目的，从而&quot;向上管理&quot;</h2>
<p>比如，给你分配了一个统计团队能力结构的一个工作，表格模板也给你了，那么你要怎么做呢？</p>
<p>首先，我们应该将模板调整为我们项目的技术栈、项目信息、人员情况，然后将表分享给组内小伙伴去在规定的时间内完成。等在最终截止日期时，把所有的信息分享给TL。大多时候，我们认为我们的工作就此结束了。</p>
<p>作为领导者，你可能要考虑&quot;向上管理&quot;，将收集到的结果统计并形成最直观、简洁的图表等来展示，且提供你的建议意见，让你的领导节省时间。这才是这份工作的重要性。</p>
<p>去挖掘工作的最终目的吧，那样的工作才有意义。</p>
<h2 id="做事前多想想task">做事前多想想Task</h2>
<p>最近在和team 更新团队情况的时候发现，团队成员总是没有在预估的点数内完成工作，而且情况比较普遍，经过多次反问，得出结论是，对系统和产品没有一个全局的认识，并且对自己的卡在全局中的位置，作用都不是很清楚，更有甚者，对自己开发的接口的上游是什么都不清楚。</p>
<p>这种情况从团队负责人的角度来看是有严重问题的，那么作为团队的负责人，就得想办法解决。上层的问题，可以&quot;胡萝卜大棒&quot;的形式加以&quot;授权和分配&quot;来解决。但是落到具体的个人身上，该如何解决呢？</p>
<p>通常个人一般通过接受外部资源信息和主动获取信息来提升个人能力。在获取到信息后，个人需要对自己所做的工作进行分析，拆分。使用&quot;分而治之&quot;的思想将工作拆分为一个个可衡量，有产出的task, 再开始干活。这样工作将会变得比之前轻松很多。</p>
<h2 id="慢慢来比较快">慢慢来，比较快</h2>
<p>现在，我在负责新加坡的一个运维项目，组里的成员都是新人，而且还有不少毕业生；因为这是一个非常大的项目，我们每个人对整个项目都是只知道一点，虽然有各种各样的KT(Knowledge Transfer), 但是能吸收的少之又少。</p>
<p>在这种情况下，我们每天都要面对来自用户，公民的各种问题，还要接受内部同事的Feedback，这样的运维工作既没有效率，也没有成就感。</p>
<p>&ldquo;慢慢来，比较快&rdquo;。 应对这样的问题我们最好的方式，就是将业务流程梳理清晰，微服务之间的调用关系整理成易于理解的关系图或者数据流图。这样在了解了真正的业务之后，再做决定，将会事半功倍，且在应对任何问题的时候都会信心满满，从而加速工作的推进。</p>
<h2 id="好脑子不如烂笔头">好脑子不如烂笔头</h2>
<p>把你想到的内容尽快写下来, 不然，当你错过那个念头之后，那个想法就会立马变味。</p>
<p>刚刚，我已经忘了一个这个文章的一个&quot;好点子&quot;。</p>
<h2 id="归档">归档</h2>
<p>将日常用到的或者可重复的内容文字化、脚本化，并且保持&quot;Source of Truth&quot;，永远只有一份，且是最新的。</p>
<p>当有人要问你相关的问题，你只需要甩给他一个图，一个链接，或者给他一个图片。</p>
<p>一个人的厚重感，可能就是他脑子里归档好的所有有效的知识和链接吧。</p>
<p>&hellip;&hellip;</p>
<div class="references">
                <h2>参考</h2>
                <ol><li>C4 Modeling: <a href="https://guzhongren.github.io/slides/talks/01.C4-Model" rel="noopener noreferrer">https://guzhongren.github.io/slides/talks/01.C4-Model</a></li><li>数据流图: <a href="https://plantuml.com/sequence-diagram" rel="noopener noreferrer">https://plantuml.com/sequence-diagram</a></li></ol>
            </div>]]></description></item><item><title>数字证书分类总结</title><link>https://guzhongren.github.io/2023/01/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E5%88%86%E7%B1%BB%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 08 Jan 2023 20:35:00 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2023/01/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E5%88%86%E7%B1%BB%E6%80%BB%E7%BB%93/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1671227498016-93aa927686f8?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1074&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="数字证书定义">数字证书定义</h2>
<p>数字证书就是互联网通讯中标志通讯各方身份信息的一串数字，数字证书由经国家工信部认证的权威机构——CA 机构发行，是身份认证机构盖在数字身份证上的一个章或印(或者说加在数字身份证上的一个签名)，人们可以在网上用它来识别对方的身份。</p>
<h3 id="作用">作用</h3>
<ul>
<li>信息的保密性</li>
<li>交易者身份的确定性</li>
<li>不可否认性</li>
<li>不可修改性</li>
</ul>
<h2 id="常见标准">常见标准</h2>
<h3 id="符合-pki-itu-t-x509-标准传统标准der-pem-cer-crt">符合 PKI ITU-T X509 标准，传统标准（.DER .PEM .CER .CRT）</h3>
<p>X509 是数字证书的基本规范，而 P7 和 P12 则是两个实现规范，P7 用于数字信封，P12 则是带有私钥的证书实现规范。</p>
<p>基本的证书格式，只包含公钥。
x509 证书由用户公共密钥和用户标识符组成。此外还包括</p>
<ul>
<li>版本号</li>
<li>证书序列号</li>
<li>CA 标识符</li>
<li>签名算法标识</li>
<li>签发者名称</li>
<li>证书有效期等信息。</li>
</ul>
<h3 id="符合-pkcs7-加密消息语法标准p7b-p7c-spc-p7r">符合 PKCS#7 加密消息语法标准(.P7B .P7C .SPC .P7R)</h3>
<p>Public Key Cryptography Standards #7</p>
<p>一般主要用来做数字信封。
一般把证书分成两个文件，一个公钥、一个私钥，有 PEM 和 DER 两种编码方式</p>
<ul>
<li>PEM 比较多见，是纯文本的，一般用于分发公钥，看到的是一串可见的字符串，通常以.crt，.cer，.key 为文件后缀</li>
<li>DER 是二进制编码</li>
</ul>
<h3 id="符合-pkcs10-证书请求标准p10">符合 PKCS#10 证书请求标准(.p10)</h3>
<p>证书请求语法</p>
<h3 id="符合-pkcs12-个人信息交换标准pfx-p12">符合 PKCS#12 个人信息交换标准（.pfx *.p12）</h3>
<p>Public Key Cryptography Standards #12</p>
<p>一种文件<strong>打包格式</strong>，为存储和发布用户和服务器私钥、公钥和证书指定了一个可移植的格式，是一种<strong>二进制</strong>格式，通常以**.pfx<strong>或</strong>.p12**为文件后缀名。
使用 OpenSSL 的 pkcs12 命令可以创建、解析和读取这些文件。
P12 是把证书压成一个文件，<strong>xxx.pfx</strong> 。主要是考虑分发证书，私钥是要绝对保密的，不能随便以文本方式散播。所以 P7 格式不适合分发。.pfx 中可以加密码保护，所以更安全。</p>
<h2 id="covert">Covert</h2>
<p>数字证书格式之间是可以相互转换的，只是需要在特定的转换过程中，使用特定的参数，比如有的转换需要私钥， 有的转换需要密码。</p>
<p><img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/Security/Degital-Cert.3y4w8ewfimc0.webp" alt="Digital-Cert" /></p>
<h2 id="ssl-证书分类">SSL 证书分类</h2>
<h3 id="dv-ssl-证书域名型">DV SSL 证书（域名型）</h3>
<p>只验证域名所有权，在浏览器中显示锁形标志；</p>
<h4 id="适用">适用</h4>
<ul>
<li>个人网站或者小微企业使用</li>
</ul>
<h4 id="优点">优点</h4>
<ul>
<li>申请容易 - 颁发快 - 价格较低</li>
</ul>
<h4 id="缺点">缺点</h4>
<ul>
<li>证书中无法显示企业信息 - 安全性较差</li>
</ul>
<h3 id="ov-ssl-证书企业型">OV SSL 证书（企业型）</h3>
<p>验证域名所有权以及申请的主体身份的合法性</p>
<h4 id="适用-1">适用</h4>
<p>中小型企业、企事业单位官网使用</p>
<h4 id="优点-1">优点</h4>
<ul>
<li>安全性较高，可点击浏览器小锁标志查看证书信息</li>
</ul>
<h3 id="ev-ssl-证书增强型">EV SSL 证书（增强型）</h3>
<p>Extended Validation（EV）证书是目前高信任级别的 SSL 证书</p>
<h4 id="适用-2">适用</h4>
<ul>
<li>大型商业网站或者是对网站安全有较高要求的公司。可在绿色地址栏显示公司名称</li>
</ul>
<h3 id="优点-2">优点</h3>
<ul>
<li>证书颁发机构对此的审核比较严格</li>
</ul>
<h2 id="根据域名分类">根据域名分类</h2>
<p><img src="https://www.wosign.com/column/images/ssl_20211231_1.png" alt="Domain" /></p>
<h3 id="单域名证书">单域名证书</h3>
<p>这类证书只保护一个域名，这些域名形如www.abc.com；bcd.com；a.store.cn等; 默认是可以保护不带 www 的主域名，但是当你为其他前缀的子域名申请证书时，则只能保护当前子域名，不能保护不带前缀的主域名。</p>
<h3 id="多域名证书">多域名证书</h3>
<p>这种类型的证书可以同时保护多个域名，例如：同时保护www.abc.com、bcd.com；a.store.cn等; 不同品牌的多域名证书默认保护的域名数量不一样。</p>
<h3 id="通配符证书">通配符证书</h3>
<p>通配符证书可以保护一个域名下的同级子域名，并且不限制子域名的数量。例如：这类证书可以保护 free.abc.com，也可以保护 bbs.abc.com，也就是说他可以保护 abc.com 这个域名下的所有同级子域名</p>
<h3 id="代码签名证书code-signing-certificates">代码签名证书（Code Signing Certificates）</h3>
<p>为软件开发者提供代码软件数字签名的认证服务。通过对代码的数字签名可以减少软件下载时弹出的安全警告、保证代码不被恶意篡改、使厂商信息对下载用户公开可见等效果，从而建立良好的软件品牌信誉度。
查看<a href="https://cloud.tencent.com/product/csc">腾讯 CSC</a><sup>[1]</sup>
 一看便知。</p>
<h2 id="ca">CA</h2>
<p>要被别人信任，那么就得有个可靠的证书颁发机构。以下是一些比较著名的证书颁发机构。</p>
<ul>
<li><a href="https://www.digicert.com/">Digicert (收购 #Symantec )</a><sup>[2]</sup>
</li>
<li><a href="https://www.cfca.com.cn/">中国金融认证中心(CFCA)</a><sup>[3]</sup>
</li>
<li><a href="https://www.geotrust.com/">GeoTrust</a><sup>[4]</sup>
</li>
<li>&hellip;</li>
</ul>
<div class="references">
                <h2>参考</h2>
                <ol><li>腾讯 CSC: <a href="https://cloud.tencent.com/product/csc" rel="noopener noreferrer">https://cloud.tencent.com/product/csc</a></li><li>Digicert (收购 #Symantec ): <a href="https://www.digicert.com/" rel="noopener noreferrer">https://www.digicert.com/</a></li><li>中国金融认证中心(CFCA): <a href="https://www.cfca.com.cn/" rel="noopener noreferrer">https://www.cfca.com.cn/</a></li><li>GeoTrust: <a href="https://www.geotrust.com/" rel="noopener noreferrer">https://www.geotrust.com/</a></li></ol>
            </div>]]></description></item><item><title>How to Learn Development</title><link>https://guzhongren.github.io/2022/12/how-to-learn-development/</link><pubDate>Sat, 31 Dec 2022 17:56:21 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2022/12/how-to-learn-development/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.jsdelivr.net/gh/guzhongren/picx-images-hosting@master/How-to/How-to-learn-development.svg" referrerpolicy="no-referrer">
            </div><p>本文是近期为学弟学妹们演讲时用 Logseq 整理的大纲,在此记录一下，以备复用。</p>
<h2 id="intro">Intro</h2>
<p><a href="https://guzhongren.github.io/about/">https://guzhongren.github.io/about/</a><sup>[1]</sup>
</p>
<h2 id="know-yourself">Know yourself</h2>
<p>Do you really like computer science???
灵魂三问，你真的喜欢计算机科学吗？如果不喜欢早点放弃，不然你以后的每一刻都会感到无比的痛苦。</p>
<h2 id="trend">Trend</h2>
<p><strong>Trend is the future</strong>
<a href="https://www.devjobsscanner.com/blog/">https://www.devjobsscanner.com/blog/</a><sup>[2]</sup>
</p>
<blockquote>
<p>夫以铜为镜，可以正衣冠；以史为镜，可以知兴替；以人为镜，可以明得失。
《旧唐书·魏徵传》李世民
只有系统行地了解你所关注的内容的方向，你才能找到下一个发展的 G 点，从而成功。</p></blockquote>
<h2 id="roadmap--best-pratice">Roadmap &amp; Best Pratice</h2>
<h3 id="roadmap">Roadmap</h3>
<ul>
<li><a href="https://roadmap.sh">https://roadmap.sh</a><sup>[3]</sup>
</li>
</ul>
<h3 id="best-practice">Best Practice</h3>
<ul>
<li>Article</li>
</ul>
<h4 id="道术法器">道术法器</h4>
<ul>
<li>道：<strong>核心思想、理念、本质规律</strong></li>
<li>术：<strong>行为与技巧</strong></li>
<li>法：<strong>法律、规章、制度、方法</strong></li>
<li>器：<strong>工具</strong></li>
</ul>
<h2 id="frontend">Frontend</h2>
<h3 id="basic">Basic</h3>
<ul>
<li><a href="https://nodejs.org/en/">Node</a><sup>[4]</sup>

<ul>
<li><a href="https://nodejs.org/en/">https://nodejs.org/en/</a><sup>[4]</sup>
</li>
</ul>
</li>
<li>Package management
<ul>
<li><a href="https://www.npmjs.com/">npm</a><sup>[5]</sup>

<ul>
<li><a href="https://www.npmjs.com/">https://www.npmjs.com/</a><sup>[5]</sup>
</li>
</ul>
</li>
<li><a href="https://yarnpkg.com/">yarn</a><sup>[6]</sup>

<ul>
<li><a href="https://yarnpkg.com/">https://yarnpkg.com/</a><sup>[6]</sup>
</li>
</ul>
</li>
<li><a href="https://pnpm.io/">pnpm</a><sup>[7]</sup>

<ul>
<li><a href="https://pnpm.io/">https://pnpm.io/</a><sup>[7]</sup>
</li>
</ul>
</li>
</ul>
</li>
<li>IDE
<ul>
<li><a href="https://code.visualstudio.com/">VSCode</a><sup>[8]</sup>

<ul>
<li><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a><sup>[8]</sup>
</li>
</ul>
</li>
<li><a href="https://www.jetbrains.com/">JetBrains</a><sup>[9]</sup>

<ul>
<li><a href="https://www.jetbrains.com/">https://www.jetbrains.com/</a><sup>[9]</sup>
</li>
</ul>
</li>
</ul>
</li>
<li>Tools
<ul>
<li><a href="https://vitejs.dev/">Vite</a><sup>[10]</sup>

<ul>
<li><a href="https://vitejs.dev/">https://vitejs.dev/</a><sup>[10]</sup>
</li>
</ul>
</li>
<li><a href="https://www.webpackjs.com/">Webpack</a><sup>[11]</sup>

<ul>
<li><a href="https://www.webpackjs.com/">https://www.webpackjs.com/</a><sup>[11]</sup>
</li>
</ul>
</li>
<li>&hellip;</li>
</ul>
</li>
</ul>
<h3 id="language">Language</h3>
<ul>
<li>JavaScript/TypeScript</li>
<li>CSS/Less/Sass</li>
<li>HTML</li>
</ul>
<h3 id="framework">Framework</h3>
<ul>
<li><a href="https://reactjs.org/">React</a><sup>[12]</sup>

<ul>
<li><a href="https://reactjs.org/">https://reactjs.org/</a><sup>[12]</sup>
</li>
</ul>
</li>
<li><a href="https://vuejs.org/">Vue</a><sup>[13]</sup>

<ul>
<li><a href="https://vuejs.org/">https://vuejs.org/</a><sup>[13]</sup>
</li>
</ul>
</li>
<li><a href="https://angularjs.org/">Angular</a><sup>[14]</sup>

<ul>
<li><a href="https://angularjs.org/">https://angularjs.org/</a><sup>[14]</sup>
</li>
</ul>
</li>
<li><a href="https://svelte.dev/">Svelte</a><sup>[15]</sup>

<ul>
<li><a href="https://svelte.dev/">https://svelte.dev/</a><sup>[15]</sup>
</li>
</ul>
</li>
<li>&hellip;</li>
</ul>
<h3 id="resources">Resources</h3>
<ul>
<li><a href="https://www.imooc.com/">幕课网</a><sup>[16]</sup>
</li>
<li><a href="https://www.w3school.com.cn/">w3school</a><sup>[17]</sup>
</li>
<li><a href="https://developer.mozilla.org/zh-CN/">MDN</a><sup>[18]</sup>
</li>
</ul>
<h2 id="backend">Backend</h2>
<h3 id="nodejs">Nodejs</h3>
<ul>
<li><a href="https://expressjs.com/">Express</a><sup>[19]</sup>

<ul>
<li><a href="https://expressjs.com/">https://expressjs.com/</a><sup>[19]</sup>
</li>
</ul>
</li>
<li><a href="https://koajs.com/">Koa</a><sup>[20]</sup>

<ul>
<li><a href="https://koajs.com/">https://koajs.com/</a><sup>[20]</sup>
</li>
</ul>
</li>
</ul>
<h3 id="javakotin">Java/Kotin</h3>
<ul>
<li><a href="https://spring.io/">Spring</a><sup>[21]</sup>
</li>
</ul>
<h2 id="gis">GIS</h2>
<h3 id="arcgisesri">ArcGIS[ESRI]</h3>
<ul>
<li><a href="https://developers.arcgis.com/documentation/mapping-apis-and-services/">Dev docs</a><sup>[22]</sup>

<ul>
<li><a href="https://developers.arcgis.com/documentation/mapping-apis-and-services/">https://developers.arcgis.com/documentation/mapping-apis-and-services/</a><sup>[22]</sup>
</li>
</ul>
</li>
<li>ArcGIS Desktop</li>
<li>ArcGIS Server</li>
</ul>
<h3 id="supermap">Supermap</h3>
<h3 id="openlayers"><a href="https://openlayers.org/">OpenLayers</a><sup>[23]</sup>
</h3>
<h3><a href="https://openlayers.org/">https://openlayers.org/</a><sup>[23]</sup>
</h3>
<h3 id="qgis">QGIS</h3>
<h3 id="geoserver">GeoServer</h3>
<h3 id="leaflet"><a href="https://leafletjs.com/">Leaflet</a><sup>[24]</sup>
<a href="https://leafletjs.com/">https://leafletjs.com/</a><sup>[24]</sup>
</h3>
<h3 id="cesiumjs"><a href="https://cesium.com/platform/cesiumjs/">Cesiumjs</a><sup>[25]</sup>
<a href="https://cesium.com/platform/cesiumjs/">https://cesium.com/platform/cesiumjs/</a><sup>[25]</sup>
</h3>
<h2 id="suggestions">Suggestions</h2>
<p>Build common capabilities</p>
<ul>
<li><a href="https://www.docker.com/">Docker</a><sup>[26]</sup>

<ul>
<li><a href="https://www.docker.com/">https://www.docker.com/</a><sup>[26]</sup>
</li>
</ul>
</li>
<li>Command line
<ul>
<li><a href="https://github.com/microsoft/terminal">https://github.com/microsoft/terminal</a><sup>[27]</sup>
</li>
<li>Linux cmd</li>
<li>Mac iterm2 / Warp</li>
</ul>
</li>
<li>Tech stacks
<ul>
<li>CI/CD
<ul>
<li><a href="https://docs.github.com/en/actions">GitHub Actions</a><sup>[28]</sup>

<ul>
<li><a href="https://docs.github.com/en/actions">https://docs.github.com/en/actions</a><sup>[28]</sup>
</li>
</ul>
</li>
<li><a href="https://www.jenkins.io/">Jenkins</a><sup>[29]</sup>

<ul>
<li><a href="https://www.jenkins.io/">https://www.jenkins.io/</a><sup>[29]</sup>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Soft skills
<ul>
<li>Communication</li>
<li>Management</li>
<li>Plan</li>
<li>Show</li>
<li>&hellip;</li>
</ul>
</li>
</ul>
<h3 id="build-your-tech-radar">Build your <strong>Tech Radar</strong></h3>
<ul>
<li><a href="https://guzhongren.github.io/about/">https://guzhongren.github.io/about/</a><sup>[1]</sup>
</li>
</ul>
<h3 id="always-summary">Always summary</h3>
<ul>
<li>Build your own blog website</li>
<li>Wechat articles</li>
<li>&hellip;</li>
</ul>
<h3 id="agile">[[Agile]]</h3>
<ul>
<li>[[🌰 Template-Way-of-working]]</li>
<li>Tools
<ul>
<li>Calendar</li>
<li>Trello</li>
<li>&hellip;</li>
</ul>
</li>
</ul>
<h3 id="measure--track-anything-with-data">Measure &amp; track anything with data</h3>
<ul>
<li>[[💯 Capability Uplift]]</li>
</ul>
<h3 id="english">English</h3>
<ul>
<li>四级/六级/PTE</li>
</ul>
<h3 id="keep-smile">Keep smile</h3>
<ul>
<li>Stop complaining;</li>
<li>Don&rsquo;t complain;</li>
<li>No complaints.</li>
</ul>
<h2 id="key-points">Key Points</h2>
<ul>
<li>Quality vs Output
<ul>
<li>GitHub&hellip;</li>
</ul>
</li>
<li>[[成事思维]]</li>
</ul>
<h2 id="qa">Q&amp;A</h2>
<div class="references">
                <h2>参考</h2>
                <ol><li>https://guzhongren.github.io/about/: <a href="https://guzhongren.github.io/about/" rel="noopener noreferrer">https://guzhongren.github.io/about/</a></li><li>https://www.devjobsscanner.com/blog/: <a href="https://www.devjobsscanner.com/blog/" rel="noopener noreferrer">https://www.devjobsscanner.com/blog/</a></li><li>https://roadmap.sh: <a href="https://roadmap.sh" rel="noopener noreferrer">https://roadmap.sh</a></li><li>Node: <a href="https://nodejs.org/en/" rel="noopener noreferrer">https://nodejs.org/en/</a></li><li>npm: <a href="https://www.npmjs.com/" rel="noopener noreferrer">https://www.npmjs.com/</a></li><li>yarn: <a href="https://yarnpkg.com/" rel="noopener noreferrer">https://yarnpkg.com/</a></li><li>pnpm: <a href="https://pnpm.io/" rel="noopener noreferrer">https://pnpm.io/</a></li><li>VSCode: <a href="https://code.visualstudio.com/" rel="noopener noreferrer">https://code.visualstudio.com/</a></li><li>JetBrains: <a href="https://www.jetbrains.com/" rel="noopener noreferrer">https://www.jetbrains.com/</a></li><li>Vite: <a href="https://vitejs.dev/" rel="noopener noreferrer">https://vitejs.dev/</a></li><li>Webpack: <a href="https://www.webpackjs.com/" rel="noopener noreferrer">https://www.webpackjs.com/</a></li><li>React: <a href="https://reactjs.org/" rel="noopener noreferrer">https://reactjs.org/</a></li><li>Vue: <a href="https://vuejs.org/" rel="noopener noreferrer">https://vuejs.org/</a></li><li>Angular: <a href="https://angularjs.org/" rel="noopener noreferrer">https://angularjs.org/</a></li><li>Svelte: <a href="https://svelte.dev/" rel="noopener noreferrer">https://svelte.dev/</a></li><li>幕课网: <a href="https://www.imooc.com/" rel="noopener noreferrer">https://www.imooc.com/</a></li><li>w3school: <a href="https://www.w3school.com.cn/" rel="noopener noreferrer">https://www.w3school.com.cn/</a></li><li>MDN: <a href="https://developer.mozilla.org/zh-CN/" rel="noopener noreferrer">https://developer.mozilla.org/zh-CN/</a></li><li>Express: <a href="https://expressjs.com/" rel="noopener noreferrer">https://expressjs.com/</a></li><li>Koa: <a href="https://koajs.com/" rel="noopener noreferrer">https://koajs.com/</a></li><li>Spring: <a href="https://spring.io/" rel="noopener noreferrer">https://spring.io/</a></li><li>Dev docs: <a href="https://developers.arcgis.com/documentation/mapping-apis-and-services/" rel="noopener noreferrer">https://developers.arcgis.com/documentation/mapping-apis-and-services/</a></li><li>OpenLayers: <a href="https://openlayers.org/" rel="noopener noreferrer">https://openlayers.org/</a></li><li>Leaflet: <a href="https://leafletjs.com/" rel="noopener noreferrer">https://leafletjs.com/</a></li><li>Cesiumjs: <a href="https://cesium.com/platform/cesiumjs/" rel="noopener noreferrer">https://cesium.com/platform/cesiumjs/</a></li><li>Docker: <a href="https://www.docker.com/" rel="noopener noreferrer">https://www.docker.com/</a></li><li>https://github.com/microsoft/terminal: <a href="https://github.com/microsoft/terminal" rel="noopener noreferrer">https://github.com/microsoft/terminal</a></li><li>GitHub Actions: <a href="https://docs.github.com/en/actions" rel="noopener noreferrer">https://docs.github.com/en/actions</a></li><li>Jenkins: <a href="https://www.jenkins.io/" rel="noopener noreferrer">https://www.jenkins.io/</a></li></ol>
            </div>]]></description></item><item><title>如何写一份合格的 ADR</title><link>https://guzhongren.github.io/2020/08/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%BB%BD%E5%90%88%E6%A0%BC%E7%9A%84adr/</link><pubDate>Tue, 04 Aug 2020 22:06:29 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2020/08/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%BB%BD%E5%90%88%E6%A0%BC%E7%9A%84adr/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1596199737455-0b2e92661915?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1491&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="什么是-adr">什么是 ADR</h2>
<blockquote>
<p><em>ADR</em> 即* Architectural Decision Records*，架构决策记录。</p>
<ul>
<li>
<p>架构决策（AD）是一种软件设计选择，针对功能性或非功能性的需求进行的选择设计。</p>
</li>
<li>
<p>架构上重要的要求（ASR, Architecturally Significant Requirement）是对一个软件系统的体系结构和质量衡量效果的要求。</p>
</li>
<li>
<p>架构决策记录（ADR）捕捉 AD，如经常做写个人笔记或会议记录时；在项目中创建和维护的 ADR 集合构成其决策日志。</p>
</li>
</ul></blockquote>
<p>所有这些都属于架构知识管理 (AKM) 的主题。</p>
<p><img src="https://images.unsplash.com/photo-1583591900414-7031eb309cb6?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=675&amp;q=80" alt="Photo by Josep Martins" /></p>
<h2 id="adr-能干什么">ADR 能干什么</h2>
<ul>
<li>它可以记录某些决定背后的动机。</li>
</ul>
<p>其实这一条就够了，在敏捷项目或者大型项目开发中，我们不难避免作出架构变更的操作。如果一次次的变更都没有记录，对于后来的开发者或者维护者都会是灾难。
在没有文档或者前人的指导下，如果使用新的架构变更可能会导致意想不到的 bug 出现。</p>
<p>为了能使后来者了解项目架构变化或者更好的维护项目，将重要的架构变更记录下来是非常重要的。</p>
<ul>
<li>为客户更好的呈现现象及解决方案</li>
</ul>
<p>当你作为乙方，为你的甲方开发系统，突然有一个功能要更改之前的架构设计，那么你的这次的架构变更应该需要让甲方知道并同意，最好的方案就是给他 show 一个 ADR.</p>
<ul>
<li>梳理业务</li>
</ul>
<p>ADR 是一个思考过程，也是一个记录过程； 将抽象的思考，以文字和图表等的形式记录下来，可以更好地辅助我们理解业务，共享知识。</p>
<p><img src="https://images.unsplash.com/photo-1470790376778-a9fbc86d70e2?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=649&amp;q=80" alt="Photo by Brandi Redd" /></p>
<h2 id="什么情况下要使用-adr">什么情况下要使用 ADR</h2>
<p>如上所说，在项目架构有重大变更的时候需要做记录，让所有关系人都了解到这次变更。在此需要说一下，对于敏捷宣言其中有一句，<code>工作的软件高于详尽的文档</code>， 这句话的意思不是不写文档。所以，必要的文档还是要写的。</p>
<h2 id="怎么写呢">怎么写呢</h2>
<h3 id="标题">标题</h3>
<p>标题 (Title) 建议以 <code>ADR-[序号]-[项目/团队名称]-[ADR 主题]</code> 这样的形式，直观且有序。</p>
<h3 id="总结-summary">总结 (Summary)</h3>
<p>这部分的主要任务是让别人快速知道你的这次 ADR 的上下文 (Context) 是什么，有哪些目标 (Objective), 有哪些备选方案 (Options)，谁在主导 (Owner), 有谁审阅了 (Reviews), 有哪些相关的决策 (Related Decisions), 当前 ADR 的状态 (Status) 是什么等。</p>
<p>一般情况下，在 ADR 开始的时候用一个表格来总体概括当前 ADR 的一些状态。比如：</p>
<table>
  <thead>
      <tr>
          <th>Item</th>
          <th>Content</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>名称 (Title)</td>
          <td>ADR 的标题</td>
      </tr>
      <tr>
          <td>序号 (ID)</td>
          <td>ADR 序列号</td>
      </tr>
      <tr>
          <td>主导人 (Owner)</td>
          <td>负责人</td>
      </tr>
      <tr>
          <td>审阅人 (Reviewers)</td>
          <td>参与的审阅者</td>
      </tr>
      <tr>
          <td>上下文 (Context)</td>
          <td>这里介绍 ADR 的背景 (background)，目标 (objective)，是否紧急 (urgent)，如果不解决会有什么影响 (impact) 或者风险 (risk)，有什么限制，顾虑 (constraints) 等，所有可以为作出决定的内容都可以写在这里</td>
      </tr>
      <tr>
          <td>目标 (Objective)</td>
          <td>列出所有要达到的目标</td>
      </tr>
      <tr>
          <td>备选方案 (Options)</td>
          <td>以列表 (<code>Option</code>) 形式列出所有的备选方案</td>
      </tr>
      <tr>
          <td>相关决策 (Related decisions)</td>
          <td>关于此次决策相关的一些其他辅助链接</td>
      </tr>
      <tr>
          <td>状态 (Status)</td>
          <td>本 ADR 的状态，<code>INPROGRESS</code>, <code>PROPOSED</code>, <code>PENDING</code>, <code>DECIDED</code>和<code>REJECTED</code> 中的一个</td>
      </tr>
      <tr>
          <td>决定 (Decision)</td>
          <td>接受 (<code>Accepted</code>) 或者拒绝 (<code>Rejected</code>)</td>
      </tr>
      <tr>
          <td>决策 (Consequences)</td>
          <td>选择了哪个方案，有什么后果或者代价</td>
      </tr>
  </tbody>
</table>
<h3 id="详细背景-background">详细背景 (Background)</h3>
<p>如果以上的表格并没有清楚的说明问题，那么在这块就可以详细说明了。</p>
<p>建议：</p>
<ul>
<li>在阐述问题的时候尽量用图（截图，示意图，设计图，流程图）或者表来说明，因为图表比文字更直观，更容易理解；</li>
</ul>
<h3 id="方案对比-option-comparison">方案对比 (Option Comparison)</h3>
<p>以上内容已经让你的甲方了解到了你们遇到了什么问题，接下来的内容就是在各个方案之间对比了，当然作为陈述 ADR 的人，你必须有一个你推荐 (prefer) 的方案。</p>
<p>方案对比一般也是一个表格，比如：</p>
<table>
  <thead>
      <tr>
          <th style="text-align: left">方案 (Options)</th>
          <th style="text-align: left">方案详细信息 (Solution Details)</th>
          <th style="text-align: left">优势 (pros)</th>
          <th style="text-align: left">劣势 (Cons)</th>
          <th style="text-align: left">决策后果或代价 (Consideration)</th>
          <th style="text-align: left">开发或测试成本 (Dev&amp;test Effort)</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">方案 1-option1 title</td>
          <td style="text-align: left">详细信息</td>
          <td style="text-align: left">有哪些优势</td>
          <td style="text-align: left">有哪些劣势</td>
          <td style="text-align: left">有什么要被顾虑</td>
          <td style="text-align: left">较小 (Small), 中等 (Medium)， 较难 (High) 中的一个</td>
      </tr>
      <tr>
          <td style="text-align: left">方案 2-option1 title</td>
          <td style="text-align: left">详细信息</td>
          <td style="text-align: left">有哪些优势</td>
          <td style="text-align: left">有哪些劣势</td>
          <td style="text-align: left">有什么要被顾虑</td>
          <td style="text-align: left">较小 (Small)</td>
      </tr>
      <tr>
          <td style="text-align: left">方案 3-option1 title</td>
          <td style="text-align: left">详细信息</td>
          <td style="text-align: left">有哪些优势</td>
          <td style="text-align: left">有哪些劣势</td>
          <td style="text-align: left">有什么要被顾虑</td>
          <td style="text-align: left">中等 (Medium)</td>
      </tr>
      <tr>
          <td style="text-align: left">方案 4-option1 title</td>
          <td style="text-align: left">详细信息</td>
          <td style="text-align: left">有哪些优势</td>
          <td style="text-align: left">有哪些劣势</td>
          <td style="text-align: left">有什么要被顾虑</td>
          <td style="text-align: left">较难 (High)</td>
      </tr>
  </tbody>
</table>
<h3 id="讨论拉通-discuss">讨论拉通 (Discuss)</h3>
<p>上面所有做的工作都是为这一次讨论服务的，在拉通的会议上，需要拉上所有与本次变更有关系的人，当然最主要的是将甲方爸爸拉上；在会议上，你需要先陈述上上面的内容，最后把选择权交到甲方爸爸手里，千万不要把甲方爸爸的唯一的权利剥夺了。至于为什么，我也不知道。😄</p>
<p>在所有讨论完毕，要将 ADR 更新，并更新 ADR 的总结部分 (Summary)， 方便后面的人快速得到决策信息。</p>
<h2 id="参考项目">参考项目</h2>
<ul>
<li><a href="https://adr.github.io/madr/">MADR</a><sup>[1]</sup>
 - Markdown 架构决策记录（MADR）。精益 ADR 可快速记录代码中的架构决策。</li>
<li><a href="https://adr.github.io/adr-log/">adr-log: https://adr.github.io/adr-log/</a><sup>[2]</sup>
 - 从 MADR 生成体系结构决策日志。</li>
<li><a href="https://adr.github.io/e-adr/">嵌入式架构决策记录：https://adr.github.io/e-adr/</a><sup>[3]</sup>
 显示如何通过 ADR 注释将分布式 AD 日志嵌入 Java 代码中。</li>
<li><a href="https://adr.github.io/eadlsync/">eadlsync:https://adr.github.io/eadlsync/</a><sup>[4]</sup>
 - 将嵌入式架构决策记录与架构决策存储库同步。</li>
<li><a href="https://github.com/adr/serepo">SE Repo: https://github.com/adr/serepo</a><sup>[5]</sup>
 - 软件工程资料库。用于版本化软件工程工件的存储库，可以是架构决策，模式等。</li>
</ul>
<p><img src="https://images.unsplash.com/photo-1569091791842-7cfb64e04797?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=675&amp;q=80" alt="Photo by Sheldon Liu" /></p>
<h2 id="总结">总结</h2>
<p>ADR 在大型项目或者大公司的项目中经常会用到，不管是对现有业务的澄清总结，还是对不确定的业务的拉通都有积极作用。当然也是一个<code>甩锅利器</code>。</p>
<p>建议：</p>
<ul>
<li>使用版本控制工具来管理 ADR, 比如 <a href="https://www.atlassian.com/software/confluence">Confluence</a><sup>[6]</sup>
, 国内的话有 <a href="https://www.yuque.com/">语雀</a><sup>[7]</sup>
, <a href="https://shimo.im/">石墨</a><sup>[8]</sup>
, 还有些代码管理平台也有<code>Wiki</code>, 如阿里云的 <a href="https://www.aliyun.com/product/yunxiao">云效</a><sup>[9]</sup>
, 腾讯的 <a href="https://coding.net/">Coding</a><sup>[10]</sup>
 等； 当然如果是小项目也可以存在代码仓库中。</li>
</ul>
<blockquote>
<p>万事皆可法；工作中的大部分事物都是有套路的；愿你选对套路，归来仍是高效 dev。</p></blockquote>
<div class="references">
                <h2>参考</h2>
                <ol><li>MADR: <a href="https://adr.github.io/madr/" rel="noopener noreferrer">https://adr.github.io/madr/</a></li><li>adr-log: https://adr.github.io/adr-log/: <a href="https://adr.github.io/adr-log/" rel="noopener noreferrer">https://adr.github.io/adr-log/</a></li><li>嵌入式架构决策记录：https://adr.github.io/e-adr/: <a href="https://adr.github.io/e-adr/" rel="noopener noreferrer">https://adr.github.io/e-adr/</a></li><li>eadlsync:https://adr.github.io/eadlsync/: <a href="https://adr.github.io/eadlsync/" rel="noopener noreferrer">https://adr.github.io/eadlsync/</a></li><li>SE Repo: https://github.com/adr/serepo: <a href="https://github.com/adr/serepo" rel="noopener noreferrer">https://github.com/adr/serepo</a></li><li>Confluence: <a href="https://www.atlassian.com/software/confluence" rel="noopener noreferrer">https://www.atlassian.com/software/confluence</a></li><li>语雀: <a href="https://www.yuque.com/" rel="noopener noreferrer">https://www.yuque.com/</a></li><li>石墨: <a href="https://shimo.im/" rel="noopener noreferrer">https://shimo.im/</a></li><li>云效: <a href="https://www.aliyun.com/product/yunxiao" rel="noopener noreferrer">https://www.aliyun.com/product/yunxiao</a></li><li>Coding: <a href="https://coding.net/" rel="noopener noreferrer">https://coding.net/</a></li></ol>
            </div>]]></description></item></channel></rss>